{"version":3,"sources":["webpack:///./src/App.vue?ef82","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/store/modules/app.js","webpack:///./src/store/modules/nav.js","webpack:///./src/store/modules/status.js","webpack:///./src/store/index.js","webpack:///src/components/layout/Levelbar.vue","webpack:///./src/components/layout/Levelbar.vue?e11d","webpack:///./src/components/layout/Levelbar.vue","webpack:///src/components/layout/Navbar.vue","webpack:///./src/components/layout/Navbar.vue?b286","webpack:///./src/components/layout/Navbar.vue","webpack:///src/components/layout/SidebarItem.vue","webpack:///./src/components/layout/SidebarItem.vue?e329","webpack:///./src/components/layout/SidebarItem.vue","webpack:///src/components/layout/Sidebar.vue","webpack:///./src/components/layout/Sidebar.vue?cc6a","webpack:///./src/components/layout/Sidebar.vue","webpack:///src/components/layout/AppMain.vue","webpack:///./src/components/layout/AppMain.vue?abe7","webpack:///src/components/layout/Layout.vue","webpack:///./src/components/layout/AppMain.vue","webpack:///./src/components/layout/Layout.vue?1a12","webpack:///./src/components/layout/Layout.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///src/components/editor/Equirectangular.vue","webpack:///./src/components/editor/Equirectangular.vue?7cf6","webpack:///./src/components/editor/Equirectangular.vue","webpack:///src/components/editor/CubeFaces.vue","webpack:///./src/components/editor/CubeFaces.vue?27d3","webpack:///./src/components/editor/CubeFaces.vue","webpack:///src/components/editor/Cylindrical.vue","webpack:///./src/components/editor/Cylindrical.vue?68c1","webpack:///./src/components/editor/Cylindrical.vue","webpack:///src/components/editor/Flat.vue","webpack:///./src/components/editor/Flat.vue?e797","webpack:///./src/components/editor/Flat.vue","webpack:///./src/components/editor/AddProject.vue?caaa","webpack:///./src/components/editor/AddProject.vue","webpack:///src/components/editor/index.vue","webpack:///src/components/editor/AddProject.vue","webpack:///./src/components/editor/index.vue?a40a","webpack:///./src/components/editor/index.vue"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","app","state","sidebar","opened","Cookies","get","theme","livenewsChannels","mutations","TOGGLE_SIDEBAR","set","actions","ToggleSideBar","_ref","commit","nav","navbar","list","text","children","test","arr","maxID","selectHotType","selectUploadPicture","selectJumpScene","inputHotIntroduction","inputHotUrl","newIsDeleteHotSpot","position","pid","activeJumpHotSpot","inactiveJumpHotSpot","activeImageHotSpot","inactiveImageHotSpot","activeUrlHotSpot","inactiveUrlHotSpot","activePost","sceneDelete","oldselected","isVideoTransformX","valueX","isVideoTransformY","valueY","isVideoRotate","valueR","videoRotate","isVideoScale","valueS","videoScale","videoGroup","imgType","isAddProject","dateVal","pickerOptions0","disabledDate","time","getTime","Date","now","imgFile","fileName","fileUrl","fileUrlArr","isHotspot","isImageHotspot","isVideoHotspot","isSubmit","hotSpots","imgHotSpots","sum","isJumpHotSpot","isVideoHotSpot","isImgHotSpot","hotSpotsImgs","key","value","tempLocation","isDeleteHotSpot","jumpHotSpots","urlHotSpots","imageHotSpots","viewNo","panoUploadUrl","tietu","output","addArr","msg2","saveimgType","saveimgFile","saveFileUrlArr","saveHotSpotsImgs","saveTietu","sprites","saveInformation","interval","setInterval","clearInterval","temp","temp2","temp3","i","length","j","push","flag","keys","keys_default","o","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","err","return","clearHotSpots","showJumpHotSpot","showImgHotSpot","showVideoHotSpot","hideHotSpot","saveTempLocation","saveJumpHotSpot","obj","hotTarget","hotIntroduction","location","panAndTilt","saveUrlHotSpot","hotUrl","saveImageHotSpot","hotImage","saveViewNo","deleteHotSpot","deletedHotSpot","newDeleteHotSpot","deleteJumpHotSpot","scene","hotspot","splice","index","deleteImageHotSpot","polyhotspot","deleteUrlHotSpot","deleteScene","createXmlString","showActiveJumpSpot","showInactiveJumpSpot","showActiveImageSpot","showInactiveImageSpot","showActiveUrlSpot","showInactiveUrlSpot","addMaxID","saveTreeHotIntroduction","l","title","result","savehotIntroduction","k","saveTreeHotUrl","url","savehotUrl","saveTreeJumpScene","replace","savehotTarget","saveTreeUploadPicture","target","savehotImage","changeJumpHotSpot","changeImageHotSpot","changeUrlHotSpot","changeTreeJumpHotSpot","changeTreeUrlHotSpot","changeTreeImageHotSpot","saveTreeJumpHotSpot","newobj","saveTreeUrlHotSpot","saveTreeImageHotSpot","saveSelectHotType","saveSelectUploadPicture","saveSelectJumpScene","saveInputHotIntroduction","saveInputHotUrl","saveOldSelected","changeOldSelectedX","parseInt","changeOldSelectedY","changeOldSelectedR","changeOldSelectedS","parseFloat","Math","round","saveVideoGroup","emptyVideoGroup","saveOldselectedVector","vector","saveOldselectedSelect","select","updateValueX","updateValueY","updateValueR","updateValueS","msg","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","Vue","use","Vuex","store","Store","modules","Levelbar","created","getBreadcrumb","data","levelList","methods","showName","Object","matched","$route","filter","item","first","path","concat","watch","activeIndex","jobForTest","thanksALot","layout_Levelbar","_vm","staticClass","separator","_l","redirect","to","_v","_s","Navbar","components","Levelbar_normalizeComponent","ssrContext","fileList","dialogFormVisible","shortName","address","longitude","latitude","proInfo","createUserNo","companyNo","token","formLabelWidth","computed","extends_default","vuex_esm","userName","toggleSideBar","$store","dispatch","logout","then","reload","sendProject","that","$ajax","method","info","_token","viewType","status","transformRequest","ret","it","encodeURIComponent","headers","Content-Type","response","console","log","catch","error","drawHotspot","drawImageHotspot","drawVideoHotspot","submitInformation","imgName","hotSpotsTarget","len","node","substring","lastIndexOf","x","y","z","_k","arr2","_i","_len","fastdfsURL","join","_j","_len2","hotfastdfsURL","user","xmlstring","loadXMLDoc","dname","xhttp","window","XMLHttpRequest","ActiveXObject","open","send","responseText","layout_Navbar","mode","slot","on","click","staticStyle","display","right","components_layout_Navbar","Navbar_normalizeComponent","SidebarItem","props","routes","type","Array","layout_SidebarItem","hidden","noDropdown","icon-class","icon","_e","child","Sidebar","SidebarItem_normalizeComponent","VideoRotate","VideoScale","Scene","TempLocation","Tree","tree","label","newobj2","newobj3","len2","_obj","match","len3","_j2","_obj2","num","_i2","_j3","_i3","_j4","_i4","_j5","JSON","parse","stringify_default","hotSpotsType","_i5","hotSpotsImg","targetOptions","fileSum","ajaxUrl1","ajaxUrl2","value1","value2","selectGetX","Xvalue","selectGetY","Yvalue","selectGetR","Rvalue","selectGetS","Svalue","addTransformX","removeTransformX","addTransformY","removeTransformY","addRotate","removeRotate","addScale","removeScale","child2","result1","$refs","input1","result2","input2","result3","result4","input3","input","input4","child1","index1","expand","e","expandicon","parentNode","querySelector","innerText","expand1","expandicon1","expand2","expandicon2","newChangeImgFile","src","activeHotSpot","changeImgFile","event","getAttribute","panoUploadSuccess","file","params","summary","imgUploadSuccess","tempArr","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","obj2","uploadError","alert","beforeRemove","$confirm","panoHandleRemove","imgHandleRemove","defaultTarget","hotSpotsTypes","optionsX","optionsY","optionsR","optionsS","layout_Sidebar","default-active","width","$event","visible","update:visible","label-width","action","on-remove","before-remove","onError","onSuccess","size","model","callback","$$v","expression","disabled","label-position","directives","rawName","clearable","placeholder","change","ref","blur","preventDefault","text-align","stopPropagation","domProps","composing","padding-left","childindex","$$selectedVal","prototype","call","options","selected","map","_value","$set","multiple","targetItem","refInFor","padding","height","components_layout_Sidebar","Sidebar_normalizeComponent","AppMain","editor","layout_AppMain","min-height","Layout","AppMain_normalizeComponent","layout_Layout","class","hideSidebar","components_layout_Layout","Layout_normalizeComponent","Router","constantRouterMap","component","Promise","resolve","bind","router","scrollBehavior","axios","config","productionTip","ElementUI","THREE","h","App","$mount","camera","renderer","isUserInteracting","lon","lat","onPointerDownPointerX","onPointerDownLon","onPointerDownPointerY","onPointerDownLat","phi","theta","xPositionArr","yPositionArr","zPositionArr","mesh","uuid","Equirectangular","imgUrl","drawedHotspots","drawedImgHotSpots","transformX","transformY","rotate","scale","newvalue","document","getElementById","innerHTML","init","animate","toLowerCase","calculatePanandTilt","material","geometry","vertices","hasOwnProperty","drawJumpHotSpot","active","drawImageHotSpot","drawNewImageHotSpot","newDrawVideoHotSpotX","newDrawVideoHotSpotY","newDrawVideoHotSpotR","drawScaleVideoHotSpot","mounted","readXMl","jquery_default","a","ajax","dataType","timeout","async","success","xml","panorama","find","polystyle","fileArr","obj3","eq","attr","len1","obj1","tilt","vertex","_vertex","imgurl","container","PerspectiveCamera","innerWidth","innerHeight","Vector3","SphereGeometry","canvas","createElement","style","backgroundColor","context","getContext","img","Image","onload","drawImage","texture","Texture","image","needsUpdate","minFilter","LinearFilter","MeshBasicMaterial","transparent","Mesh","add","drawJumpHotSpots","drawImageHotSpots","count","_obj3","_obj4","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","getElementsByTagName","addEventListener","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","dataTransfer","dropEffect","body","opacity","onWindowResize","aspect","updateProjectionMatrix","clientX","clientY","unproject","intersects","Raycaster","sub","normalize","intersectObjects","point","cursor","xAverage","yAverage","zAverage","spriteMaterial","SpriteMaterial","sprite","Sprite","endV","copy","object","remove","ID","_geom","Geometry","PointsMaterial","color","Points","_geom2","_material","ParticleBasicMaterial","_point","line","_mesh","Line","LineSegments","_geom3","_material2","_point2","line1","mesh1","line2","mesh2","angleCalculation","b","c","vn","clone","cross","sqrt","v1","v2","v3","v4","geom","p0","p1","p2","p3","d01","d02","d03","max","normal","computeFaceNormals","_panAndTilt","faces","Face3","_material3","MeshNormalMaterial","flatShading","_target","_location","_arr","_selected","client","_vector","drawVideoHotSpot","_target2","_location2","_arr2","fov","deltaY","clamp","star","update","requestAnimationFrame","min","degToRad","sin","cos","lookAt","pan","atan","PI","asin","variable","newsrc","_loop","variablePosition","_position","MeshLambertMaterial","pattern","raycaster","drawRotateVideoHotSpot","rotatex1","rotatey1","rotatex2","rotatey2","rotatex3","rotatey3","rotatex4","rotatey4","deviceCoordinates","screen","screenCoordinates","project","selectArray","worldDevice","world","array","newselect","worldArray","_i6","_i7","newselectArray","_i8","_i9","newDrawVideoHotSpotS","_i10","_i11","editor_Equirectangular","texture_placeholder","components_editor_Equirectangular","CubeFaces_scene","CubeFaces_camera","CubeFaces_renderer","controls","CubeFaces_xPositionArr","CubeFaces_yPositionArr","CubeFaces_zPositionArr","tempXPositonArr","tempYPositonArr","tempZPositonArr","CubeFaces_isUserInteracting","CubeFaces_onPointerDownPointerX","CubeFaces_onPointerDownPointerY","CubeFaces_lon","CubeFaces_onPointerDownLon","CubeFaces_lat","CubeFaces_onPointerDownLat","CubeFaces_phi","CubeFaces_theta","CubeFaces","tempfileUrl","addition","OrbitControls","enableZoom","enablePan","enableDamping","rotateSpeed","textures","getTexturesFromAtlasFile","materials","skyBox","CubeGeometry","fillStyle","fillRect","loadTexture","BoxGeometry","geometry2","material2","ball","CanvasRenderer","atlasImgUrl","tilesNum","imageObj","tileWidth","overdraw","selected2","Number","editor_CubeFaces","components_editor_CubeFaces","CubeFaces_normalizeComponent","Cylindrical_scene","Cylindrical_camera","Cylindrical_renderer","Cylindrical_isUserInteracting","Cylindrical_lon","Cylindrical_lat","Cylindrical_onPointerDownPointerX","Cylindrical_onPointerDownLon","Cylindrical_onPointerDownPointerY","Cylindrical_onPointerDownLat","Cylindrical_phi","Cylindrical_theta","Cylindrical_xPositionArr","Cylindrical_yPositionArr","Cylindrical_zPositionArr","Cylindrical","m","CylinderGeometry","TextureLoader","load","draw","_canvas","_context","editor_Cylindrical","components_editor_Cylindrical","Cylindrical_normalizeComponent","Flat_scene","Flat_camera","Flat_renderer","Flat_xPositionArr","Flat_yPositionArr","Flat_zPositionArr","Flat_mesh","Flat_isUserInteracting","Flat_onPointerDownPointerX","Flat_lon","Flat","PlaneGeometry","_img","editor_Flat","editor_AddProject","plain","_m","Flat_normalizeComponent","AddProject","AddProject_normalizeComponent","query","isEquirectangular","isCubeFaces","isCylindrical","isFlat","components_editor","editor_Component","editor_normalizeComponent","__webpack_exports__"],"mappings":"2MAGeA,GADEC,OAFP,WAAgB,IAAaC,EAAbC,KAAaC,eAA0BC,EAAvCF,KAAuCG,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiBE,OAAOC,GAAA,SAAYH,EAAA,oBAE7FI,oBCqBjBC,EAvBUC,EAAQ,OAcjCC,ECLAC,KAAA,ODOEb,GATF,EAEA,KAEA,KAEA,MAUgC,yCEIjBc,GAxBbC,OACEC,SACEC,SAAUC,IAAQC,IAAI,kBAExBC,MAAO,UACPC,iBAAkBH,IAAQC,IAAI,qBAAuB,MAEvDG,WACEC,eAAgB,SAAAR,GACVA,EAAMC,QAAQC,OAChBC,IAAQM,IAAI,gBAAiB,GAE7BN,IAAQM,IAAI,gBAAiB,GAE/BT,EAAMC,QAAQC,QAAUF,EAAMC,QAAQC,SAG1CQ,SACEC,cAAe,SAAAC,IACbC,EAD6BD,EAAbC,QACT,qBC4NEC,GAxHXC,QACIC,OAEQlB,KAAM,OACNmB,KAAM,OACNC,WAEQpB,KAAM,MACNmB,KAAM,QAGNnB,KAAM,SACNmB,KAAM,WAGNnB,KAAM,cACNmB,KAAM,gBAGNnB,KAAM,UACNmB,KAAM,cAKdnB,KAAM,OACNmB,KAAM,OACNC,WAEQpB,KAAM,OACNmB,KAAM,SAGNnB,KAAM,OACNmB,KAAM,SAGNnB,KAAM,gBACNmB,KAAM,kBAGNnB,KAAM,QACNmB,KAAM,UAGNnB,KAAM,SACNmB,KAAM,WAGNnB,KAAM,aACNmB,KAAM,6DCodfE,GA7nBbnB,OACEoB,OACAC,MAAM,EACNC,cAAc,GACdC,oBAAoB,GACpBC,gBAAgB,GAChBC,qBAAqB,GACrBC,YAAY,GACZC,oBAAmB,EACnBC,YACAC,OACAC,mBAAkB,EAClBC,qBAAoB,EACpBC,oBAAmB,EACnBC,sBAAqB,EACrBC,kBAAiB,EACjBC,oBAAmB,EACnBC,cACAC,eAIAC,eAEAC,mBAAkB,EAClBC,OAAO,EAGPC,mBAAkB,EAClBC,OAAO,EAGPC,eAAc,EACdC,OAAO,EACPC,YAAY,EAEZC,cAAa,EACbC,OAAO,GACPC,WAAW,EAEXC,cAGAC,QAAS,OACTC,cAAa,EAYbC,QAAS,GAITC,gBACEC,aADc,SACDC,GACX,OAAOA,EAAKC,UAAYC,KAAKC,MAAQ,QAUzCC,SAASC,SAAS,eAAeC,SAAS,kCAoB1CC,cAGAC,WAAU,EACVC,gBAAe,EACfC,gBAAe,EACfC,UAAS,EACTC,YACAC,eAIAC,OACAC,eAAc,EACdC,gBAAe,EAEfC,cAAa,EACbC,eAAeC,IAAM,eAAeC,MAAQ,iBAAiBD,IAAM,eAAeC,MAAQ,iBAE1FC,gBACAC,iBAAgB,EAChBC,gBACAC,eACAC,iBAEAC,OAAO,GACPC,cAAc,GACdC,SACAC,OAAO,0CAET7E,WAEE8E,OAAO,SAACrF,EAAMsF,GACZtF,EAAMoB,IAAIkE,GAEZC,YAAY,SAACvF,EAAMsF,GACjBtF,EAAMkD,QAAQoC,GA2DhBE,YAAY,SAACxF,EAAMsF,GACjBtF,EAAM2D,QAAQ2B,GAGhBG,eAAe,SAACzF,EAAMsF,GAEpBtF,EAAM8D,WAAWwB,GAEnBI,iBAAiB,SAAC1F,EAAMsF,GACtBtF,EAAMyE,aAAaa,GAErBK,UAAU,SAAC3F,EAAMsF,GACftF,EAAMmF,MAAMG,GAEdvB,UAAU,SAAC/D,GACTA,EAAM+D,WAAW/D,EAAM+D,WAGzBC,eAAe,SAAChE,GACdA,EAAMgE,gBAAgBhE,EAAMgE,gBAG9BC,eAAe,SAACjE,GACdA,EAAMiE,gBAAgBjE,EAAMiE,gBAG9BC,SAAS,SAAClE,GACRA,EAAMkE,UAAUlE,EAAMkE,UAGxBC,SAAS,SAACnE,EAAMsF,GACdtF,EAAMmE,SAASmB,EAAKM,SAGtBxB,YAAY,SAACpE,EAAMsF,GACjBtF,EAAMoE,YAAYkB,EAAKlB,aAWzByB,gBAAgB,SAAC7F,GAEf,IAAImE,EAASnE,EAAMmE,SACfC,EAAYpE,EAAMoE,YAClBb,EAAK,EACTvD,EAAMkE,UAAUlE,EAAMkE,SACtB,IAAI4B,EAASC,YAAY,WAEvB,GADAxC,GAAM,MACFvD,EAAMmE,WAAWA,GAAgB,KAANZ,GAAavD,EAAMoE,cAAcA,GAAmB,KAANb,GAAW,CACtFyC,cAAcF,GAOd,IANA,IAAIhB,EAAa9E,EAAM8E,aACnBC,EAAY/E,EAAM+E,YAClBC,EAAchF,EAAMgF,cACpBiB,KACAC,KACAC,KACIC,EAAE,EAAEA,EAAEtB,EAAauB,OAAOD,IAChC,IAAI,IAAIE,EAAE,EAAEA,EAAEtG,EAAMmE,SAASkC,OAAOC,IAC/BxB,EAAasB,GAAGxE,SAAS,IAAI5B,EAAMmE,SAASmC,GAAG1E,SAAS,IACzDqE,EAAKM,KAAKzB,EAAasB,IAK7B,IAAI,IAAIA,EAAE,EAAEA,EAAErB,EAAYsB,OAAOD,IAC/B,IAAI,IAAIE,EAAE,EAAEA,EAAEtG,EAAMoE,YAAYiC,OAAOC,IAClCvB,EAAYqB,GAAGxE,SAAS,IAAI5B,EAAMoE,YAAYkC,GAAG1E,SAAS,IAC3DsE,EAAMK,KAAKxB,EAAYqB,IAK7B,IAAI,IAAIA,EAAE,EAAEA,EAAEpB,EAAcqB,OAAOD,IACjC,IAAI,IAAIE,EAAE,EAAEA,EAAEtG,EAAMoE,YAAYiC,OAAOC,IAClCtB,EAAcoB,GAAGxE,SAAS,IAAI5B,EAAMoE,YAAYkC,GAAG1E,SAAS,IAC7DuE,EAAMI,KAAKvB,EAAcoB,IAK/BpG,EAAM8E,aAAamB,EACnBjG,EAAM+E,YAAYmB,EAClBlG,EAAMgF,cAAcmB,EACpB,IAAIK,GAAK,EACLC,EAAKC,IAAY1G,GACjB2G,KArCkFC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAsCtF,QAAAC,EAAAC,EAAAC,IAAeT,KAAfG,GAAAI,EAAAC,EAAAE,QAAAC,MAAAR,GAAA,EAAoB,KAAZlC,EAAYsC,EAAArC,MACV,OAALD,IACDiC,EAAEjC,GAAK1E,EAAM0E,KAxCqE,MAAA2C,GAAAR,GAAA,EAAAC,EAAAO,EAAA,aAAAT,GAAAK,EAAAK,QAAAL,EAAAK,SAAA,WAAAT,EAAA,MAAAC,GA2CtF,IAAI,IAAIV,EAAE,EAAEA,EAAEpG,EAAMqE,IAAIgC,OAAOD,IAC1BpG,EAAMqE,IAAI+B,GAAGzC,QAAQE,QAAQ,IAAI8C,EAAEhD,QAAQE,QAAQ,KACpD2C,GAAK,EACLxG,EAAMqE,IAAI+B,GAAGO,GAGdH,GACDxG,EAAMqE,IAAIkC,KAAKI,KAOnB,MAOJY,cAAc,SAACvH,GAEbA,EAAMmE,YAENnE,EAAMoE,eAENpE,EAAM8E,gBACN9E,EAAM+E,eACN/E,EAAMgF,kBAERwC,gBAAgB,SAACxH,GACfA,EAAMsE,eAAc,EACpBtE,EAAMwE,cAAa,EACnBxE,EAAMuE,gBAAe,EACrBvE,EAAMsB,cAAc,GACpBtB,EAAMuB,oBAAoB,GAC1BvB,EAAMwB,gBAAgB,IAExBiG,eAAe,SAACzH,GACdA,EAAMwE,cAAa,EACnBxE,EAAMsE,eAAc,EACpBtE,EAAMuE,gBAAe,EACrBvE,EAAMsB,cAAc,GACpBtB,EAAMuB,oBAAoB,GAC1BvB,EAAMwB,gBAAgB,IAExBkG,iBAAiB,SAAC1H,GAChBA,EAAMuE,gBAAe,EACrBvE,EAAMsE,eAAc,EACpBtE,EAAMwE,cAAa,EACnBxE,EAAMsB,cAAc,GACpBtB,EAAMuB,oBAAoB,GAC1BvB,EAAMwB,gBAAgB,IAGxBmG,YAAY,SAAC3H,GACXA,EAAMwE,cAAa,EACnBxE,EAAMsE,eAAc,EACpBtE,EAAMuE,gBAAe,GAEvBqD,iBAAiB,SAAC5H,EAAMsF,GACtBtF,EAAM4E,aAAaU,GAErBuC,gBAAgB,SAAC7H,EAAMsF,GACrB,IAAIwC,KACJA,EAAIC,UAAUzC,EAAKyC,UACnBD,EAAIE,gBAAgB1C,EAAK0C,gBACzBF,EAAIlG,SAAS5B,EAAM4E,aAAaqD,SAChCH,EAAII,WAAWlI,EAAM4E,aAAasD,WAClClI,EAAM8E,aAAayB,KAAKuB,IAE1BK,eAAe,SAACnI,EAAMsF,GACpB,IAAIwC,KACJA,EAAIM,OAAO9C,EAAK8C,OAChBN,EAAIlG,SAAS5B,EAAM4E,aAAaqD,SAChCH,EAAII,WAAWlI,EAAM4E,aAAasD,WAClClI,EAAM+E,YAAYwB,KAAKuB,IAEzBO,iBAAiB,SAACrI,EAAMsF,GACtB,IAAIwC,KACJA,EAAIQ,SAAShD,EAAKgD,SAClBR,EAAIlG,SAAS5B,EAAM4E,aAAaqD,SAChCH,EAAII,WAAWlI,EAAM4E,aAAasD,WAClClI,EAAMgF,cAAcuB,KAAKuB,IAE3BS,WAAW,SAACvI,EAAMsF,GAChBtF,EAAMiF,OAAOK,EAAKL,OAClBjF,EAAMkF,cAAc,aAAalF,EAAMiF,OAAO,WAEhDuD,cAAc,SAACxI,GACbA,EAAM6E,iBAAgB,GAExB4D,eAAe,SAACzI,GACdA,EAAM6E,iBAAgB,EACtB7E,EAAM2B,oBAAmB,GAG3B+G,iBAAiB,SAAC1I,EAAMsF,GACtBtF,EAAM2B,oBAAmB,EACzB3B,EAAM6B,IAAIyD,EAAKzD,IACf7B,EAAM4B,SAAS0D,EAAK1D,UAGtB+G,kBAAkB,SAAC3I,EAAMsF,GAEvBtF,EAAMoB,IAAIkE,EAAKsD,OAAOC,QAAQC,OAAOxD,EAAKyD,MAAM,GAChD/I,EAAMqB,MAAMrB,EAAMqB,MAAM,GAE1B2H,mBAAmB,SAAChJ,EAAMsF,GAExBtF,EAAMoB,IAAIkE,EAAKsD,OAAOK,YAAYjE,cAAc8D,OAAOxD,EAAKyD,MAAM,GAClE/I,EAAMqB,MAAMrB,EAAMqB,MAAM,GAE1B6H,iBAAiB,SAAClJ,EAAMsF,GAEtBtF,EAAMoB,IAAIkE,EAAKsD,OAAOK,YAAYlE,YAAY+D,OAAOxD,EAAKyD,MAAM,GAChE/I,EAAMqB,MAAMrB,EAAMqB,MAAM,GAG1B8H,YAAY,SAACnJ,EAAMsF,GACjBtF,EAAMqC,aAAa0G,MAAMzD,GACzBtF,EAAMoB,IAAI0H,OAAOxD,EAAK,GACtBtF,EAAM8D,WAAWgF,OAAOxD,EAAK,IAG/B8D,gBAAgB,SAACpJ,EAAMsF,GACrBtF,EAAMoF,OAAOE,GAGf+D,mBAAmB,SAACrJ,EAAMsF,GACxBtF,EAAMoC,WAAWkD,EACjBtF,EAAM8B,mBAAmB9B,EAAM8B,mBAEjCwH,qBAAqB,SAACtJ,GACpBA,EAAM+B,qBAAqB/B,EAAM+B,qBAEnCwH,oBAAoB,SAACvJ,EAAMsF,GACzBtF,EAAMoC,WAAWkD,EACjBtF,EAAMgC,oBAAoBhC,EAAMgC,oBAElCwH,sBAAsB,SAACxJ,GACrBA,EAAMiC,sBAAsBjC,EAAMiC,sBAEpCwH,kBAAkB,SAACzJ,EAAMsF,GACvBtF,EAAMoC,WAAWkD,EACjBtF,EAAMkC,kBAAkBlC,EAAMkC,kBAEhCwH,oBAAoB,SAAC1J,GACnBA,EAAMmC,oBAAoBnC,EAAMmC,oBAQlCwH,SAAS,SAAC3J,EAAMsF,GACdtF,EAAMqB,MAAMiE,GAGdsE,wBAAwB,SAAC5J,EAAMsF,GAC7BtF,EAAMoB,IAAIkE,EAAKc,GAAGyC,QAAQvD,EAAKuE,GAAGC,MAAM,IAAIxE,EAAKyE,OAAO,KAE1DC,oBAAoB,SAAChK,EAAMsF,GACzBtF,EAAM8E,aAAaQ,EAAK2E,GAAGjC,gBAAgB1C,EAAKyE,QAGlDG,eAAe,SAAClK,EAAMsF,GACpBtF,EAAMoB,IAAIkE,EAAKc,GAAG6C,YAAYlE,YAAYO,EAAKuE,GAAGM,IAAI,UAAU7E,EAAKyE,QAEvEK,WAAW,SAACpK,EAAMsF,GAChBtF,EAAM+E,YAAYO,EAAK2E,GAAG7B,OAAO9C,EAAKyE,QAGxCM,kBAAkB,SAACrK,EAAMsF,GACvBtF,EAAMoB,IAAIkE,EAAKc,GAAGyC,QAAQvD,EAAKuE,GAAGM,IAAI,IAAI7E,EAAKyE,OAAOO,QAAQ,KAAK,QAAQ,KAE7EC,cAAc,SAACvK,EAAMsF,GACnBtF,EAAM8E,aAAaQ,EAAK2E,GAAGlC,UAAUzC,EAAKyE,QAG5CS,sBAAsB,SAACxK,EAAMsF,GAC3BtF,EAAMoB,IAAIkE,EAAKc,GAAG6C,YAAYjE,cAAcM,EAAKuE,GAAGY,OAAO,UAAUnF,EAAKyE,QAE5EW,aAAa,SAAC1K,EAAMsF,GAClBtF,EAAMgF,cAAcM,EAAK2E,GAAG3B,SAAShD,EAAKyE,QAG5CY,kBAAkB,SAAC3K,EAAMsF,GACvBtF,EAAM8E,aAAaQ,EAAKyD,OAAOf,gBAAgB1C,EAAK0C,gBACpDhI,EAAM8E,aAAaQ,EAAKyD,OAAOhB,UAAUzC,EAAKyC,WAEhD6C,mBAAmB,SAAC5K,EAAMsF,GACxBtF,EAAMgF,cAAcM,EAAKyD,OAAOT,SAAShD,EAAKgD,UAEhDuC,iBAAiB,SAAC7K,EAAMsF,GACtBtF,EAAM+E,YAAYO,EAAKyD,OAAOX,OAAO9C,EAAK8C,QAG5C0C,sBAAsB,SAAC9K,EAAMsF,GAC3BtF,EAAMoB,IAAIkE,EAAKsD,OAAOC,QAAQvD,EAAKyD,OAAOe,MAAM,IAAIxE,EAAK0C,gBAAgB,IACzEhI,EAAMoB,IAAIkE,EAAKsD,OAAOC,QAAQvD,EAAKyD,OAAOoB,IAAI,IAAI7E,EAAKyC,UAAUuC,QAAQ,KAAK,QAAQ,KAExFS,qBAAqB,SAAC/K,EAAMsF,GAC1BtF,EAAMoB,IAAIkE,EAAKsD,OAAOK,YAAYlE,YAAYO,EAAKyD,OAAOoB,IAAI,UAAU7E,EAAK8C,QAE/E4C,uBAAuB,SAAChL,EAAMsF,GAC5BtF,EAAMoB,IAAIkE,EAAKsD,OAAOK,YAAYjE,cAAcM,EAAKyD,OAAO0B,OAAO,UAAUnF,EAAKgD,UAGpF2C,oBAAoB,SAACjL,EAAMsF,GACzB,IAAI4F,KACJA,EAAOzL,GAAG,SAASO,EAAM8E,aAAauB,OAAO,GAC7C6E,EAAOtJ,SAAS5B,EAAM4E,aAAaqD,SACnCiD,EAAOhD,WAAWlI,EAAM4E,aAAasD,WACrCgD,EAAOpB,MAAM,IAAIxE,EAAK0C,gBAAgB,IACtCkD,EAAOf,IAAI,IAAI7E,EAAKyC,UAAUuC,QAAQ,KAAK,QAAQ,IACnDtK,EAAMoB,IAAIkE,EAAKsD,OAAOC,QAAQtC,KAAK2E,IAErCC,mBAAmB,SAACnL,EAAMsF,GACxB,IAAI4F,KACJA,EAAOzL,GAAG,UAAY6F,EAAKsD,MAAQ5I,EAAM+E,YAAYsB,OACrD6E,EAAOtJ,SAAS5B,EAAM4E,aAAaqD,SACnCiD,EAAOhD,WAAWlI,EAAM4E,aAAasD,WACrCgD,EAAOf,IAAI,UAAU7E,EAAK8C,OAC1BpI,EAAMoB,IAAIkE,EAAKsD,OAAOK,YAAYlE,YAAYwB,KAAK2E,IAErDE,qBAAqB,SAACpL,EAAMsF,GAC1B,IAAI4F,GACJA,GAAU,WACVA,EAAOtJ,SAAS5B,EAAM4E,aAAaqD,SACnCiD,EAAOhD,WAAWlI,EAAM4E,aAAasD,WACrCgD,EAAOT,OAAO,UAAUnF,EAAKgD,SAC7BtI,EAAMoB,IAAIkE,EAAKsD,OAAOK,YAAYjE,cAAcuB,KAAK2E,IAGvDG,kBAAkB,SAACrL,EAAMsF,GACvBtF,EAAMsB,cAAcgE,GAGtBgG,wBAAwB,SAACtL,EAAMsF,GAC7BtF,EAAMuB,oBAAoB+D,GAG5BiG,oBAAoB,SAACvL,EAAMsF,GACzBtF,EAAMwB,gBAAgB8D,GAGxBkG,yBAAyB,SAACxL,EAAMsF,GAC9BtF,EAAMyB,qBAAqB6D,GAG7BmG,gBAAgB,SAACzL,EAAMsF,GACrBtF,EAAM0B,YAAY4D,GAUpBoG,gBAAgB,SAAC1L,EAAMsF,GACrBtF,EAAMsC,YAAYgD,GAEpBqG,mBAAmB,SAAC3L,EAAMsF,GAExBtF,EAAMwC,OAASoJ,SAAStG,GACxBtF,EAAMuC,mBAAmBvC,EAAMuC,mBAEjCsJ,mBAAmB,SAAC7L,EAAMsF,GAExBtF,EAAM0C,OAASkJ,SAAStG,GACxBtF,EAAMyC,mBAAmBzC,EAAMyC,mBAEjCqJ,mBAAmB,SAAC9L,EAAMsF,GAExBtF,EAAM4C,OAASgJ,SAAStG,GACxBtF,EAAM6C,aAAe+I,SAAStG,GAC9BtF,EAAM2C,eAAe3C,EAAM2C,eAE7BoJ,mBAAmB,SAAC/L,EAAMsF,GACxBtF,EAAM+C,OAAS6I,SAAStG,GACxBtF,EAAMgD,YAAcgJ,WAAW1G,GAC/BtF,EAAMgD,WAAaiJ,KAAKC,MAAuB,GAAjBlM,EAAMgD,YAAe,GACnDhD,EAAM8C,cAAc9C,EAAM8C,cAE5BqJ,eAAe,SAACnM,EAAMsF,GACpBtF,EAAMiD,WAAWsD,KAAKjB,IAExB8G,gBAAgB,SAACpM,GACfA,EAAMiD,eAMRoJ,sBAAsB,SAACrM,EAAMsF,GAC3BtF,EAAMsC,YAAYgK,OAAShH,GAE7BiH,sBAAsB,SAACvM,EAAMsF,GAC3BtF,EAAMsC,YAAYkK,OAAO,GAAKlH,EAAK,GACnCtF,EAAMsC,YAAYkK,OAAO,GAAKlH,EAAK,GACnCtF,EAAMsC,YAAYkK,OAAO,GAAKlH,EAAK,IAGrCmH,aAAa,SAACzM,EAAMsF,GAClBtF,EAAMwC,OAAS8C,GAEjBoH,aAAa,SAAC1M,EAAMsF,GAClBtF,EAAM0C,OAAS4C,GAEjBqH,aAAa,SAAC3M,EAAMsF,GAClBtF,EAAM4C,OAAS0C,GAEjBsH,aAAa,SAAC5M,EAAMsF,GAClBtF,EAAM+C,OAASuC,IAOnB5E,SACE8E,YAAY,SAAA5E,EAAUiM,IACpBhM,EAD0BD,EAAdC,QACL,cAAcgM,IAEvBhH,gBAAgB,SAAAiH,IACdjM,EAD0BiM,EAAVjM,QACT,oBAETkD,UAAU,SAAAgJ,IACRlM,EADoBkM,EAAVlM,QACH,cAETqD,SAAS,SAAA8I,IACPnM,EADmBmM,EAAVnM,QACF,aAETmD,eAAe,SAAAiJ,IACbpM,EADyBoM,EAAVpM,QACR,mBAEToD,eAAe,SAAAiJ,IACbrM,EADyBqM,EAAVrM,QACR,mBAETsD,SAAS,SAAAgJ,EAAUN,IACjBhM,EADuBsM,EAAdtM,QACF,WAAWgM,IAEpBzI,YAAY,SAAAgJ,EAAUP,IACpBhM,EAD0BuM,EAAdvM,QACL,cAAcgM,MClnB3BQ,IAAIC,IAAIC,KAER,IAWeC,EAXD,IAAID,IAAKE,OACnBC,SACI3N,MAEAe,MAEAK,2CCPRwM,GACAC,QADA,WAEAxO,KAAAyO,iBAEAC,KAJA,WAKA,OACAC,UAAA,OAGAC,SACAC,SADA,WAEA,IAAAC,QAIAL,cANA,WAOA,IAAAM,EAAA/O,KAAAgP,OAAAD,QAAAE,OAAA,SAAAC,GAAA,OAAAA,EAAAxO,OACAyO,EAAAJ,EAAA,IACAI,GAAA,OAAAA,EAAAzO,MAAA,KAAAyO,EAAAC,OACAL,IAAArO,KAAA,KAAA0O,KAAA,MAAAC,OAAAN,IAEA/O,KAAA2O,UAAAI,IAGAO,OACAN,OADA,WAEAhP,KAAAyO,gBACAzO,KAAAuP,cACAvP,KAAAwP,aACAxP,KAAAyP,gBCpCeC,GADE5P,OAFP,WAAgB,IAAA6P,EAAA3P,KAAaD,EAAA4P,EAAA1P,eAA0BC,EAAAyP,EAAAxP,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,iBAA2B0P,YAAA,eAAAxP,OAAkCyP,UAAA,MAAiBF,EAAAG,GAAAH,EAAA,mBAAAT,EAAAvF,GAA6C,OAAAzJ,EAAA,sBAAgCoF,IAAA4J,IAAS,eAAAA,EAAAa,UAAApG,GAAAgG,EAAAhB,UAAA1H,OAAA,EAAA/G,EAAA,eAAkF0P,YAAA,cAAAxP,OAAiC4P,GAAA,MAASL,EAAAM,GAAAN,EAAAO,GAAAhB,EAAAxO,SAAAR,EAAA,eAAgDE,OAAO4P,GAAAd,EAAAE,QAAgBO,EAAAM,GAAAN,EAAAO,GAAAhB,EAAAxO,UAAA,OAEhaJ,oBCChC,IC2EA6P,GACAC,YACA7B,SD7EyB/N,EAAQ,OAcjB6P,CACd9B,EACAmB,GAT6B,EAV/B,SAAAY,GACE9P,EAAQ,SAaS,kBAEU,MAUG,SC8DhCkO,KAVA,WAWA,OAGA6B,YACAC,mBAAA,EACAC,UAAA,GACAC,QAAA,GACAC,UAAA,GACAC,SAAA,GACAC,QAAA,GAEAC,aAAA,uCACAC,UAAA,uCACAC,MAAA,8CACAC,eAAA,UAGAC,SAAAC,OACArC,OAAAsC,EAAA,EAAAtC,EACA,UACA,OACA,YAEAuC,SANA,eAYAzC,SACA0C,cADA,WAEAtR,KAAAuR,OAAAC,SAAA,kBAEAC,OAJA,WAKAzR,KAAAuR,OAAAC,SAAA,UAAAE,KAAA,WACA7I,SAAA8I,YAGAC,YATA,WAUA5R,KAAAwQ,mBAAA,EACA,IAAAqB,EAAA7R,KACAA,KAAA8R,OACA/G,IAAA,kBACAgH,OAAA,OACArD,MACA+B,UAAAoB,EAAApB,UACAC,QAAAmB,EAAAnB,QACAC,UAAAkB,EAAAlB,UACAC,SAAAiB,EAAAjB,SACAoB,KAAAH,EAAAhB,QACAC,aAAAe,EAAAf,aACAC,UAAAc,EAAAd,UACAkB,OAAAJ,EAAAb,MACAkB,SAAA,EACAC,OAAA,GAEAC,kBAAA,SAAA1D,GAEA,IAAA2D,EAAA,GACA,QAAAC,KAAA5D,EACA2D,GAAAE,mBAAAD,GAAA,IAAAC,mBAAA7D,EAAA4D,IAAA,IAEA,OAAAD,IAEAG,SACAC,eAAA,qDAEAf,KAAA,SAAAgB,GACA,IAAA7M,EAAA6M,EAAAhE,UACAmD,EAAAN,OAAA9P,OAAA,cAAAoE,WACA8M,QAAAC,IAAA/M,KAEAgN,MAAA,SAAAC,GACAH,QAAAC,IAAAE,MAyCAC,YArFA,WAsFA/S,KAAAuR,OAAAC,SAAA,cAEAwB,iBAxFA,WAyFAhT,KAAAuR,OAAAC,SAAA,mBAEAyB,iBA3FA,WA4FAjT,KAAAuR,OAAAC,SAAA,mBAGA0B,kBA/FA,WAgGAlT,KAAAuR,OAAAC,SAAA,aAEA/K,gBAlGA,WAmGAzG,KAAAuR,OAAAC,SAAA,oBAEApI,cArGA,WAsGApJ,KAAAuR,OAAA9P,OAAA,kBAGAuI,gBAzGA,WAgHA,IANA,IAAAhE,EAAA,6DAEAf,EAAAjF,KAAAuR,OAAA3Q,MAAAmB,KAAAkD,IACAkO,KACApO,KACAqO,KACApM,EAAA,EAAAqM,EAAApO,EAAAgC,OAAAD,EAAAqM,EAAArM,IAAA,CACA,IAAAsM,EAAA,QAAAtM,EAAA,GAGAmM,EAAAhM,KAAAlC,EAAA+B,GAAAzC,QAAAC,UACAO,EAAAoC,KAAAlC,EAAA+B,GAAAjC,UACAqO,EAAAjM,KAAAlC,EAAA+B,GAAAqE,QASArF,GAAA,iBAAAsN,EAAA,uHACArO,EAAA+B,GAAAzC,QAAAC,SAAA+O,UAAA,EAAAtO,EAAA+B,GAAAzC,QAAAC,SAAAgP,YAAA,MADA,2CACAvO,EAAA+B,GAAAtC,WAAAsC,GAAAxC,SADA,cACAS,EAAA+B,GAAAtC,WAAAsC,GAAAvC,QADA,o2CAgBA,QAAAyC,EAAA,EAAAA,EAAAjC,EAAA+B,GAAAtB,aAAAuB,OAAAC,IACAlB,GAAA,uCAAAkB,EAAA,cAAAjC,EAAA+B,GAAAtB,aAAAwB,GAAAyB,UAAAuC,QAAA,wBAAAjG,EAAA+B,GAAAtB,aAAAwB,GAAA4B,WAAA,6BAAA7D,EAAA+B,GAAAtB,aAAAwB,GAAA4B,WAAA,gBAAA7D,EAAA+B,GAAAtB,aAAAwB,GAAA0B,gBAAA,qBAAA3D,EAAA+B,GAAAtB,aAAAwB,GAAA1E,SAAA,uBAAAyC,EAAA+B,GAAAtB,aAAAwB,GAAA1E,SAAA,uBAAAyC,EAAA+B,GAAAtB,aAAAwB,GAAA1E,SAAA,wBAEA,QAAAqI,EAAA,EAAAA,EAAA5F,EAAA+B,GAAArB,YAAAsB,OAAA4D,IAAA,CAEA7E,GAAA,qBADA,UAAAgB,EAAA6D,GACA,iBAAA5F,EAAA+B,GAAArB,YAAAkF,GAAA7B,OAAA,0FACA/D,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MADA,WACA7D,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MADA,mBACA7D,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAiR,EADA,mBACAxO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAkR,EADA,mBACAzO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAmR,EADA,mDAEA1O,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MAFA,WAEA7D,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MAFA,mBAEA7D,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAiR,EAFA,mBAEAxO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAkR,EAFA,mBAEAzO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAmR,EAFA,mDAGA1O,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MAHA,WAGA7D,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MAHA,mBAGA7D,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAiR,EAHA,mBAGAxO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAkR,EAHA,mBAGAzO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAmR,EAHA,mDAIA1O,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MAJA,WAIA7D,EAAA+B,GAAArB,YAAAkF,GAAA/B,WAAA,MAJA,mBAIA7D,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAiR,EAJA,mBAIAxO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAkR,EAJA,mBAIAzO,EAAA+B,GAAArB,YAAAkF,GAAArI,SAAA,GAAAmR,EAJA,mDAQA,QAAAC,EAAA,EAAAA,EAAA3O,EAAA+B,GAAApB,cAAAqB,OAAA2M,IACA5N,GAAA,2EAAAf,EAAA+B,GAAApB,cAAAgO,GAAA1K,SAAA,kDACAjE,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MADA,WACA7D,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MADA,qBACA7D,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAiR,EADA,qBACAxO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAkR,EADA,qBACAzO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAmR,EADA,mDAEA1O,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MAFA,WAEA7D,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MAFA,qBAEA7D,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAiR,EAFA,qBAEAxO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAkR,EAFA,qBAEAzO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAmR,EAFA,mDAGA1O,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MAHA,WAGA7D,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MAHA,qBAGA7D,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAiR,EAHA,qBAGAxO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAkR,EAHA,qBAGAzO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAmR,EAHA,mDAIA1O,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MAJA,WAIA7D,EAAA+B,GAAApB,cAAAgO,GAAA9K,WAAA,MAJA,qBAIA7D,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAiR,EAJA,qBAIAxO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAkR,EAJA,qBAIAzO,EAAA+B,GAAApB,cAAAgO,GAAApR,SAAA,GAAAmR,EAJA,mDAOA3N,GAAA,ghBAMAA,GAAA,UACA2M,QAAAC,IAAA5M,GAQA,IAHA,IACAhE,KACA6R,KACAC,EAAA,EAAAC,EAHA/T,KAGAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAuC,OAAA6M,EAAAC,EAAAD,IACA9R,EAAAmF,KAJAnH,KAIAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAoP,GAAAtP,UACAxC,EAAAmF,KALAnH,KAKAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAoP,GAAArP,QAAAyG,QAAA,wCAGA,IADA,IAAA8I,EAAAhS,EAAAiS,KAAA,KACAC,EAAA,EAAAC,EARAnU,KAQAuR,OAAA3Q,MAAAmB,KAAAgE,MAAAkB,OAAAiN,EAAAC,EAAAD,IACAL,EAAA1M,KATAnH,KASAuR,OAAA3Q,MAAAmB,KAAAgE,MAAAmO,GAAA1P,UACAqP,EAAA1M,KAVAnH,KAUAuR,OAAA3Q,MAAAmB,KAAAgE,MAAAmO,GAAAzP,SAEA,IAAA2P,EAAAP,EAAAI,KAAA,KACAjU,KAAA8R,OACA/G,IAAA,iBACAgH,OAAA,OACArD,MAEAuD,OAlBAjS,KAkBAgR,MACAqD,KAnBArU,KAmBA8Q,aACAwD,UAAAtO,EACAgO,aACAI,gBACA/T,GAvBAL,KAuBAuR,OAAA3Q,MAAAmB,KAAA8D,QAEAuM,kBAAA,SAAA1D,GAEA,IAAA2D,EAAA,GACA,QAAAC,KAAA5D,EACA2D,GAAAE,mBAAAD,GAAA,IAAAC,mBAAA7D,EAAA4D,IAAA,IAEA,OAAAD,IAEAG,SACAC,eAAA,qDAEAf,KAAA,SAAAgB,GACAC,QAAAC,IAAAF,KAEAG,MAAA,SAAAC,GACAH,QAAAC,IAAAE,KAGA9S,KAAAuR,OAAA9P,OAAA,kBAAAuE,IAwBAuO,WAnPA,SAmPAC,GACA,IAAAC,EAAA,KASA,OAPAA,EADAC,OAAAC,eACA,IAAAA,eAGA,IAAAC,cAAA,sBAEAC,KAAA,MAAAL,GAAA,GACAC,EAAAK,OACAL,EAAAM,gBChXeC,GADElV,OAFP,WAAgB,IAAA6P,EAAA3P,KAAaD,EAAA4P,EAAA1P,eAA0BC,EAAAyP,EAAAxP,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,WAAqB0P,YAAA,SAAAxP,OAA4B6U,KAAA,gBAAqB/U,EAAA,cAAmBE,OAAOuJ,MAAA,cAAoBzJ,EAAA,YAAiBgV,KAAA,UAAavF,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAkDE,OAAOuJ,MAAA,WAAkBwL,IAAKC,MAAAzF,EAAAoD,eAAyBpD,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAkDE,OAAOuJ,MAAA,gBAAuBwL,IAAKC,MAAAzF,EAAAqD,oBAA8BrD,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAkDE,OAAOuJ,MAAA,gBAAuBwL,IAAKC,MAAAzF,EAAAsD,oBAA8BtD,EAAAM,GAAA,cAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAsDE,OAAOuJ,MAAA,UAAiBwL,IAAKC,MAAAzF,EAAAvG,iBAA2BuG,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAkDE,OAAOuJ,MAAA,QAAewL,IAAKC,MAAAzF,EAAAlJ,mBAA6BkJ,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAkDE,OAAOuJ,MAAA,UAAiBwL,IAAKC,MAAAzF,EAAA3F,mBAA6B2F,EAAAM,GAAA,QAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAgDmV,aAAaC,QAAA,WAAAC,MAAA,UAAsCnV,OAAQuJ,MAAA,aAAmBgG,EAAAM,GAAAN,EAAAO,GAAAP,EAAA0B,cAAA,IAE59B/Q,oBCChC,IAuBekV,EAvBUhV,EAAQ,OAcjBiV,CACdtF,EACA6E,GAT6B,EAV/B,SAAoB1E,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,6BCChCkV,GACAhV,KAAA,cACAiV,OACAC,QACAC,KAAAC,SC5BeC,GADEjW,OAFP,WAAgB,IAAA6P,EAAA3P,KAAaD,EAAA4P,EAAA1P,eAA0BC,EAAAyP,EAAAxP,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAAyP,EAAAG,GAAAH,EAAA,gBAAAT,GAAoD,QAAAA,EAAA8G,QAAA9G,EAAA+G,YAAA/G,EAAApN,SAAAmF,OAAA,EAAA/G,EAAA,eAAkFE,OAAO4P,GAAAd,EAAAE,KAAA,IAAAF,EAAApN,SAAA,GAAAsN,QAA0ClP,EAAA,gBAAqBE,OAAOuJ,MAAAuF,EAAAE,KAAA,IAAAF,EAAApN,SAAA,GAAAsN,QAA6CF,EAAA,KAAAhP,EAAA,iBAAkCE,OAAO8V,aAAAhH,EAAAiH,QAAwBxG,EAAAyG,KAAAzG,EAAAM,GAAA,IAAAN,EAAAO,GAAAhB,EAAApN,SAAA,GAAApB,MAAA,0BAAAiP,EAAAyG,KAAAzG,EAAAM,GAAA,KAAAf,EAAA+G,YAAA/G,EAAA8G,OAA4vBrG,EAAAyG,KAA5vBlW,EAAA,cAAqJE,OAAOuJ,MAAAuF,EAAAxO,QAAmBR,EAAA,YAAiBgV,KAAA,UAAahG,EAAA,KAAAhP,EAAA,iBAAkCE,OAAO8V,aAAAhH,EAAAiH,QAAwBxG,EAAAyG,KAAAzG,EAAAM,GAAA,IAAAN,EAAAO,GAAAhB,EAAAxO,MAAA,sBAAAiP,EAAAM,GAAA,KAAAN,EAAAG,GAAAZ,EAAA,kBAAAmH,GAAiH,OAAAA,EAAAL,OAA0RrG,EAAAyG,MAA1RC,EAAAvU,UAAAuU,EAAAvU,SAAAmF,OAAA,EAAA/G,EAAA,gBAAqF0P,YAAA,cAAAxP,OAAiCwV,QAAAS,MAAkBnW,EAAA,eAAoB0P,YAAA,cAAAxP,OAAiC4P,GAAAd,EAAAE,KAAA,IAAAiH,EAAAjH,QAA+BlP,EAAA,gBAAqBE,OAAOuJ,MAAAuF,EAAAE,KAAA,IAAAiH,EAAAjH,QAAkCO,EAAAM,GAAA,6BAAAN,EAAAO,GAAAmG,EAAA3V,MAAA,oCAAmG,OAAgB,IAEtoCJ,oBCChC,ICu1BAgW,GACAlG,YAAAsF,YDx1ByBlV,EAAQ,OAcjB+V,CACdb,EACAK,GAT6B,EAV/B,SAAoBzF,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,SCk0BhC0Q,SAAAC,OACArC,OAAAsC,EAAA,EAAAtC,EACA,wBAmDA0H,aACAxV,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAA0B,YAAA,MAGAgT,YACAzV,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAA6B,aAKA8S,OACA1V,IADA,WAEA,QAAAgG,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAuC,OAAAD,IACA,GAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAAwC,QAAAC,WAAAxE,KAAAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAsC,GAAAxC,SACA,OAAAwC,EAGA,UAEA3F,IATA,cAYAsV,cACA3V,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,eAIAjB,SACAvD,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAAwC,UAGAqS,MACA5V,IADA,WAIA,IADA,IAAA6V,KACA7P,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAiF,OAAAD,IAAA,CACA,IAAA8E,GACAgL,MAAA,GACAhV,aAEAiV,GACAD,MAAA,OACAhV,aAEAkV,GACAlV,aAGAuR,EAAArT,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAAyC,QAAAxC,OACA6E,EAAAgL,MAAA,MAAA9P,EAAA,GACA8E,EAAArJ,IAAA,EACA,QAAAyE,EAAA,EAAAA,EAAAmM,EAAAnM,IAAA,CAEA8P,GACAlV,aAGA,IAAA4G,KACAA,EAAAoO,MAAA9W,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAAyC,QAAAvC,GAAA6D,IAAAG,QAAA,QAAAA,QAAA,QAAAA,QAAA,aAEAxC,EAAAjG,IAAA,EACAiG,EAAA5G,YACAkV,EAAAlV,SAAAqF,KAAAuB,GAEAA,EAAAlG,SAAAxC,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAAyC,QAAAvC,GAAA1E,UAEAkG,MACAoO,MAAA9W,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAAyC,QAAAvC,GAAAwD,MAAAQ,QAAA,QAAAA,QAAA,QACAxC,EAAAjG,IAAA,EACAiG,EAAA5G,YACAkV,EAAAlV,SAAAqF,KAAAuB,GAEAsO,EAAAF,MAAA,QAAA5P,EAAA,GACA8P,EAAAvU,IAAA,EAEAsU,EAAAjV,SAAAqF,KAAA6P,GAGAD,EAAAtU,IAAA,EACAqJ,EAAAhK,SAAAqF,KAAA4P,GAEAA,GACAD,MAAA,OACAhV,aAIA,IADA,IAAAmV,EAAAjX,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAjE,cAAAqB,OACAiN,EAAA,EAAAA,EAAA+C,EAAA/C,IAAA,CAEA8C,GACAlV,aAIA,IAAAoV,KAEAA,EAAAJ,MAAA9W,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAjE,cAAAsO,GAAA7I,OAAA8L,MADA,YACA,GACAD,EAAAzU,IAAA,EACAyU,EAAApV,YACAkV,EAAAlV,SAAAqF,KAAA+P,GAEAA,EAAA1U,SAAAxC,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAjE,cAAAsO,GAAA1R,SACA0U,EAAApO,WAAA9I,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAjE,cAAAsO,GAAApL,WAEAkO,EAAAF,MAAA,QAAA5C,EAAA,GACA8C,EAAAvU,IAAA,EACAsU,EAAAjV,SAAAqF,KAAA6P,GAGAD,EAAAtU,IAAA,EACAqJ,EAAAhK,SAAAqF,KAAA4P,GAGAA,GACAD,MAAA,QACAhV,aAIA,IADA,IAAAsV,EAAApX,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAlE,YAAAsB,OACAoQ,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAEAL,GACAlV,aAGA,IAAAwV,KAEAA,EAAAR,MAAA9W,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAlE,YAAA0R,GAAAtM,IAAAoM,MADA,YACA,GACAG,EAAA7U,IAAA,EACA6U,EAAAxV,YACAkV,EAAAlV,SAAAqF,KAAAmQ,GAEAA,EAAA9U,SAAAxC,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAlE,YAAA0R,GAAA7U,SACA8U,EAAAxO,WAAA9I,KAAAuR,OAAA3Q,MAAAmB,KAAAC,IAAAgF,GAAA6C,YAAAlE,YAAA0R,GAAAvO,WAGAkO,EAAAF,MAAA,SAAAO,EAAA,GACAL,EAAAvU,IAAA,EACAsU,EAAAjV,SAAAqF,KAAA6P,GAGAD,EAAAtU,IAAA,EACAqJ,EAAAhK,SAAAqF,KAAA4P,GAEAF,EAAA1P,KAAA2E,GAKA,IADA,IAAAyL,EAAA,EACAzD,EAAA,EAAAA,EAAA+C,EAAA5P,OAAA6M,IACA+C,EAAA/C,GAAAzT,KAAAkX,EAEA,QAAAC,EAAA,EAAAA,EAAAX,EAAA5P,OAAAuQ,IACA,QAAAC,EAAA,EAAAA,EAAAZ,EAAAW,GAAA1V,SAAAmF,OAAAwQ,IACAZ,EAAAW,GAAA1V,SAAA2V,GAAApX,KAAAkX,EAGA,QAAAG,EAAA,EAAAA,EAAAb,EAAA5P,OAAAyQ,IACA,QAAAC,EAAA,EAAAA,EAAAd,EAAAa,GAAA5V,SAAAmF,OAAA0Q,IACA,QAAA9M,EAAA,EAAAA,EAAAgM,EAAAa,GAAA5V,SAAA6V,GAAA7V,SAAAmF,OAAA4D,IACAgM,EAAAa,GAAA5V,SAAA6V,GAAA7V,SAAA+I,GAAAxK,KAAAkX,EAIA,QAAAK,EAAA,EAAAA,EAAAf,EAAA5P,OAAA2Q,IACA,QAAAC,EAAA,EAAAA,EAAAhB,EAAAe,GAAA9V,SAAAmF,OAAA4Q,IACA,QAAAjE,EAAA,EAAAA,EAAAiD,EAAAe,GAAA9V,SAAA+V,GAAA/V,SAAAmF,OAAA2M,IACA,QAAAnJ,EAAA,EAAAA,EAAAoM,EAAAe,GAAA9V,SAAA+V,GAAA/V,SAAA8R,GAAA9R,SAAAmF,OAAAwD,IACAoM,EAAAe,GAAA9V,SAAA+V,GAAA/V,SAAA8R,GAAA9R,SAAA2I,GAAApK,KAAAkX,EAOA,OADAvX,KAAAuR,OAAA9P,OAAA,WAAA8V,GACAO,KAAAC,MAAAC,IAAAnB,MAIArS,UACAxD,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAAwC,QAAAC,WAIAV,SACA9C,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,SAEAzC,IAJA,SAIAkE,GACAvF,KAAAuR,OAAA9P,OAAA,cAAA8D,KAGAqD,iBACA5H,IADA,WAGA,OAAAsG,IAAAtH,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,cAAAyB,OAAA,CACA,QAAAD,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAuB,OAAAD,IACA,GAAA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,KAAAgE,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,KAAAgE,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,IACA,OAAA7I,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAA4B,gBAGA,SAEA,UAGAvH,IAdA,cAgBAsH,WACA3H,IADA,WAEA,OAAAsG,IAAAtH,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,cAAAyB,OAAA,CACA,QAAAD,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAuB,OAAAD,IACA,GAAA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,KAAAgE,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,KAAAgE,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,IACA,OAAA7I,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAA2B,UAGA,SAEA,UAGAtH,IAbA,cAeA4W,cACAjX,IADA,WAIA,GAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAAG,cACA,OAAAlC,KAAAuR,OAAA3Q,MAAAmB,KAAAG,cACA,OAAAoF,IAAAtH,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,cAAAyB,OA0BA,SAzBA,QAAAD,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAsB,OAAAD,IACA,GAAA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,GAEA,MADA,QAOA,QAAAyE,EAAA,EAAAA,EAAAlY,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAqB,OAAAiR,IACA,GAAArL,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAsS,GAAA1V,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAsS,GAAA1V,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAsS,GAAA1V,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAsS,GAAA1V,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,GAEA,MADA,QAYApS,IApCA,cAsCA2H,QACAhI,IAAA,WAEA,OAAAsG,IAAAtH,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,cAAAyB,OAAA,CACA,QAAAD,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAsB,OAAAD,IACA,GAAA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,GACA,OAAA3T,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAgC,OAAA,GAMA,SAEA,UAGA3H,IApBA,cAsBA8W,aACAnX,IADA,WAEA,OAAAsG,IAAAtH,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,cAAAyB,OAAA,CACA,QAAAD,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAqB,OAAAD,IACA,GAAA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,GACA,OAAA3T,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAkC,SAAA,GAMA,SAEA,UAGA7H,IAnBA,cAsIA2C,SACAhD,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAAiC,SAEA3C,IAJA,SAIAkE,GACAvF,KAAAuR,OAAA9P,OAAA,cAAA8D,KAGAb,YACA1D,IADA,WAEA,OAAAhB,KAAAuR,OAAA3Q,MAAAmB,KAAA2C,aAIA0T,eACApX,IADA,WAIA,IAFA,IAAAoX,IAAA7S,MAAA,IAAAuR,MAAA,MACAuB,EAAArY,KAAAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAuC,OACAD,EAAA,EAAAA,EAAAqR,EAAArR,IAAA,CACA,IAAAO,KACAA,EAAAhC,MAAA,MAAAyB,EAAA,GACAO,EAAAuP,MAAA,MAAA9P,EAAA,GACAoR,EAAAjR,KAAAI,GAEA,OAAA6Q,IAeAE,UACAtX,IADA,WAGA,OADAhB,KAAAuR,OAAA3Q,MAAAmB,KAAA+D,cACA,WAAA9F,KAAAgR,MAAA,SAAAhR,KAAA8Q,aAAA,eAGAyH,UACAvX,IADA,WAIA,OADAhB,KAAAuR,OAAA3Q,MAAAmB,KAAA+D,cACA,WAAA9F,KAAAgR,MAAA,SAAAhR,KAAA8Q,aAAA,iBAKAxB,OAEAqH,aAAA,WACA3W,KAAAuF,MAAA,GACAvF,KAAAwY,OAAA,GACAxY,KAAAyY,OAAA,KAGA7J,SAEA8J,WAAA,SAAAnT,GACAvF,KAAA2Y,OAAApT,GAEAqT,WAAA,SAAArT,GACAvF,KAAA6Y,OAAAtT,GAEAuT,WAAA,SAAAvT,GACAvF,KAAA+Y,OAAAxT,GAEAyT,WAAA,SAAAzT,GACAvF,KAAAiZ,OAAA1T,GAGA2T,cAAA,WACAvG,QAAAC,IAAA5S,KAAA2Y,QACA3Y,KAAAuR,OAAA9P,OAAA,qBAAAzB,KAAA2Y,SAIAQ,iBAAA,WACAnZ,KAAAuR,OAAA9P,OAAA,wBAAAzB,KAAA2Y,SAMAS,cAAA,WACApZ,KAAAuR,OAAA9P,OAAA,wBAAAzB,KAAA6Y,SAKAQ,iBAAA,WACArZ,KAAAuR,OAAA9P,OAAA,qBAAAzB,KAAA6Y,SAMAS,UAAA,WACAtZ,KAAAuR,OAAA9P,OAAA,qBAAAzB,KAAA+Y,SAKAQ,aAAA,WACAvZ,KAAAuR,OAAA9P,OAAA,wBAAAzB,KAAA+Y,SAMAS,SAAA,WACAxZ,KAAAuR,OAAA9P,OAAA,qBAAAzB,KAAAiZ,SAOAQ,YAAA,WACAzZ,KAAAuR,OAAA9P,OAAA,wBAAAzB,KAAAiZ,SAOAlG,YAAA,SAAAsD,GACA,SAAAA,EAAAS,OACA9W,KAAAuR,OAAAC,SAAA,aAEA,SAAA6E,EAAAS,OAAA,UAAAT,EAAAS,OACA9W,KAAAuR,OAAAC,SAAA,mBAIAhH,wBAAA,SAAAkP,GAIA,IAFA,IAAAC,EAAA3Z,KAAA4Z,MAAAC,OAAA,GAAAtU,MAEAyB,EAAA,EAAAA,EAAAhH,KAAA4W,KAAA3P,OAAAD,IACA,QAAAE,EAAA,EAAAA,EAAAlH,KAAA4W,KAAA5P,GAAAlF,SAAAmF,OAAAC,IACA,QAAA2D,EAAA,EAAAA,EAAA7K,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAAmF,OAAA4D,IACA,QAAAJ,EAAA,EAAAA,EAAAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAAmF,OAAAwD,IACAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAA2I,GAAApK,KAAAqZ,EAAArZ,KAEAL,KAAAuR,OAAA9P,OAAA,2BACAuF,IACAE,IACA2D,IACAJ,IACAE,OAAAgP,IAGA3Z,KAAAuR,OAAA9P,OAAA,uBACAoJ,IACAF,OAAAgP,IAGA3Z,KAAAuR,OAAA9P,OAAA,0BAQAqJ,eAAA,SAAA4O,GAGA,IAFA,IAAAI,EAAA9Z,KAAA4Z,MAAAG,OAAA,GAAAxU,MAEAyB,EAAA,EAAAA,EAAAhH,KAAA4W,KAAA3P,OAAAD,IACA,QAAAE,EAAA,EAAAA,EAAAlH,KAAA4W,KAAA5P,GAAAlF,SAAAmF,OAAAC,IACA,QAAA2D,EAAA,EAAAA,EAAA7K,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAAmF,OAAA4D,IACA,QAAAJ,EAAA,EAAAA,EAAAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAAmF,OAAAwD,IACAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAA2I,GAAApK,KAAAqZ,EAAArZ,KAEAL,KAAAuR,OAAA9P,OAAA,kBACAuF,IACAE,IACA2D,IACAJ,IACAE,OAAAmP,IAGA9Z,KAAAuR,OAAA9P,OAAA,cACAoJ,IACAF,OAAAmP,IAGA9Z,KAAAuR,OAAA9P,OAAA,yBAQAwJ,kBAAA,SAAAyO,GAGA,IAFA,IAAAM,EAAAN,EAAA5C,MAEA9P,EAAA,EAAAA,EAAAhH,KAAA4W,KAAA3P,OAAAD,IACA,QAAAE,EAAA,EAAAA,EAAAlH,KAAA4W,KAAA5P,GAAAlF,SAAAmF,OAAAC,IACA,QAAA2D,EAAA,EAAAA,EAAA7K,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAAmF,OAAA4D,IACA,QAAAJ,EAAA,EAAAA,EAAAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAAmF,OAAAwD,IACAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAA2I,GAAApK,KAAAqZ,EAAArZ,KAEAL,KAAAuR,OAAA9P,OAAA,qBACAuF,IACAE,IACA2D,IACAJ,IACAE,OAAAqP,IAGAha,KAAAuR,OAAA9P,OAAA,iBACAoJ,IACAF,OAAAqP,IAGAha,KAAAuR,OAAA9P,OAAA,0BAOA2J,sBAAA,SAAAsO,GAGA,IAFA,IAAAO,EAAAP,EAAA5C,MAEA9P,EAAA,EAAAA,EAAAhH,KAAA4W,KAAA3P,OAAAD,IACA,QAAAE,EAAA,EAAAA,EAAAlH,KAAA4W,KAAA5P,GAAAlF,SAAAmF,OAAAC,IACA,QAAA2D,EAAA,EAAAA,EAAA7K,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAAmF,OAAA4D,IACA,QAAAJ,EAAA,EAAAA,EAAAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAAmF,OAAAwD,IACAzK,KAAA4W,KAAA5P,GAAAlF,SAAAoF,GAAApF,SAAA+I,GAAA/I,SAAA2I,GAAApK,KAAAqZ,EAAArZ,KAEAL,KAAAuR,OAAA9P,OAAA,yBACAuF,IACAE,IACA2D,IACAJ,IACAE,OAAAsP,IAGAja,KAAAuR,OAAA9P,OAAA,gBACAoJ,IACAF,OAAAsP,IAGAja,KAAAuR,OAAA9P,OAAA,2BAOAwK,kBAtMA,SAsMA1G,GACAvF,KAAAuR,OAAA9P,OAAA,oBAAA8D,IAEA2G,wBAzMA,SAyMAsM,GACAxY,KAAAuR,OAAA9P,OAAA,0BAAA+W,IAEArM,oBA5MA,SA4MAsM,GACAzY,KAAAuR,OAAA9P,OAAA,sBAAAgX,IAEArM,yBA/MA,WAgNApM,KAAAuR,OAAA9P,OAAA,2BAAAzB,KAAA4Z,MAAAM,OAAAN,MAAAO,MAAA5U,QAEA8G,gBAlNA,WAmNArM,KAAAuR,OAAA9P,OAAA,kBAAAzB,KAAA4Z,MAAAQ,OAAAR,MAAAO,MAAA5U,QAGA+D,iBAtNA,SAsNA+Q,EAAAC,GAEA,IAAAD,EAAAvY,SAAA,GAAAW,KACAzC,KAAAuR,OAAA9P,OAAA,qBAAA+H,MAAAxJ,KAAA0W,MAAA/M,MAAA2Q,IAEA,IAAAD,EAAAvY,SAAA,GAAAW,KACAzC,KAAAuR,OAAA9P,OAAA,sBAAA+H,MAAAxJ,KAAA0W,MAAA/M,MAAA2Q,IAEA,IAAAD,EAAAvY,SAAA,GAAAW,KACAzC,KAAAuR,OAAA9P,OAAA,oBAAA+H,MAAAxJ,KAAA0W,MAAA/M,MAAA2Q,IAGAta,KAAAuR,OAAA9P,OAAA,oBACAe,SAAA6X,EAAAvY,SAAA,GAAAU,SACAC,IAAA4X,EAAAvY,SAAA,GAAAW,OAIA8X,OAxOA,SAwOAC,GACAxa,KAAAya,aAAAD,EAAAnP,OAAAqP,sBAAAC,cAAA,0BAAAC,UACA5a,KAAAya,WAAAD,EAAAnP,OAAAqP,sBAAAC,cAAA,0BAAAC,UAEA5a,KAAAya,YAAA,GAGAI,QA/OA,SA+OAL,GACAxa,KAAA8a,cAAAN,EAAAnP,OAAAqP,sBAAAC,cAAA,0BAAAC,UACA5a,KAAA8a,YAAAN,EAAAnP,OAAAqP,sBAAAC,cAAA,0BAAAC,UAEA5a,KAAA8a,aAAA,GAGAC,QAtPA,SAsPAP,GACAxa,KAAAgb,cAAAR,EAAAnP,OAAAqP,sBAAAC,cAAA,0BAAAC,UACA5a,KAAAgb,YAAAR,EAAAnP,OAAAqP,sBAAAC,cAAA,0BAAAC,UAEA5a,KAAAgb,aAAA,GAIAC,iBA9PA,SA8PA/L,GACA,QAAAlI,EAAA,EAAAA,EAAAhH,KAAA4W,KAAA3P,OAAAD,IACA,GAAAkI,EAAA4H,QAAA9W,KAAA4W,KAAA5P,GAAA8P,MAAA,CACA,IAAApM,EAAA1K,KAAAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAsC,GAAAxC,SACA0W,EAAAlb,KAAAuR,OAAA3Q,MAAAmB,KAAA2C,WAAAsC,GAAAvC,QACAzE,KAAAuR,OAAA9P,OAAA,eAAA+C,SAAAkG,EAAAjG,SAAAyW,OAKAC,cAxQA,SAwQAd,GACA,IAAAA,EAAAvY,SAAA,GAAAW,KACAzC,KAAAuR,OAAA9P,OAAA,qBAAA4Y,GAEA,IAAAA,EAAAvY,SAAA,GAAAW,KACAzC,KAAAuR,OAAA9P,OAAA,sBAAA4Y,GAEA,IAAAA,EAAAvY,SAAA,GAAAW,KACAzC,KAAAuR,OAAA9P,OAAA,oBAAA4Y,IAIAtQ,YApRA,SAoRAmF,EAAAvF,GACA3J,KAAAuR,OAAA9P,OAAA,cAAAkI,IAEAyR,cAvRA,SAuRAC,GACA,IAAAH,EAAAG,EAAAhQ,OAAAiQ,aAAA,OACA5Q,EAAA2Q,EAAAhQ,OAAAiQ,aAAA,SACAtb,KAAAuR,OAAA9P,OAAA,eAAA+C,SAAAkG,EAAAjG,SAAAyW,MAGAK,kBA7RA,SA6RA7I,EAAA8I,EAAAjL,GACAoC,QAAAC,IAAA,SAAAF,GAEA,IAAAb,EAAA7R,KACA6R,EAAAC,OACA/G,IAAA,eAAA8G,EAAAN,OAAA3Q,MAAAmB,KAAA8D,OACAkM,OAAA,MACA0J,QACAC,QAAA,GAEAlJ,SACAC,eAAA,qDAEAf,KAAA,SAAAgB,GAEA,IAAA8I,EAAA9I,EAAAhE,UAEA1M,KAJAwF,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAKA,QAAAC,EAAAC,EAAAC,IAAA0T,KAAAhU,GAAAI,EAAAC,EAAAE,QAAAC,MAAAR,GAAA,OAAAR,EAAAY,EAAArC,MACAmD,KACAA,EAAAlE,SAAAwC,EAAAtG,KACAgI,EAAAjE,QAAA,6BAAAuC,EAAA+D,IACA/I,EAAAmF,KAAAuB,IATA,MAAAT,GAAAR,GAAA,EAAAC,EAAAO,EAAA,aAAAT,GAAAK,EAAAK,QAAAL,EAAAK,SAAA,WAAAT,EAAA,MAAAC,GAWAmK,EAAAN,OAAA9P,OAAA,iBAAAO,KACA6Q,MAAA,SAAAC,GACAH,QAAAC,IAAAE,MAIA6I,iBA3TA,SA2TAjJ,EAAA8I,EAAAjL,GACAoC,QAAAC,IAAA,SAAAF,GAGA,IAAAb,EAAA7R,KACA6R,EAAAC,OACA/G,IAAA,eAAA8G,EAAAN,OAAA3Q,MAAAmB,KAAA8D,OACAkM,OAAA,MACA0J,QACAC,QAAA,GAEAlJ,SACAC,eAAA,qDAEAf,KAAA,SAAAgB,GAEA,IAAA8I,EAAA9I,EAAAhE,UACAiE,QAAAC,IAAA,SAAA4I,GACA,IAAAxZ,KACA4Z,KALAC,GAAA,EAAAC,GAAA,EAAAC,OAAApU,EAAA,IAMA,QAAAqU,EAAAC,EAAAnU,IAAA0T,KAAAK,GAAAG,EAAAC,EAAAlU,QAAAC,MAAA6T,GAAA,OAAA7U,EAAAgV,EAAAzW,MACAmD,KACAA,EAAApD,IAAA0B,EAAAtG,KACAgI,EAAAnD,MAAAyB,EAAAtG,KAEAsB,EAAAmF,KAAAuB,GACA,IAAAwT,KACAA,EAAA1X,SAAAwC,EAAAtG,KACAwb,EAAAzX,QAAAuC,EAAA+D,IACA6Q,EAAAzU,KAAA+U,IAfA,MAAAjU,GAAA6T,GAAA,EAAAC,EAAA9T,EAAA,aAAA4T,GAAAI,EAAA/T,QAAA+T,EAAA/T,SAAA,WAAA4T,EAAA,MAAAC,GAiBAlK,EAAAN,OAAA9P,OAAA,mBAAAO,GACA6P,EAAAN,OAAA9P,OAAA,YAAAma,KACA/I,MAAA,SAAAC,GACAH,QAAAC,IAAAE,MAIAqJ,YAjWA,SAiWAzJ,EAAA8I,EAAAjL,GACA6L,MAAA,cAGAC,aArWA,SAqWAb,EAAAjL,GACA,OAAAvQ,KAAAsc,SAAA,QAAAd,EAAA9a,KAAA,MAGA6b,iBAzWA,SAyWAf,EAAAjL,GAIA,IAFA,IAAA/L,EAAAgX,EAAA9a,KACAgE,EAAA1E,KAAAuR,OAAA3Q,MAAAmB,KAAA2C,WACAsC,EAAA,EAAAqM,EAAA3O,EAAAuC,OAAAD,EAAAqM,EAAArM,IACAtC,EAAAsC,GAAAxC,aACAE,EAAAgF,OAAA1C,EAAA,GAGAhH,KAAAuR,OAAA9P,OAAA,iBAAAiD,IAEA8X,gBApXA,SAoXAhB,EAAAjL,GAIA,IAFA,IAAA/L,EAAAgX,EAAA9a,KACAyX,EAAAnY,KAAAuR,OAAA3Q,MAAAmB,KAAAoW,YACAnR,EAAA,EAAAqM,EAAA8E,EAAAlR,OAAAD,EAAAqM,EAAArM,IACAmR,EAAAnR,GAAAzB,OAAAf,GACA2T,EAAAzO,OAAA1C,EAAA,GAGAhH,KAAAuR,OAAA9P,OAAA,iBAAA0W,IAGA1P,gBAhYA,WAkYA,GAAAzI,KAAAuR,OAAA3Q,MAAAmB,KAAAK,iBAAApC,KAAAuR,OAAA3Q,MAAAmB,KAAAM,qBAAA,CAEArC,KAAAyY,OAAA,GAGA,IAFA,IAAArR,GAAA,EACAuC,GAAA,EACA3C,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAuB,OAAAD,IACA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,KAAAgE,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,KAAAgE,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,MAAAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,MACAzB,GAAA,EACAuC,EAAA3C,GAGAI,GAEApH,KAAAuR,OAAA9P,OAAA,qBAAAkI,QAAAhB,UAAA3I,KAAAuR,OAAA3Q,MAAAmB,KAAAK,gBAAAwG,gBAAA5I,KAAAuR,OAAA3Q,MAAAmB,KAAAM,uBAEArC,KAAAuR,OAAA9P,OAAA,yBAAA+H,MAAAxJ,KAAA0W,MAAA/M,QAAAhB,UAAA3I,KAAAuR,OAAA3Q,MAAAmB,KAAAK,gBAAAwG,gBAAA5I,KAAAuR,OAAA3Q,MAAAmB,KAAAM,yBAGArC,KAAAuR,OAAA9P,OAAA,mBAAAkH,UAAA3I,KAAAuR,OAAA3Q,MAAAmB,KAAAK,gBAAAwG,gBAAA5I,KAAAuR,OAAA3Q,MAAAmB,KAAAM,uBAEArC,KAAAuR,OAAA9P,OAAA,uBAAA+H,MAAAxJ,KAAA0W,MAAA/N,UAAA3I,KAAAuR,OAAA3Q,MAAAmB,KAAAK,gBAAAwG,gBAAA5I,KAAAuR,OAAA3Q,MAAAmB,KAAAM,wBAEArC,KAAAuR,OAAA9P,OAAA,oBAEA2a,MAAA,mBAGArT,eA7ZA,WA+ZA,aAAA/I,KAAAuR,OAAA3Q,MAAAmB,KAAAG,cAEA,GAAAlC,KAAAuR,OAAA3Q,MAAAmB,KAAAO,aAAAtC,KAAAuR,OAAA3Q,MAAAmB,KAAAG,cAAA,CAEAlC,KAAAwY,OAAA,GACAxY,KAAAuF,MAAA,GAGA,IAFA,IAAA6B,GAAA,EACAuC,GAAA,EACA3C,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAsB,OAAAD,IACA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,KACAvM,GAAA,EACAuC,EAAA3C,GAMAI,GACApH,KAAAuR,OAAA9P,OAAA,oBAAAkI,QAAAX,OAAAhJ,KAAAuR,OAAA3Q,MAAAmB,KAAAO,cACAtC,KAAAuR,OAAA9P,OAAA,wBACA+H,MAAAxJ,KAAA0W,MACA/M,QACAX,OAAAhJ,KAAAuR,OAAA3Q,MAAAmB,KAAAO,gBAGAtC,KAAAuR,OAAA9P,OAAA,kBAAAuH,OAAAhJ,KAAAuR,OAAA3Q,MAAAmB,KAAAO,cACAtC,KAAAuR,OAAA9P,OAAA,sBAAA+H,MAAAxJ,KAAA0W,MAAA1N,OAAAhJ,KAAAuR,OAAA3Q,MAAAmB,KAAAO,eAEAtC,KAAAuR,OAAA9P,OAAA,oBAEA2a,MAAA,kBAyCAnT,iBAzeA,WA2eA,YAAAjJ,KAAAuR,OAAA3Q,MAAAmB,KAAAG,cAEA,GAAAlC,KAAAuR,OAAA3Q,MAAAmB,KAAAI,qBAAAnC,KAAAuR,OAAA3Q,MAAAmB,KAAAG,cAAA,CAEAlC,KAAAwY,OAAA,GAAAxY,KAAAuF,MAAA,GAGA,IAFA,IAAA6B,GAAA,EACAuC,GAAA,EACA3C,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAqB,OAAAD,IACA6F,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,IACA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAiR,KAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA4K,IAAA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAkR,KAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA6K,IAAA7G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,SAAA,GAAAmR,KAAA9G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAyD,aAAAqD,SAAA,GAAA8K,KACAvM,GAAA,EACAuC,EAAA3C,GAMAI,GACApH,KAAAuR,OAAA9P,OAAA,sBAAAkI,QAAAT,SAAAlJ,KAAAuR,OAAA3Q,MAAAmB,KAAAI,sBACAnC,KAAAuR,OAAA9P,OAAA,0BAAA+H,MAAAxJ,KAAA0W,MAAA/M,QAAAT,SAAAlJ,KAAAuR,OAAA3Q,MAAAmB,KAAAI,wBAEAnC,KAAAuR,OAAA9P,OAAA,oBAAAyH,SAAAlJ,KAAAuR,OAAA3Q,MAAAmB,KAAAI,sBACAnC,KAAAuR,OAAA9P,OAAA,wBAAA+H,MAAAxJ,KAAA0W,MAAAxN,SAAAlJ,KAAAuR,OAAA3Q,MAAAmB,KAAAI,uBAEAnC,KAAAuR,OAAA9P,OAAA,oBAEA2a,MAAA,oBA+EA1N,KAjnCA,WAknCA,OACA+N,cAAA,GAMAC,gBAAApX,IAAA,QAAAC,MAAA,UAAAD,IAAA,OAAAC,MAAA,SAOAuL,aAAA,uCACAC,UAAA,uCACAC,MAAA,8CAGA/M,gBACAC,aADA,SACAC,GACA,OAAAA,EAAAC,UAAAC,KAAAC,MAAA,QAIAe,eAAAC,IAAA,eAAAC,MAAA,eAAAuR,MAAA,iBAAAxR,IAAA,eAAAC,MAAA,eAAAuR,MAAA,iBAEAvR,MAAA,GACAiT,OAAA,GACAC,OAAA,GACAgC,YAAA,EAAAK,aAAA,EAAAE,aAAA,EAEAxK,mBAAA,EACAS,eAAA,QAGA0L,WACApX,MAAA,IACAuR,MAAA,OAEAvR,MAAA,KACAuR,MAAA,QAEAvR,MAAA,MACAuR,MAAA,SAEA6B,OAAA,EACAvV,OAAA,IAEAwZ,WACArX,MAAA,IACAuR,MAAA,OAEAvR,MAAA,KACAuR,MAAA,QAEAvR,MAAA,MACAuR,MAAA,SAEA+B,OAAA,EACAvV,OAAA,IAEAuZ,WACAtX,MAAA,IACAuR,MAAA,QAEAvR,MAAA,KACAuR,MAAA,SAEAiC,OAAA,EACAvV,OAAA,IAEAsZ,WACAvX,MAAA,MACAuR,MAAA,QAEAvR,MAAA,MACAuR,MAAA,QAEAmC,OAAA,GACAtV,OAAA,SCzhEeoZ,GADEjd,OAFP,WAAgB,IAAA6P,EAAA3P,KAAaD,EAAA4P,EAAA1P,eAA0BC,EAAAyP,EAAAxP,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,WAAqBE,OAAO6U,KAAA,WAAA+H,iBAAArN,EAAAX,OAAAI,QAAoDlP,EAAA,OAAY0P,YAAA,aAAuB1P,EAAA,QAAAA,EAAA,KAAqB0P,YAAA,sBAA8BD,EAAAM,GAAA,KAAA/P,EAAA,QAA2B0P,YAAA,gBAA0BD,EAAAM,GAAA,cAAAN,EAAAM,GAAA,KAAA/P,EAAA,WAAiDE,OAAOyV,KAAA,iBAAsB3V,EAAA,aAAkBmV,aAAa4H,MAAA,SAAgB7c,OAAQyV,KAAA,WAAiBV,IAAKC,MAAA,SAAA8H,GAAyBvN,EAAAa,mBAAA,MAA+Bb,EAAAM,GAAA,kBAAA/P,EAAA,KAAmC0P,YAAA,mBAA2BD,EAAAM,GAAA,KAAA/P,EAAA,aAAgCE,OAAOsK,MAAA,QAAAyS,QAAAxN,EAAAa,mBAAgD2E,IAAKiI,iBAAA,SAAAF,GAAkCvN,EAAAa,kBAAA0M,MAA+Bhd,EAAA,WAAAA,EAAA,gBAAmCE,OAAO0W,MAAA,KAAAuG,cAAA1N,EAAAsB,kBAA+C/Q,EAAA,aAAkB0P,YAAA,mBAAAxP,OAAsCkd,OAAA3N,EAAA2I,SAAAiF,YAAA5N,EAAA4M,iBAAAiB,gBAAA7N,EAAA0M,aAAAoB,QAAA9N,EAAAwM,YAAAuB,UAAA/N,EAAA4L,qBAAqJrb,EAAA,aAAkBE,OAAOud,KAAA,QAAA9H,KAAA,aAAiClG,EAAAM,GAAA,qBAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAA6DE,OAAO0W,MAAA,KAAAuG,cAAA1N,EAAAsB,kBAA+C/Q,EAAA,aAAkBE,OAAOud,KAAA,SAAeC,OAAQrY,MAAAoK,EAAA,QAAAkO,SAAA,SAAAC,GAA6CnO,EAAA7L,QAAAga,GAAgBC,WAAA,aAAuB7d,EAAA,aAAkBE,OAAO0W,MAAA,OAAAvR,MAAA,UAA+BoK,EAAAM,GAAA,KAAA/P,EAAA,aAA8BE,OAAO0W,MAAA,kBAAAvR,MAAA,qBAAqDoK,EAAAM,GAAA,KAAA/P,EAAA,aAA8BE,OAAO0W,MAAA,aAAAvR,MAAA,gBAA2CoK,EAAAM,GAAA,KAAA/P,EAAA,aAA8BE,OAAO0W,MAAA,cAAAvR,MAAA,iBAA6CoK,EAAAM,GAAA,KAAA/P,EAAA,aAA8BE,OAAO0W,MAAA,OAAAvR,MAAA,WAA+B,OAAAoK,EAAAM,GAAA,KAAA/P,EAAA,gBAAyCE,OAAO0W,MAAA,MAAAuG,cAAA1N,EAAAsB,kBAAgD/Q,EAAA,YAAiBmV,aAAa4H,MAAA,SAAgB7c,OAAQud,KAAA,QAAAtd,GAAA,QAAA2d,UAAA,GAA4CJ,OAAQrY,MAAAoK,EAAA,SAAAkO,SAAA,SAAAC,GAA8CnO,EAAAnL,SAAAsZ,GAAiBC,WAAA,eAAwB,OAAApO,EAAAM,GAAA,KAAA/P,EAAA,OAAgC0P,YAAA,gBAAAxP,OAAmC8U,KAAA,UAAgBA,KAAA,WAAehV,EAAA,aAAkBiV,IAAIC,MAAA,SAAA8H,GAAyBvN,EAAAa,mBAAA,MAAgCb,EAAAM,GAAA,SAAAN,EAAAM,GAAA,KAAA/P,EAAA,aAA8CE,OAAOyV,KAAA,WAAiBV,IAAKC,MAAA,SAAA8H,GAAyBvN,EAAAa,mBAAA,MAAgCb,EAAAM,GAAA,iBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAAAyP,EAAAM,GAAA,KAAA/P,EAAA,OAAAyP,EAAAM,GAAA,KAAA/P,EAAA,OAAAyP,EAAAM,GAAA,KAAA/P,EAAA,WAAsHE,OAAO6d,iBAAA,OAAAZ,cAAA,WAA+Cnd,EAAA,OAAY0P,YAAA,aAAuB1P,EAAA,OAAYge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAAvF,KAAAuR,OAAA3Q,MAAAmB,KAAA,aAAAgc,WAAA,0CAA4H7d,EAAA,OAAY0P,YAAA,cAAwBD,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAmDE,OAAO0W,MAAA,UAAgB5W,EAAA,aAAkBE,OAAOud,KAAA,QAAAS,UAAA,GAAAC,YAAA1O,EAAAsI,aAAAtI,EAAAsI,aAAA,WAAwF9C,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAA1D,kBAAA0D,EAAApK,SAAkCqY,OAAQrY,MAAAoK,EAAA,MAAAkO,SAAA,SAAAC,GAA2CnO,EAAApK,MAAAuY,GAAcC,WAAA,UAAqBpO,EAAAG,GAAAH,EAAA,uBAAAT,GAA2C,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,aAAyC,GAAAoK,EAAAM,GAAA,KAAA/P,EAAA,OAA6Bge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,UAAAvF,KAAAiY,aAAA8F,WAAA,kCAA4G7d,EAAA,gBAAqBE,OAAO0W,MAAA,UAAgB5W,EAAA,YAAiBqe,IAAA,SAAAne,OAAoBmF,MAAAoK,EAAA3G,OAAAoV,UAAA,GAAAC,YAAA,WAA0DlJ,IAAKqJ,KAAA,SAAAtB,GAAwBA,EAAAuB,iBAAwB9O,EAAAtD,uBAAwB,GAAAsD,EAAAM,GAAA,KAAA/P,EAAA,OAA4BmV,aAAaqJ,aAAA,YAAuBxe,EAAA,aAAkBE,OAAOyV,KAAA,WAAiBV,IAAKC,MAAAzF,EAAA5G,kBAA4B4G,EAAAM,GAAA,gBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAA+Cge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,SAAAvF,KAAAiY,aAAA8F,WAAA,iCAA0G7d,EAAA,gBAAqBE,OAAO0W,MAAA,WAAiB5W,EAAA,aAAkBE,OAAOud,KAAA,QAAAS,UAAA,GAAAC,YAAA1O,EAAAwI,YAAAxI,EAAAwI,YAAA,YAAuFhD,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAAzD,wBAAAyD,EAAA6I,UAAyCoF,OAAQrY,MAAAoK,EAAA,OAAAkO,SAAA,SAAAC,GAA4CnO,EAAA6I,OAAAsF,GAAeC,WAAA,WAAsBpO,EAAAG,GAAA9P,KAAAuR,OAAA3Q,MAAAmB,KAAA,sBAAAmN,GAA6D,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,aAAyC,GAAAoK,EAAAM,GAAA,KAAA/P,EAAA,gBAAsCE,OAAO0W,MAAA,UAAgB5W,EAAA,aAAkB0P,YAAA,mBAAAxP,OAAsCkd,OAAA3N,EAAA4I,SAAAgF,YAAA5N,EAAA6M,gBAAAgB,gBAAA7N,EAAA0M,aAAAoB,QAAA9N,EAAAwM,YAAAuB,UAAA/N,EAAAgM,oBAAmJzb,EAAA,aAAkBE,OAAOud,KAAA,QAAA9H,KAAA,aAAiClG,EAAAM,GAAA,qBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAAoDmV,aAAaqJ,aAAA,YAAuBxe,EAAA,aAAkBE,OAAOyV,KAAA,WAAiBV,IAAKC,MAAAzF,EAAA1G,oBAA8B0G,EAAAM,GAAA,oBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAAmDge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAAvF,KAAAuR,OAAA3Q,MAAAmB,KAAA,cAAAgc,WAAA,2CAA8H7d,EAAA,OAAY0P,YAAA,cAAwBD,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAmDE,OAAO0W,MAAA,UAAgB5W,EAAA,aAAkBE,OAAOud,KAAA,QAAAS,UAAA,GAAAC,YAAA1O,EAAAhH,UAAAgH,EAAAhH,UAAA,aAAoFwM,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAAxD,oBAAAwD,EAAA8I,UAAqCmF,OAAQrY,MAAAoK,EAAA,OAAAkO,SAAA,SAAAC,GAA4CnO,EAAA8I,OAAAqF,GAAeC,WAAA,WAAsBpO,EAAAG,GAAAH,EAAA,uBAAAT,GAA2C,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,aAAyC,GAAAoK,EAAAM,GAAA,KAAA/P,EAAA,gBAAsCE,OAAO0W,MAAA,UAAgB5W,EAAA,YAAiBqe,IAAA,SAAAne,OAAoBmF,MAAAoK,EAAA/G,gBAAAwV,UAAA,GAAAC,YAAA,WAAmElJ,IAAKqJ,KAAA,SAAAtB,GAAwBA,EAAAuB,iBAAwB9O,EAAAvD,gCAAiC,GAAAuD,EAAAM,GAAA,KAAA/P,EAAA,OAA4BmV,aAAaqJ,aAAA,YAAuBxe,EAAA,aAAkBE,OAAOyV,KAAA,WAAiBV,IAAKC,MAAAzF,EAAAlH,mBAA6BkH,EAAAM,GAAA,gBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAA+Cge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAAvF,KAAAuR,OAAA3Q,MAAAmB,KAAA,eAAAgc,WAAA,4CAAgI7d,EAAA,OAAY0P,YAAA,cAAwBD,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,gBAAmDE,OAAO0W,MAAA,YAAkB5W,EAAA,aAAkBE,OAAOud,KAAA,QAAAS,UAAA,GAAAC,YAAA1O,EAAAsI,aAAAtI,EAAAsI,aAAA,WAAwF9C,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAA1D,kBAAA0D,EAAApK,SAAkCqY,OAAQrY,MAAAoK,EAAA,MAAAkO,SAAA,SAAAC,GAA2CnO,EAAApK,MAAAuY,GAAcC,WAAA,UAAqBpO,EAAAG,GAAAH,EAAA,uBAAAT,GAA2C,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,aAAyC,GAAAoK,EAAAM,GAAA,KAAA/P,EAAA,OAA6B0P,YAAA,cAAwB1P,EAAA,SAAAyP,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,aAA4DE,OAAOie,YAAA,MAAAhe,GAAA,cAAsC8U,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAA+I,WAAA/I,EAAAvM,UAA4Bwa,OAAQrY,MAAAoK,EAAA,OAAAkO,SAAA,SAAAC,GAA4CnO,EAAAvM,OAAA0a,GAAeC,WAAA,WAAsBpO,EAAAG,GAAAH,EAAA,kBAAAT,GAAsC,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,YAAyCoK,EAAAM,GAAA,KAAA/P,EAAA,KAAuB0P,YAAA,sBAAAuF,IAAsCC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAAuJ,oBAAsBvJ,EAAAM,GAAA,KAAA/P,EAAA,KAAsB0P,YAAA,0BAAAuF,IAA0CC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAAwJ,wBAAyB,GAAAxJ,EAAAM,GAAA,KAAA/P,EAAA,OAA4B0P,YAAA,cAAwB1P,EAAA,SAAAyP,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,aAA4DE,OAAOie,YAAA,MAAAhe,GAAA,cAAsC8U,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAAiJ,WAAAjJ,EAAArM,UAA4Bsa,OAAQrY,MAAAoK,EAAA,OAAAkO,SAAA,SAAAC,GAA4CnO,EAAArM,OAAAwa,GAAeC,WAAA,WAAsBpO,EAAAG,GAAAH,EAAA,kBAAAT,GAAsC,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,YAAyCoK,EAAAM,GAAA,KAAA/P,EAAA,KAAuB0P,YAAA,sBAAAuF,IAAsCC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAAyJ,oBAAsBzJ,EAAAM,GAAA,KAAA/P,EAAA,KAAsB0P,YAAA,0BAAAuF,IAA0CC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAA0J,wBAAyB,GAAA1J,EAAAM,GAAA,KAAA/P,EAAA,OAA4B0P,YAAA,cAAwB1P,EAAA,SAAAyP,EAAAM,GAAA,SAAAN,EAAAM,GAAA,KAAA/P,EAAA,aAA0DE,OAAOie,YAAA,MAAAhe,GAAA,eAAuC8U,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAAmJ,WAAAnJ,EAAAnM,UAA4Boa,OAAQrY,MAAAoK,EAAA,OAAAkO,SAAA,SAAAC,GAA4CnO,EAAAnM,OAAAsa,GAAeC,WAAA,WAAsBpO,EAAAG,GAAAH,EAAA,kBAAAT,GAAsC,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,YAAyCoK,EAAAM,GAAA,KAAA/P,EAAA,KAAuB0P,YAAA,sBAAAuF,IAAsCC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAA2J,gBAAkB3J,EAAAM,GAAA,KAAA/P,EAAA,KAAsB0P,YAAA,0BAAAuF,IAA0CC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAA4J,oBAAqB,GAAA5J,EAAAM,GAAA,KAAA/P,EAAA,OAA4B0P,YAAA,cAAwB1P,EAAA,SAAAyP,EAAAM,GAAA,SAAAN,EAAAM,GAAA,KAAA/P,EAAA,aAA0DE,OAAOie,YAAA,MAAAhe,GAAA,eAAuC8U,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAAqJ,WAAArJ,EAAAhM,UAA4Bia,OAAQrY,MAAAoK,EAAA,OAAAkO,SAAA,SAAAC,GAA4CnO,EAAAhM,OAAAma,GAAeC,WAAA,WAAsBpO,EAAAG,GAAAH,EAAA,kBAAAT,GAAsC,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,YAAyCoK,EAAAM,GAAA,KAAA/P,EAAA,KAAuB0P,YAAA,sBAAAuF,IAAsCC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAA6J,eAAiB7J,EAAAM,GAAA,KAAA/P,EAAA,KAAsB0P,YAAA,0BAAAuF,IAA0CC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAA8J,mBAAoB,GAAA9J,EAAAM,GAAA,KAAA/P,EAAA,OAA4B0P,YAAA,cAAwB1P,EAAA,SAAAyP,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,SAAwDge,aAAaxd,KAAA,QAAAyd,QAAA,UAAA5Y,MAAAoK,EAAA,YAAAoO,WAAA,gBAAgF3d,OAASyV,KAAA,OAAAxV,GAAA,aAAA2d,UAAA,GAAgDY,UAAWrZ,MAAAoK,EAAA,aAA0BwF,IAAKgF,MAAA,SAAA+C,GAAyBA,EAAA7R,OAAAwT,YAAsClP,EAAA6G,YAAA0G,EAAA7R,OAAA9F,aAAsCoK,EAAAM,GAAA,KAAA/P,EAAA,OAA0B0P,YAAA,cAAwB1P,EAAA,SAAAyP,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,SAAwDge,aAAaxd,KAAA,QAAAyd,QAAA,UAAA5Y,MAAAoK,EAAA,WAAAoO,WAAA,eAA8E3d,OAASyV,KAAA,OAAAxV,GAAA,aAAA2d,UAAA,GAAgDY,UAAWrZ,MAAAoK,EAAA,YAAyBwF,IAAKgF,MAAA,SAAA+C,GAAyBA,EAAA7R,OAAAwT,YAAsClP,EAAA8G,WAAAyG,EAAA7R,OAAA9F,aAAqCoK,EAAAM,GAAA,KAAA/P,EAAA,OAA0Bge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,UAAAvF,KAAAiY,aAAA8F,WAAA,kCAA4G7d,EAAA,gBAAqBE,OAAO0W,MAAA,UAAgB5W,EAAA,YAAiBqe,IAAA,SAAAne,OAAoBmF,MAAAoK,EAAA3G,OAAAoV,UAAA,GAAAC,YAAA,WAA0DlJ,IAAKqJ,KAAA,SAAAtB,GAAwBA,EAAAuB,iBAAwB9O,EAAAtD,uBAAwB,GAAAsD,EAAAM,GAAA,KAAA/P,EAAA,OAA4BmV,aAAaqJ,aAAA,YAAuBxe,EAAA,aAAkBE,OAAOyV,KAAA,WAAiBV,IAAKC,MAAAzF,EAAA5G,kBAA4B4G,EAAAM,GAAA,gBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAA+Cge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,SAAAvF,KAAAiY,aAAA8F,WAAA,iCAA0G7d,EAAA,gBAAqBE,OAAO0W,MAAA,UAAgB5W,EAAA,aAAkBE,OAAOud,KAAA,QAAAS,UAAA,GAAAC,YAAA1O,EAAAwI,YAAAxI,EAAAwI,YAAA,YAAuFhD,IAAKmJ,OAAA,SAAApB,GAA0BvN,EAAAzD,wBAAAyD,EAAA6I,UAAyCoF,OAAQrY,MAAAoK,EAAA,OAAAkO,SAAA,SAAAC,GAA4CnO,EAAA6I,OAAAsF,GAAeC,WAAA,WAAsBpO,EAAAG,GAAA9P,KAAAuR,OAAA3Q,MAAAmB,KAAA,sBAAAmN,GAA6D,OAAAhP,EAAA,aAAuBoF,IAAA4J,EAAA3J,MAAAnF,OAAsB0W,MAAA5H,EAAA4H,MAAAvR,MAAA2J,EAAA3J,aAAyC,GAAAoK,EAAAM,GAAA,KAAA/P,EAAA,gBAAsCE,OAAO0W,MAAA,UAAgB5W,EAAA,aAAkB0P,YAAA,mBAAAxP,OAAsCkd,OAAA3N,EAAA4I,SAAAgF,YAAA5N,EAAA6M,gBAAAgB,gBAAA7N,EAAA0M,aAAAoB,QAAA9N,EAAAwM,YAAAuB,UAAA/N,EAAAgM,oBAAmJzb,EAAA,aAAkBE,OAAOud,KAAA,QAAA9H,KAAA,aAAiClG,EAAAM,GAAA,qBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAAoDmV,aAAaqJ,aAAA,YAAuBxe,EAAA,aAAkBE,OAAOyV,KAAA,WAAiBV,IAAKC,MAAA,SAAA8H,QAA4BvN,EAAAM,GAAA,wBAAAN,EAAAM,GAAA,KAAA/P,EAAA,OAAuD0P,YAAA,SAAmB1P,EAAA,OAAY0P,YAAA,WAAsBD,EAAAG,GAAAH,EAAA,cAAAT,EAAAvF,GAAwC,OAAAzJ,EAAA,OAAiB0P,YAAA,iBAA2B1P,EAAA,OAAY0P,YAAA,wBAAAyF,aAAiDyJ,eAAA,SAAsB5e,EAAA,QAAaiV,IAAIC,MAAA,SAAA8H,GAAkD,OAAzBA,EAAAyB,kBAAyBhP,EAAA4K,OAAA2C,OAA4BvN,EAAA8K,aAAAvL,EAAA4H,MAAA5W,EAAA,QAA2C0P,YAAA,uCAAiD1P,EAAA,QAAa0P,YAAA,iCAAyCD,EAAAM,GAAA,KAAA/P,EAAA,QAA2B0P,YAAA,qBAA+B1P,EAAA,QAAAyP,EAAAM,GAAAN,EAAAO,GAAAhB,EAAA4H,UAAAnH,EAAAM,GAAA,KAAA/P,EAAA,QAAAA,EAAA,KAAyE0P,YAAA,iBAAAuF,IAAiCC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAAsL,iBAAA/L,OAA6BS,EAAAM,GAAA,KAAA/P,EAAA,KAAsB0P,YAAA,iBAAAuF,IAAiCC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAA5F,YAAAmF,EAAAvF,aAA8BgG,EAAAM,GAAA,KAAAN,EAAA8K,aAAAvL,EAAA4H,MAAA5W,EAAA,OAAAA,EAAA,OAAsE0P,YAAA,yBAAAyF,aAAkDC,QAAA,UAAmB3F,EAAAG,GAAAH,EAAAiH,KAAAjN,GAAA,kBAAA0M,EAAA0I,GAA8D,OAAA7e,EAAA,OAAiB0P,YAAA,iBAA2B1P,EAAA,OAAY0P,YAAA,wBAAAyF,aAAiDyJ,eAAA,UAAuB5e,EAAA,QAAaiV,IAAIC,MAAA,SAAA8H,GAAkD,OAAzBA,EAAAyB,kBAAyBhP,EAAAkL,QAAAqC,OAA6BvN,EAAAmL,cAAAzE,EAAAS,MAAA5W,EAAA,QAA6C0P,YAAA,uCAAiD1P,EAAA,QAAa0P,YAAA,gCAAwCD,EAAAM,GAAA,KAAA/P,EAAA,QAA2B0P,YAAA,qBAA+B1P,EAAA,QAAAyP,EAAAM,GAAAN,EAAAO,GAAAmG,EAAAS,UAAAnH,EAAAM,GAAA,KAAA/P,EAAA,QAAAA,EAAA,KAA0E0P,YAAA,eAAAuF,IAA+BC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAAoD,YAAAsD,aAAyB1G,EAAAM,GAAA,KAAAN,EAAAmL,cAAAzE,EAAAS,MAAA5W,EAAA,OAAAA,EAAA,OAAwE0P,YAAA,yBAAAyF,aAAkDC,QAAA,UAAmB3F,EAAAG,GAAAuG,EAAA,kBAAAgE,EAAAC,GAAiD,OAAApa,EAAA,OAAiB0P,YAAA,iBAA2B1P,EAAA,OAAY0P,YAAA,wBAAAyF,aAAiDyJ,eAAA,QAAsB3J,IAAKC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAAwL,cAAAd,OAA4Bna,EAAA,QAAaiV,IAAIC,MAAA,SAAA8H,GAAkD,OAAzBA,EAAAyB,kBAAyBhP,EAAAoL,QAAAmC,OAA6BvN,EAAAqL,cAAAX,EAAAvD,MAAA5W,EAAA,QAA8C0P,YAAA,uCAAiD1P,EAAA,QAAa0P,YAAA,gCAAwCD,EAAAM,GAAA,KAAA/P,EAAA,QAA2B0P,YAAA,qBAA+B1P,EAAA,QAAAyP,EAAAM,GAAAN,EAAAO,GAAAmK,EAAAvD,UAAAnH,EAAAM,GAAA,KAAA/P,EAAA,QAAAA,EAAA,KAA2E0P,YAAA,iBAAAuF,IAAiCC,MAAA,SAAA8H,GAAyBA,EAAAyB,kBAAyBhP,EAAArG,iBAAA+Q,EAAAC,aAAsC3K,EAAAM,GAAA,KAAA/P,EAAA,OAAAyP,EAAAqL,cAAAX,EAAAvD,MAAA5W,EAAA,OAAAA,EAAA,OAAmF0P,YAAA,yBAAAyF,aAAkDC,QAAA,UAAmB3F,EAAAG,GAAAuK,EAAA,kBAAAX,GAA2C,OAAAxZ,EAAA,OAAiB0P,YAAA,iBAA2B1P,EAAA,OAAY0P,YAAA,wBAAAyF,aAAiDyJ,eAAA,UAAuB5e,EAAA,QAAa0P,YAAA,sCAAgDD,EAAAM,GAAA,KAAA/P,EAAA,QAAyB0P,YAAA,qBAA+B1P,EAAA,QAAage,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,IAAAmU,EAAAjX,IAAAsb,WAAA,qBAAkFpO,EAAAM,GAAA,sFAAA/P,EAAA,UAA4Gge,aAAaxd,KAAA,QAAAyd,QAAA,UAAA5Y,MAAAmU,EAAA,MAAAqE,WAAA,iBAA8E5I,IAAMmJ,QAAA,SAAApB,GAA2B,IAAA8B,EAAAlJ,MAAAmJ,UAAAhQ,OAAAiQ,KAAAhC,EAAA7R,OAAA8T,QAAA,SAAA5X,GAAkF,OAAAA,EAAA6X,WAAkBC,IAAA,SAAA9X,GAA+D,MAA7C,WAAAA,IAAA+X,OAAA/X,EAAAhC,QAA0DoK,EAAA4P,KAAA7F,EAAA,QAAAwD,EAAA7R,OAAAmU,SAAAR,IAAA,KAAsF,SAAA9B,GAAkBvN,EAAA1E,kBAAAyO,QAAiCxZ,EAAA,UAAeE,OAAO4d,SAAA,GAAAzY,MAAA,MAA0BoK,EAAAM,GAAAN,EAAAO,GAAAwJ,EAAA5C,UAAAnH,EAAAM,GAAA,KAAAN,EAAAG,GAAAH,EAAA,uBAAA8P,GAA6F,OAAAvf,EAAA,UAAoB0e,UAAUrZ,MAAAka,EAAAla,SAA0BoK,EAAAM,GAAA,8CAAAN,EAAAO,GAAAuP,EAAAla,OAAA,kDAA+H,QAAAoK,EAAAM,GAAA,KAAA/P,EAAA,QAAkCge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,IAAAmU,EAAAjX,IAAAsb,WAAA,qBAAkFpO,EAAAM,GAAA,2CAAA/P,EAAA,SAAgEqe,IAAA,SAAAmB,UAAA,EAAAd,UAAqCrZ,MAAAmU,EAAA5C,OAAqB3B,IAAKqJ,KAAA,SAAAtB,GAAwBA,EAAAuB,iBAAwB9O,EAAAnF,wBAAAkP,SAAsC/J,EAAAM,GAAA,KAAA/P,EAAA,QAA2Bge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,IAAAmU,EAAAjX,IAAAsb,WAAA,qBAAkFpO,EAAAM,GAAA,uFAAA/P,EAAA,UAA6Gge,aAAaxd,KAAA,QAAAyd,QAAA,UAAA5Y,MAAAmU,EAAA,MAAAqE,WAAA,iBAA8E5I,IAAMmJ,QAAA,SAAApB,GAA2B,IAAA8B,EAAAlJ,MAAAmJ,UAAAhQ,OAAAiQ,KAAAhC,EAAA7R,OAAA8T,QAAA,SAAA5X,GAAkF,OAAAA,EAAA6X,WAAkBC,IAAA,SAAA9X,GAA+D,MAA7C,WAAAA,IAAA+X,OAAA/X,EAAAhC,QAA0DoK,EAAA4P,KAAA7F,EAAA,QAAAwD,EAAA7R,OAAAmU,SAAAR,IAAA,KAAsF,SAAA9B,GAAkBvN,EAAAvE,sBAAAsO,QAAqCxZ,EAAA,UAAeE,OAAO4d,SAAA,GAAAzY,MAAA,MAA0BoK,EAAAM,GAAAN,EAAAO,GAAAwJ,EAAA5C,UAAAnH,EAAAM,GAAA,KAAAN,EAAAG,GAAAH,EAAA,sBAAAT,GAAsF,OAAAhP,EAAA,UAAoB0e,UAAUrZ,MAAA2J,EAAA3J,SAAoBoK,EAAAM,GAAA,2CAAAN,EAAAO,GAAAhB,EAAA3J,OAAA,+CAAmH,QAAAoK,EAAAM,GAAA,KAAA/P,EAAA,QAAkCge,aAAaxd,KAAA,OAAAyd,QAAA,SAAA5Y,MAAA,IAAAmU,EAAAjX,IAAAsb,WAAA,qBAAkFpO,EAAAM,GAAA,2CAAA/P,EAAA,SAAgEqe,IAAA,SAAAmB,UAAA,EAAAd,UAAqCrZ,MAAAmU,EAAA5C,OAAqB3B,IAAKqJ,KAAA,SAAAtB,GAAwBA,EAAAuB,iBAAwB9O,EAAA7E,eAAA4O,aAA6B/J,EAAAM,GAAA,KAAA/P,EAAA,OAA8B0P,YAAA,yBAAAyF,aAAkDC,QAAA,iBAAsBpV,EAAA,OAAAA,EAAA,OAAyB0P,YAAA,yBAAAyF,aAAkDC,QAAA,qBAA0BpV,EAAA,OAAAA,EAAA,OAAyB0P,YAAA,yBAAAyF,aAAkDC,QAAA,mBAAwBpV,EAAA,OAAAA,EAAA,OAAyB0P,YAAA,yBAAAyF,aAAkDC,QAAA,mBAAwB3F,EAAAM,GAAA,KAAA/P,EAAA,WAA+BE,OAAO6d,iBAAA,OAAAZ,cAAA,WAA+Cnd,EAAA,OAAY0P,YAAA,aAAuB1P,EAAA,OAAY0P,YAAA,cAAwBD,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAA/P,EAAA,WAA8CE,OAAO6d,iBAAA,OAAAZ,cAAA,WAA+Cnd,EAAA,OAAY0P,YAAA,aAAuB1P,EAAA,MAAWmV,aAAasK,QAAA,OAAezf,EAAA,OAAYE,OAAO8a,IAAAvL,EAAApL,QAAAE,QAAAiG,MAAAiF,EAAApL,QAAAC,SAAAyY,MAAA,QAAA2C,OAAA,kBAAyF,KAAAjQ,EAAAM,GAAA,KAAA/P,EAAA,gBAEl0jBI,oBCChC,IAuBeuf,EAvBUrf,EAAQ,OAcjBsf,CACdxJ,EACAyG,GAT6B,EAV/B,SAAoBzM,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,QCnBhCuf,GACArf,KAAA,UACA0P,YACA4P,iBAAA,UCPeC,GADEngB,OAFP,WAAgB,IAAaC,EAAbC,KAAaC,eAAkD,OAA/DD,KAAuCG,MAAAD,IAAAH,GAAwB,UAAoB6P,YAAA,WAAAyF,aAAoC6K,aAAA,WAEjH5f,oBCkBhC6f,GACAzf,KAAA,SACA0P,YACAD,OAAAqF,EACAc,QAAAuJ,EACAE,QCzByBvf,EAAQ,OAcjB4f,CACdL,EACAE,GAT6B,EAEb,KAEC,KAEU,MAUG,SDIhC/O,UACArQ,QADA,WAEA,OAAAb,KAAAuR,OAAA3Q,MAAAD,IAAAE,WE1Bewf,GADEvgB,OAFP,WAAgB,IAAaC,EAAbC,KAAaC,eAA0BC,EAAvCF,KAAuCG,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiB0P,YAAA,cAAA0Q,OAAiCC,aAAjHvgB,KAAiHa,QAAAC,UAAiCZ,EAAA,OAAY0P,YAAA,oBAA8B1P,EAAA,WAAgB0P,YAAA,uBAAgC,GAA5O5P,KAA4OiQ,GAAA,KAAA/P,EAAA,OAA4B0P,YAAA,mBAA6B1P,EAAA,UAArSF,KAAqSiQ,GAAA,KAAA/P,EAAA,mBAE/RI,oBCChC,IAuBekgB,EAvBUhgB,EAAQ,OAcjBigB,CACdN,EACAE,GAT6B,EAV/B,SAAoB/P,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,QCbhCyN,IAAIC,IAAIwS,KAWD,IAAMC,IAETvR,KAAM,UACNwR,UAAWT,EACXpQ,SAAU,gBACViG,QAAQ,EACRG,KAAM,eACNF,YAAY,EACZnU,WAAasN,KAAM,QAASwR,UAvBjB,kBAAM,IAAAC,QAAA,SAAAC,SAAApP,KAAAlR,EAAAugB,KAAA,eAuB8BrgB,KAAM,UAM1CsgB,EAAA,IAAIN,KAEjBO,eAAgB,kBAASvN,EAAG,IAC5BkC,OAAQ+K,wFC3BV1S,IAAIgR,UAAUnN,MAAQoP,IAEtBjT,IAAIkT,OAAOC,eAAgB,EAE3BnT,IAAIC,IAAImT,KACRpT,IAAIC,IAAIoT,GAGR,IAAIrT,KACF+S,SACA5S,QACAtO,OAAQ,SAAAyhB,GAAA,OAAKA,EAAEC,MACdC,OAAO,6RCfVjY,EAAA,GACAkY,EAAA,GACAC,EAAA,GACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EACAC,KACAC,KACAC,KAEAC,OAAA,EACAxgB,KACAygB,OAAA,EACAC,GACAhiB,KAAA,kBACAwQ,UACAyR,OADA,WAGA,OADA3iB,KAAAuR,OAAA3Q,MAAAmB,KAAAwC,QAAAE,SAGAK,SALA,WAMA,IAAAA,EAAA9E,KAAAuR,OAAA3Q,MAAAmB,KAAA+C,SACA,OAAAA,GAGA8d,eAVA,WAYA,IADA,IAAA3d,EAAAjF,KAAAuR,OAAA3Q,MAAAmB,KAAAkD,IACA+B,EAAA,EAAAA,EAAA/B,EAAAgC,OAAAD,IAAA,CACA,IAAAH,EAAA5B,EAAA+B,GAAAzC,QAAAE,QAGA,GAFAkO,QAAAC,IAAA/L,GACA8L,QAAAC,IAAA5S,KAAA2iB,QACA9b,EAAA,IAAA7G,KAAA2iB,OAAA,GACA,OAAA1d,EAAA+B,GAAAtB,aAGA,UAGAmd,kBAvBA,WAyBA,IADA,IAAA5d,EAAAjF,KAAAuR,OAAA3Q,MAAAmB,KAAAkD,IACA+B,EAAA,EAAAA,EAAA/B,EAAAgC,OAAAD,IAAA,CAEA,GADA/B,EAAA+B,GAAAzC,QAAAE,QACA,IAAAzE,KAAA2iB,OAAA,GACA,OAAA1d,EAAA+B,GAAArB,YAAA0J,OAAApK,EAAA+B,GAAApB,eAGA,UAGArD,mBAlCA,WAmCA,IAAAA,EAAAvC,KAAAuR,OAAA3Q,MAAAmB,KAAAQ,mBACA,OAAAA,GAEAG,kBAtCA,WAuCA,OAAA1C,KAAAuR,OAAA3Q,MAAAmB,KAAAW,mBAEAC,oBAzCA,WA0CA,OAAA3C,KAAAuR,OAAA3Q,MAAAmB,KAAAY,qBAEAC,mBA5CA,WA6CA,OAAA5C,KAAAuR,OAAA3Q,MAAAmB,KAAAa,oBAEAC,qBA/CA,WAgDA,OAAA7C,KAAAuR,OAAA3Q,MAAAmB,KAAAc,sBAEAC,iBAlDA,WAmDA,OAAA9C,KAAAuR,OAAA3Q,MAAAmB,KAAAe,kBAEAC,mBArDA,WAsDA,OAAA/C,KAAAuR,OAAA3Q,MAAAmB,KAAAgB,oBAEAE,YAxDA,WAyDA,OAAAjD,KAAAuR,OAAA3Q,MAAAmB,KAAAkB,aAIA6f,WA7DA,WA8DA,OAAA9iB,KAAAuR,OAAA3Q,MAAAmB,KAAAoB,mBAEA4f,WAhEA,WAiEA,OAAA/iB,KAAAuR,OAAA3Q,MAAAmB,KAAAsB,mBAEA2f,OAnEA,WAoEA,OAAAhjB,KAAAuR,OAAA3Q,MAAAmB,KAAAwB,eAEA0f,MAtEA,WAuEA,OAAAjjB,KAAAuR,OAAA3Q,MAAAmB,KAAA2B,eAGA4L,OACAqT,OADA,SACAO,GACAC,SAAAC,eAAA,aAAAC,UAAA,GAEArjB,KAAAuR,OAAA9P,OAAA,iBACAzB,KAAAsjB,KAAAJ,GACAljB,KAAAujB,WAGAze,SATA,WAeA,IALA,IAAAhD,EAAA0H,EAAA1H,SACAkD,KACAwB,KAGAQ,GAFAhH,KAAAuR,OAAA3Q,MAAAmB,KAAAiH,OAEA,GAAAqK,EAAAvR,EAAAmF,OAAAD,EAAAqM,EAAArM,IAAA,CACA,cAAAlF,EAAAkF,GAAA6O,KAAA2N,cAAA,CACA,IAAA1a,EAAA9I,KAAAyjB,oBACA,KAAA3hB,EAAAkF,GAAAxE,SAAAiR,EACA,KAAA3R,EAAAkF,GAAAxE,SAAAkR,EACA,KAAA5R,EAAAkF,GAAAxE,SAAAmR,GAEAnN,EAAAW,MACA2B,aACAtG,UACA,KAAAV,EAAAkF,GAAAxE,SAAAiR,EACA,KAAA3R,EAAAkF,GAAAxE,SAAAkR,EACA,KAAA5R,EAAAkF,GAAAxE,SAAAmR,KAIA,0BAAA7R,EAAAkF,GAAA0c,SAAA7N,KAAA2N,cAAA,CAGA,IADA,IAAA3Z,KAGA3C,EAAA,EAAA6M,EAAAjS,EAAAkF,GAAA2c,SAAAC,SAAA3c,OACAC,EAAA6M,EACA7M,IAEA2C,EAAA1C,KACAnH,KAAAyjB,oBACA3hB,EAAAkF,GAAA2c,SAAAC,SAAA1c,GAAAuM,EACA3R,EAAAkF,GAAA2c,SAAAC,SAAA1c,GAAAwM,EACA5R,EAAAkF,GAAA2c,SAAAC,SAAA1c,GAAAyM,IAMA3O,EAAAmC,MACA2B,WAAAe,EACArH,SAAAV,EAAAkF,GAAA2c,SAAAC,YAKA5jB,KAAAuR,OAAAC,SAAA,YAAAhL,YACAxG,KAAAuR,OAAAC,SAAA,eAAAxM,iBAIAzC,mBA9DA,WAgEAvC,KAAAuR,OAAA3Q,MAAAmB,KAAAQ,qBAEA,IAAAvC,KAAAuR,OAAA3Q,MAAAmB,KAAAU,KACAzC,KAAAuJ,kBAAAvJ,KAAAuR,OAAA3Q,MAAAmB,MAGA,IAAA/B,KAAAuR,OAAA3Q,MAAAmB,KAAAU,KAAA,IAAAzC,KAAAuR,OAAA3Q,MAAAmB,KAAAU,KACAzC,KAAA4J,mBAAA5J,KAAAuR,OAAA3Q,MAAAmB,QAKAW,kBA5EA,WA8EA,QAAAsE,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAuB,OAAAD,IACAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAA6c,eAAA,YAEA7jB,KAAAuJ,kBAAAvJ,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,IAEAhH,KAAA8jB,gBAAA9jB,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,sCACAxC,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAA+c,QAGA,QAAAjQ,EAAA,EAAAA,EAAA9T,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAuB,OAAA6M,IACAjH,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAoO,GAAAtR,SAAA,MACAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,KACAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAoO,GAAAtR,SAAA,MACAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,KACAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAoO,GAAAtR,SAAA,MACAqK,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,MACAxC,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAoO,GAAAiQ,QAAA,EAEA/jB,KAAAuJ,kBAAAvJ,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAoO,IAEA9T,KAAA8jB,gBAAA9jB,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,sCAKAG,oBAvGA,WAyGA,QAAAqE,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAuB,OAAAD,IACAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAA6c,eAAA,YAGA7jB,KAAAuJ,kBAAAvJ,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,IAEAhH,KAAA8jB,gBAAA9jB,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAAxE,SAAA,sCAEAxC,KAAAuR,OAAA3Q,MAAAmB,KAAA2D,aAAAsB,GAAA+c,SAKAnhB,mBAtHA,WAwHA,QAAAoE,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAqB,OAAAD,IACAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAA6c,eAAA,YAEA7jB,KAAA4J,mBAAA5J,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,IAEAhH,KAAAgkB,iBAAAhkB,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,iBACAxC,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAA+c,QAGA,QAAAvM,EAAA,EAAAA,EAAAxX,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAqB,OAAAuQ,IACA3K,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAA4R,GAAAhV,SAAA,GAAAiR,KACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,GAAAiR,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAA4R,GAAAhV,SAAA,GAAAiR,KACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,GAAAiR,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAA4R,GAAAhV,SAAA,GAAAiR,KACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,GAAAiR,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAA4R,GAAAhV,SAAA,GAAAiR,KACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,GAAAiR,KACAzT,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAA4R,GAAAuM,QAAA,EAEA/jB,KAAA4J,mBAAA5J,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAA4R,IAEAxX,KAAAikB,oBAAAjkB,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAA4R,GAAAhV,YAKAK,qBAnJA,WAqJA,QAAAmE,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAqB,OAAAD,IACAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAA6c,eAAA,YAEA7jB,KAAA4J,mBAAA5J,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,IAEAhH,KAAAgkB,iBAAAhkB,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAAxE,iBACAxC,KAAAuR,OAAA3Q,MAAAmB,KAAA6D,cAAAoB,GAAA+c,SAKAjhB,iBAhKA,WAkKA,QAAAkE,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAsB,OAAAD,IACAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAA6c,eAAA,YAEA7jB,KAAA4J,mBAAA5J,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,IAEAhH,KAAAgkB,iBAAAhkB,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,iBACAxC,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAA+c,QAGA,QAAArM,EAAA,EAAAA,EAAA1X,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAsB,OAAAyQ,IACA7K,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAA+R,GAAAlV,SAAA,GAAAiR,KACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,GAAAiR,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAA+R,GAAAlV,SAAA,GAAAiR,KACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,GAAAiR,IACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAA+R,GAAAlV,SAAA,GAAAiR,KACA5G,KAAAC,MAAA9M,KAAAuR,OAAA3Q,MAAAmB,KAAAiB,WAAAlB,SAAA,GAAAU,SAAA,GAAAiR,KACAzT,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAA+R,GAAAqM,QAAA,EAEA/jB,KAAA4J,mBAAA5J,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAA+R,IAEA1X,KAAAikB,oBAAAjkB,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAA+R,GAAAlV,YAKAO,mBA3LA,WA6LA,QAAAiE,EAAA,EAAAA,EAAAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAsB,OAAAD,IACAhH,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAA6c,eAAA,YAEA7jB,KAAA4J,mBAAA5J,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,IAEAhH,KAAAgkB,iBAAAhkB,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAAxE,iBACAxC,KAAAuR,OAAA3Q,MAAAmB,KAAA4D,YAAAqB,GAAA+c,SAKA9gB,YAxMA,WAyMAjD,KAAAuR,OAAA9P,OAAA,eAAAgD,WAAAD,SAAA,MAIAse,WA7MA,WA+MA,QAAA9b,EAAA,EAAAA,EAAAwC,EAAA1H,SAAAmF,OAAAD,IACAwC,EAAA1H,SAAAkF,GAAAyb,UACAjZ,EAAA1H,SAAA4H,OAAA1C,EAAA,GAOAhH,KAAAkkB,qBAAAlkB,KAAAuR,OAAA3Q,MAAAmB,KAAAmB,YAAAlD,KAAAuR,OAAA3Q,MAAAmB,KAAAqB,SAEA2f,WA1NA,WA4NA,QAAA/b,EAAA,EAAAA,EAAAwC,EAAA1H,SAAAmF,OAAAD,IACAwC,EAAA1H,SAAAkF,GAAAyb,UACAjZ,EAAA1H,SAAA4H,OAAA1C,EAAA,GAIAhH,KAAAmkB,qBAAAnkB,KAAAuR,OAAA3Q,MAAAmB,KAAAmB,YAAAlD,KAAAuR,OAAA3Q,MAAAmB,KAAAuB,SAEA0f,OApOA,WAsOA,QAAAhc,EAAA,EAAAA,EAAAwC,EAAA1H,SAAAmF,OAAAD,IACAwC,EAAA1H,SAAAkF,GAAAyb,UACAjZ,EAAA1H,SAAA4H,OAAA1C,EAAA,GAMAhH,KAAAokB,qBAAApkB,KAAAuR,OAAA3Q,MAAAmB,KAAAmB,YAAAlD,KAAAuR,OAAA3Q,MAAAmB,KAAAyB,SAEAyf,MAhPA,WAkPA,QAAAjc,EAAA,EAAAA,EAAAwC,EAAA1H,SAAAmF,OAAAD,IACAwC,EAAA1H,SAAAkF,GAAAyb,UACAjZ,EAAA1H,SAAA4H,OAAA1C,EAAA,GAIAhH,KAAAqkB,sBAAArkB,KAAAuR,OAAA3Q,MAAAmB,KAAAmB,YAAAlD,KAAAuR,OAAA3Q,MAAAmB,KAAA6B,cAGA0gB,QAvUA,WAyUAtkB,KAAAukB,UACAvkB,KAAAsjB,KAAAtjB,KAAA2iB,QACA3iB,KAAAujB,WAGA3U,SACA2V,QAAA,WAGMC,EAAAC,EAANC,MACA3Z,IAAA,kBACA4Z,SAAA,MACA9O,KAAA,MACA+O,QAAA,IACAC,OAAA,EACA/R,MAAA,SAAA7K,GAEAmU,MAAA,eAGA0I,QAAA,SAAAC,GAIA,IAFA,IAAAC,EAAAR,IAAAO,GAAAE,KAAA,YACA5R,EAAAmR,IAAAO,GAAAE,KAAA,YAAAhe,OACAD,EAAA,EAAAA,EAAAqM,EAAArM,IAAA,CACA,IAAA0B,GACAsc,YACA7K,SACA+K,aACAzb,WACAI,aACAlE,eACAC,kBAEAuf,YAGAC,GACA5gB,YACAC,YAEAiE,EAAAsc,WAAAK,GAAAre,GAAAse,KAAA,MACAF,EAAA5gB,SAAAwgB,EAAAK,GAAAre,GAAAie,KAAA,SAAAK,KAAA,YACAF,EAAA3gB,QAAAugB,EAAAK,GAAAre,GAAAie,KAAA,SAAAK,KAAA,WACA5c,EAAAyc,QAAAhe,KAAAie,GACA1c,EAAAyR,MAAA6K,EAAAK,GAAAre,GAAAie,KAAA,SAAAK,KAAA,gBACA5c,EAAAwc,UAAAF,EAAAK,GAAAre,GAAAie,KAAA,aAAAK,KAAA,QAMA,IALA,IAAAC,EAAAP,EAAAK,GAAAre,GAAAie,KAAA,WAAAhe,OACAwC,EAAAub,EAAAK,GAAAre,GAAAie,KAAA,WACApb,EAAAmb,EAAAK,GAAAre,GAAAie,KAAA,eACAhO,EAAApN,EAAA5C,OAEAC,EAAA,EAAAA,EAAAqe,EAAAre,IAAA,CACA,IAAAse,GACAC,QACA1a,OACA1K,MACAmC,YACAsG,eAGA0c,EAAA1c,WAAA,GAAAW,EAAA4b,GAAAne,GAAAoe,KAAA,OACAE,EAAA1c,WAAA,GAAAW,EAAA4b,GAAAne,GAAAoe,KAAA,QACAE,EAAAza,IAAAtB,EAAA4b,GAAAne,GAAAoe,KAAA,OACAE,EAAA9a,MAAAjB,EAAA4b,GAAAne,GAAAoe,KAAA,SACAE,EAAAnlB,GAAAoJ,EAAA4b,GAAAne,GAAAoe,KAAA,MACAE,EAAAhjB,SAAA,GAAAiH,EAAA4b,GAAAne,GAAAoe,KAAA,iBACAE,EAAAhjB,SAAA,GAAAiH,EAAA4b,GAAAne,GAAAoe,KAAA,iBACAE,EAAAhjB,SAAA,GAAAiH,EAAA4b,GAAAne,GAAAoe,KAAA,iBAEA5c,EAAAe,QAAAtC,KAAAqe,GAEA,QAAAtR,EAAA,EAAAA,EAAA+C,EAAA/C,IAEA,eAAArK,EAAAwb,GAAAnR,GAAAoR,KAAA,OACA,IAAApO,GACA1U,YACA6I,UACAvC,eAGAoO,EAAA7L,OAAAxB,EAAAwb,GAAAnR,GAAAoR,KAAA,UAEA,IADA,IAAAI,EAAA7b,EAAAwb,GAAAnR,GAAA+Q,KAAA,UACApa,EAAA,EAAAA,EAAA6a,EAAAze,OAAA4D,IACAqM,EAAApO,WAAA+B,GAAA,IAAAiL,MAAA,GACAoB,EAAA1U,SAAAqI,IACA4I,KACAC,KACAC,MAEAuD,EAAApO,WAAA+B,GAAA,GAAA6a,EAAAL,GAAAxa,GAAAya,KAAA,OACApO,EAAApO,WAAA+B,GAAA,GAAA6a,EAAAL,GAAAxa,GAAAya,KAAA,QACApO,EAAA1U,SAAAqI,GAAA4I,EAAAiS,EAAAL,GAAAxa,GAAAya,KAAA,kBACApO,EAAA1U,SAAAqI,GAAA6I,EAAAgS,EAAAL,GAAAxa,GAAAya,KAAA,kBACApO,EAAA1U,SAAAqI,GAAA8I,EAAA+R,EAAAL,GAAAxa,GAAAya,KAAA,kBAGA5c,EAAAmB,YAAAjE,cAAAuB,KAAA+P,OACA,CACA,IAAAI,GACA9U,YACAnC,MACA0K,OACAjC,eAGAwO,EAAAjX,GAAAwJ,EAAAwb,GAAAnR,GAAAoR,KAAA,MACAhO,EAAAvM,IAAAlB,EAAAwb,GAAAnR,GAAAoR,KAAA,OAEA,IADA,IAAAK,EAAA9b,EAAAwb,GAAAnR,GAAA+Q,KAAA,UACArR,EAAA,EAAAA,EAAA+R,EAAA1e,OAAA2M,IACA0D,EAAAxO,WAAA8K,GAAA,IAAAkC,MAAA,GACAwB,EAAA9U,SAAAoR,IACAH,KACAC,KACAC,MAEA2D,EAAAxO,WAAA8K,GAAA,GAAA+R,EAAAN,GAAAzR,GAAA0R,KAAA,OACAhO,EAAAxO,WAAA8K,GAAA,GAAA+R,EAAAN,GAAAzR,GAAA0R,KAAA,QACAhO,EAAA9U,SAAAoR,GAAAH,EAAAkS,EAAAN,GAAAzR,GAAA0R,KAAA,gBACAhO,EAAA9U,SAAAoR,GAAAF,EAAAiS,EAAAN,GAAAzR,GAAA0R,KAAA,gBACAhO,EAAA9U,SAAAoR,GAAAD,EAAAgS,EAAAN,GAAAzR,GAAA0R,KAAA,gBAGA5c,EAAAmB,YAAAlE,YAAAwB,KAAAmQ,GAGAtV,EAAAmF,KAAAuB,OAMA,IADA,IAAA9H,EAAAZ,KAAAuR,OAAA3Q,MAAAmB,KACAiF,EAAA,EAAAA,EAAAhF,EAAAiF,OAAAD,IACApG,EAAA8D,WAAAyC,KAAAnF,EAAAgF,GAAAme,QAAA,KAGA7B,KAAA,SAAAsC,GACA,GAAAA,EAAA3e,OAAA,EACAmV,MACA,uDAFA,CAMA,IAAAyJ,EAAA,GACAA,EAAA1C,SAAAC,eAAA,aACA5Z,EAAA,IAAA8X,MAAA5K,OACAgL,EAAA,IAAAJ,MAAAwE,kBACA,IACApR,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,IACA,EACA,OAEA3a,OAAA,IAAAiW,MAAA2E,QAAA,OACA,IAAAtC,EAAA,IAAArC,MAAA4E,eAAA,WACAvC,EAAAV,OAAA,OAQA,IAAAkD,EAAAhD,SAAAiD,cAAA,UACAD,EAAAE,MAAAC,gBAAA,sBACA,IAAAC,EAAAJ,EAAAK,WAAA,MACAC,EAAA,IAAAC,MACAD,EAAAvL,IAAA0K,EAAA,GAOAa,EAAAE,OAAA,WACAR,EAAAlJ,MAAAjd,KAAAid,MACAkJ,EAAAvG,OAAA5f,KAAA4f,OACA2G,EAAAK,UAAAH,EAAA,IAAAzmB,KAAAid,MAAAjd,KAAA4f,QACA,IAAAiH,EAAA,IAAAvF,MAAAwF,QACAD,EAAAE,MAAAZ,EACAU,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAAxD,EAAA,IAAApC,MAAA6F,mBACA9H,IAAAwH,EACAO,aAAA,IAEA5E,EAAA,IAAAlB,MAAA+F,KAAA1D,EAAAD,GACAla,EAAA8d,IAAA9E,IAIAxiB,KAAAunB,iBAAAvnB,KAAA4iB,eAAA,+BAEA5iB,KAAAwnB,kBAAAxnB,KAAA6iB,mBAKA,IAFA,IAAA4E,GAAA,EACA7mB,EAAAZ,KAAAuR,OAAA3Q,MAAAmB,KACAiF,EAAA,EAAAA,EAAAhF,EAAAiF,OAAAD,IACAhF,EAAAgF,GAAAme,QAAA,GAAA1gB,UAAA7D,EAAA2D,QAAAE,QAAA,KACAgjB,EAAAzgB,GAIA,QAAAygB,EAAA,CAIA,IAFA,IAAApU,EAAArR,EAAAylB,GAAAhe,QAAAxC,OAEAC,EAAA,EAAAA,EAAAmM,EAAAnM,IAAA,CACA,IAAAwB,KACAA,EAAAC,UAAA3G,EAAAylB,GAAAhe,QAAAvC,GAAA6D,IAAAG,QAAA,QAAAA,QAAA,QAAAA,QAAA,aACAxC,EAAAE,gBAAA5G,EAAAylB,GAAAhe,QAAAvC,GAAAwD,MAAAQ,QAAA,QAAAA,QAAA,QACAxC,EAAAlG,SAAAR,EAAAylB,GAAAhe,QAAAvC,GAAA1E,SACAkG,EAAAI,WAAA9G,EAAAylB,GAAAhe,QAAAvC,GAAA4B,WACAlI,EAAA8E,aAAAyB,KAAAuB,GAIA,IAFA,IAAAuO,EAAAjV,EAAAylB,GAAA5d,YAAAjE,cAAAqB,OACAmQ,EAAApV,EAAAylB,GAAA5d,YAAAlE,YAAAsB,OACAoQ,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CACA,IAAAqQ,KAEAA,EAAA1e,OAAAhH,EAAAylB,GAAA5d,YAAAlE,YAAA0R,GAAAtM,IAAAoM,MADA,YACA,GACAuQ,EAAAllB,SAAAR,EAAAylB,GAAA5d,YAAAlE,YAAA0R,GAAA7U,SACAklB,EAAA5e,WAAA9G,EAAAylB,GAAA5d,YAAAlE,YAAA0R,GAAAvO,WACAlI,EAAA+E,YAAAwB,KAAAugB,GAEA,QAAAjQ,EAAA,EAAAA,EAAAR,EAAAQ,IAAA,CACA,IAAAkQ,KAEAA,EAAAze,SAAAlH,EAAAylB,GAAA5d,YAAAjE,cAAA6R,GAAApM,OAAA8L,MADA,YACA,GACAwQ,EAAAnlB,SAAAR,EAAAylB,GAAA5d,YAAAjE,cAAA6R,GAAAjV,SACAmlB,EAAA7e,WAAA9G,EAAAylB,GAAA5d,YAAAjE,cAAA6R,GAAA3O,WACAlI,EAAAgF,cAAAuB,KAAAwgB,GAKA3nB,KAAAunB,iBAAAvlB,EAAAylB,GAAAhe,QAAA,+BAEAzJ,KAAAwnB,kBAAAxlB,EAAAylB,GAAA5d,YAAAjE,eACA5F,KAAAwnB,kBAAAxlB,EAAAylB,GAAA5d,YAAAlE,aAGA3F,KAAAuR,OAAA9P,OAAA,SAAAO,IAEA2f,EAAA,IAAAL,MAAAsG,eAGAC,cAAAnT,OAAAoT,kBAEAnG,EAAAoG,QAAArT,OAAAqR,WAAA,IAAArR,OAAAsR,YAAA,IACAH,EAAAmC,YAAArG,EAAAsG,YAEA9E,SACA+E,qBAAA,aACAC,iBAAA,YAAAnoB,KAAAooB,qBAAA,GACAjF,SACA+E,qBAAA,aACAC,iBAAA,YAAAnoB,KAAAqoB,qBAAA,GACAlF,SACA+E,qBAAA,aACAC,iBAAA,UAAAnoB,KAAAsoB,mBAAA,GACAnF,SACA+E,qBAAA,aACAC,iBAAA,QAAAnoB,KAAAuoB,sBAAA,GAEApF,SAAA+E,qBAAA,aAAAC,iBACA,WACA,SAAA9M,GACAA,EAAAoD,iBACApD,EAAAmN,aAAAC,WAAA,SAEA,GAEAtF,SAAA+E,qBAAA,aAAAC,iBACA,YACA,WACAhF,SAAAuF,KAAArC,MAAAsC,QAAA,KAEA,GAEAxF,SAAA+E,qBAAA,aAAAC,iBACA,YACA,WACAhF,SAAAuF,KAAArC,MAAAsC,QAAA,IAEA,GAEAjU,OAAAyT,iBAAA,SAAAnoB,KAAA4oB,gBAAA,KAGAA,eA7RA,WA8RAlH,EAAAmH,QAAAnU,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,IACAtE,EAAAoH,yBACAnH,EAAAoG,QAAArT,OAAAqR,WAAA,IAAArR,OAAAsR,YAAA,KAEAoC,oBAAA,SAAA/M,GAEA,GACA,SAAArb,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,SACA,oBAAA9D,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,QACA,CACAuX,EAAAoD,iBACA,IAAAvR,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAga,EAAA0N,QAAA,MAAArU,OAAAqR,WAAA,WACA1K,EAAA2N,QAAA,KAAAtU,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GACA,IAIAwH,EAJA,IAAA5H,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAEAC,iBAAA9f,EAAA1H,UAEA,GAAA9B,KAAAuR,OAAA3Q,MAAAmB,KAAA4C,UAAA,CACA,GAAAukB,EAAAjiB,OAAA,GACA,IAAAmY,EAAA8J,EAAA,GACA9J,EAAAmK,MACAlH,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEA,MAAA0O,EAAApb,OAAA,CACAkc,SAAAC,eAAA,aAAAiD,MAAAmD,OAAA,UACAxpB,KAAAuR,OAAAC,SAAA,aACA,IAAAiY,GACApH,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACAqH,GACApH,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACAqH,GACApH,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACA4D,EAAAhD,SAAAiD,cAAA,UACAD,EAAAE,MAAAC,gBAAA,sBACA,IAAAC,EAAAJ,EAAAK,WAAA,MACAL,EAAAlJ,MAAA,IACAkJ,EAAAvG,OAAA,IACA,IAAA6G,EAAA,IAAAC,MAEAD,EAAAvL,IAAA,8BAGAuL,EAAAE,OAAA,WACAJ,EAAAK,UAAAH,EAAA,KACA,IAAAI,EAAA,IAAAvF,MAAAwF,QAAAX,GACAU,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,UACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,GAEAwD,EAFA,GAGAC,EAHA,GAIAC,GAEAG,EAAAtnB,SAAAynB,KAAAD,GACAxgB,EAAA8d,IAAAwC,IAIAzH,KACAC,KACAC,WAIA,GAAA2G,EAAAjiB,OAAA,GACA,IAAAoE,EAAA6d,EAAA,GAEA,IACA,GAAA7d,EAAA6e,QAAA7e,EAAA6e,OAAArU,KAAA5O,OAAA,GACA,UAAAoE,EAAA6e,OAAArU,KAAA2N,cACA,GAAAxjB,KAAAuR,OAAA3Q,MAAAmB,KAAA0D,gBACA+D,EAAA2gB,OAAA9e,EAAA6e,QACAlqB,KAAAuR,OAAA9P,OAAA,kBACAzB,KAAAuR,OAAA9P,OAAA,mBACA,CACA,IAAAoH,EAAAwC,EAAA6e,OAAA1nB,SACAsG,EAAA9I,KAAAyjB,oBACA,KAAA5a,EAAA4K,EACA,KAAA5K,EAAA6K,EACA,KAAA7K,EAAA8K,GAEA3T,KAAAuR,OAAA9P,OAAA,mBACAzB,KAAAuR,OAAA9P,OAAA,oBACAoH,UACA,KAAAA,EAAA4K,EACA,KAAA5K,EAAA6K,EACA,KAAA7K,EAAA8K,GAEA7K,aACAshB,GAAA,iBAMA,MAAA5P,GACA7H,QAAAC,IAAA4H,IAKA,GAAAxa,KAAAuR,OAAA3Q,MAAAmB,KAAA6C,eAAA,CACA,GAAAskB,EAAAjiB,OAAA,GACAmY,EAAA8J,EAAA,GACA9J,EAAAmK,MACAlH,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GAEA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GAEA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAIA,MAAA0O,EAAApb,OAAA,CACA,IAAAojB,EAAA,IAAA/I,MAAAgJ,SACA5G,EAAA,IAAApC,MAAAiJ,gBACAC,MAAA,IACA7M,KAAA,KAEA0M,EAAAzG,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGA,IAAAgH,EAAA,IAAAjI,MAAAmJ,OAAAJ,EAAA3G,GACAla,EAAA8d,IAAAiC,GAGA,MAAAlH,EAAApb,OAAA,CAEA,IAAAyjB,EAAA,IAAApJ,MAAAgJ,SACAK,EAAA,IAAArJ,MAAAsJ,uBACAJ,MAAA,IACA7M,KAAA,KAGA+M,EAAA9G,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGA,IAAAsI,EAAA,IAAAvJ,MAAAmJ,OAAAC,EAAAC,GACAnhB,EAAA8d,IAAAuD,GAEA,IAAAC,EAAA,IAAAxJ,MAAAgJ,SACAQ,EAAAlH,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGAuI,EAAAlH,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGA,IAAAwI,EAAA,IAAAzJ,MAAA0J,KAAAF,EAAAH,EAAArJ,MAAA2J,cACAzhB,EAAA8d,IAAAyD,GAGA,MAAA1I,EAAApb,OAAA,CAEA,IAAAikB,EAAA,IAAA5J,MAAAgJ,SACAa,EAAA,IAAA7J,MAAAsJ,uBACAJ,MAAA,IACA7M,KAAA,KAGAuN,EAAAtH,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGA,IAAA6I,EAAA,IAAA9J,MAAAmJ,OAAAS,EAAAC,GACA3hB,EAAA8d,IAAA8D,GAEA,IAAAC,EAAA,IAAA/J,MAAAgJ,SACAe,EAAAzH,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGA8I,EAAAzH,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGA,IAAA+I,EAAA,IAAAhK,MAAA0J,KAAAK,EAAAF,EAAA7J,MAAA2J,cACAzhB,EAAA8d,IAAAgE,GACA,IAAAC,EAAA,IAAAjK,MAAAgJ,SACAiB,EAAA3H,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGAgJ,EAAA3H,SAAAzc,KACA,IAAAma,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,KAGA,IAAAiJ,EAAA,IAAAlK,MAAA0J,KAAAO,EAAAJ,EAAA7J,MAAA2J,cACAzhB,EAAA8d,IAAAkE,GAEA,OAAAnJ,EAAApb,OAAA,KAiEAwkB,EAAA,SAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,IA1EAwP,SAAAC,eAAA,aAAAiD,MAAAmD,OAAA,UACAxpB,KAAAuR,OAAAC,SAAA,kBAGA,IADA,IAAA1P,EAAA0H,EAAA1H,SACAkF,EAAA,EAAAA,EAAAlF,EAAAmF,OAAAD,IAEA,WAAAlF,EAAAkF,GAAA6O,KAAA2N,eACA,SAAA1hB,EAAAkF,GAAA6O,KAAA2N,gBAEAha,EAAA2gB,OAAAroB,EAAAkF,IACAA,KAIA,IAAAglB,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,IACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,GAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,IACAE,GAAAT,EAAAU,qBAGAC,GAAA/sB,KAAAyjB,qBAAA4I,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,OAAAH,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,OAAAH,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,OAgBA,GAfA7Z,QAAAC,IAAAma,IAeAH,KAAAH,EAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,OAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGA,GAAAD,KAAAF,EAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,OAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGA,GAAAD,KAAAD,GAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,OAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAK,GAAA,IAAA5L,MAAA6L,oBAAAC,aAAA,IAEAF,GAAA9F,aAAA,EACA8F,GAAAvE,QAAA,GACA,IAAAuB,GAAA,IAAA5I,MAAA+F,KAAA+E,EAAAc,IAGA1jB,EAAA8d,IAAA4C,IAEA7H,KACAC,KACAC,WAIA,GAAA2G,EAAAjiB,OAAA,GACA,IAAAomB,GAAAnE,EAAA,GACA,IACA,GAAAmE,GAAAnD,QAAAmD,GAAAnD,OAAArU,KAAA5O,OAAA,GACA,uBAAAomB,GAAAnD,OAAAxG,SAAA7N,KAAA2N,cACA,GAAAxjB,KAAAuR,OAAA3Q,MAAAmB,KAAA0D,gBACAkN,QAAAC,IAAAya,GAAAnD,QACA1gB,EAAA2gB,OAAAkD,GAAAnD,QACAlqB,KAAAuR,OAAA9P,OAAA,kBACAzB,KAAAuR,OAAA9P,OAAA,mBACA,CAGA,IAFA,IAAA6rB,GAAAD,GAAAnD,OAAAvG,SAAAC,SACA2J,MACArmB,GAAA,EAAAmM,GAAAia,GAAArmB,OAAAC,GAAAmM,GAAAnM,KACAqmB,GAAApmB,KACAnH,KAAAyjB,oBACA6J,GAAApmB,IAAAuM,EACA6Z,GAAApmB,IAAAwM,EACA4Z,GAAApmB,IAAAyM,IAIA3T,KAAAuR,OAAA9P,OAAA,kBACAzB,KAAAuR,OAAA9P,OAAA,oBACAoH,SAAAykB,GACAxkB,WAAAykB,GACAnD,GAAA,gBAKA,MAAA5P,GACA7H,QAAAC,IAAA4H,IAKA,GAAAxa,KAAAuR,OAAA3Q,MAAAmB,KAAA8C,gBAyBA,GAAAqkB,EAAAjiB,OAAA,GACA,IAAAumB,GAAAtE,EAAA,GACAlpB,KAAAuR,OAAAC,SAAA,kBAEA,IAAAtO,IACAuqB,QAAApS,EAAA0N,QAAA1N,EAAA2N,SACA5b,QAAAogB,GAAAjE,MAAA9V,EAAA+Z,GAAAjE,MAAA7V,EAAA8Z,GAAAjE,MAAA5V,GACAzG,WAIAwgB,GAAA,IAAApM,MAAA2E,QACAyH,GAAArsB,KACA6B,GAAAuqB,OAAA,SAAA/Y,OAAAqR,WAAA,WACA7iB,GAAAuqB,OAAA,QAAA/Y,OAAAsR,YAAA,QACA,IAEA0H,GAAAzE,UAAAvH,GAGAxe,GAAAgK,OAAAwgB,GAAA7B,QAEAlZ,QAAAC,IAAA1P,IACAyP,QAAAC,IAAA1P,GAAAgK,QAEAlN,KAAA2tB,iBAAAzqB,IAEAgmB,KACAlpB,KAAAuR,OAAA9P,OAAA,kBAAAyB,UAIA,GAAAgmB,EAAAjiB,OAAA,GACA,IAAA2mB,GAAA1E,EAAA,GACA,IACA,GAAA0E,GAAA1D,QAAA0D,GAAA1D,OAAArU,KAAA5O,OAAA,GACA,wBAAA2mB,GAAA1D,OAAAxG,SAAA7N,KAAA2N,cACA,GAAAxjB,KAAAuR,OAAA3Q,MAAAmB,KAAA0D,gBACAkN,QAAAC,IAAAgb,GAAA1D,QACA1gB,EAAA2gB,OAAAyD,GAAA1D,QACAlqB,KAAAuR,OAAA9P,OAAA,kBACAzB,KAAAuR,OAAA9P,OAAA,mBACA,CAGA,IAFA,IAAAosB,GAAAD,GAAA1D,OAAAvG,SAAAC,SACAkK,MACAnW,GAAA,EAAAxD,GAAA0Z,GAAA5mB,OAAA0Q,GAAAxD,GAAAwD,KACAmW,GAAA3mB,KACAnH,KAAAyjB,oBACAoK,GAAAlW,IAAAlE,EACAoa,GAAAlW,IAAAjE,EACAma,GAAAlW,IAAAhE,IAIA3T,KAAAuR,OAAA9P,OAAA,oBACAzB,KAAAuR,OAAA9P,OAAA,oBACAoH,SAAAglB,GACA/kB,WAAAglB,GACA1D,GAAA,kBAKA,MAAA5P,GACA7H,QAAAC,IAAA4H,KAOAoH,GAAA,EACAG,EAAA1G,EAAA0N,QACA9G,EAAA5G,EAAA2N,QACAhH,EAAAH,EACAK,EAAAJ,GAGAuG,oBA3xBA,SA2xBAhN,IACA,IAAAuG,IACAC,EAAA,IAAAE,EAAA1G,EAAA0N,SAAA/G,EACAF,EAAA,IAAAzG,EAAA2N,QAAA/G,GAAAC,IAGAoG,kBAjyBA,WAkyBA1G,GAAA,GAGA2G,qBAryBA,SAqyBAlN,GAEA,IAAA0S,EAAArM,EAAAqM,IAAA,IAAA1S,EAAA2S,OACAtM,EAAAqM,IAAAzM,MAAAzU,KAAAohB,MAAAF,EAAA,OACArM,EAAAoH,yBACA,IAAAoF,EAAAxM,EAAAqM,IACApb,QAAAC,IAAA,OAAAsb,GACAvb,QAAAC,IAAA8B,OAAAqR,WAAA,IAAArR,OAAAsR,cAMAzC,QAlzBA,WAmzBAvjB,KAAA2iB,OAAA1b,OAAA,IAGAjH,KAAAmuB,SACAC,sBAAApuB,KAAAujB,WAEA4K,OAzzBA,YA2zBA,IAAAvM,IACAC,GAAA,GAEAC,EAAAjV,KAAA+f,KAAA,GAAA/f,KAAAwhB,IAAA,GAAAvM,IACAK,EAAAb,MAAAzU,KAAAyhB,SAAA,GAAAxM,GACAM,EAAAd,MAAAzU,KAAAyhB,SAAAzM,GACAH,EAAArW,OAAAoI,EAAA,IAAA5G,KAAA0hB,IAAApM,GAAAtV,KAAA2hB,IAAApM,GACAV,EAAArW,OAAAqI,EAAA,IAAA7G,KAAA2hB,IAAArM,GACAT,EAAArW,OAAAsI,EAAA,IAAA9G,KAAA0hB,IAAApM,GAAAtV,KAAA0hB,IAAAnM,GACAV,EAAA+M,OAAA/M,EAAArW,QACAsW,EAAA7hB,OAAA0J,EAAAkY,IAGA+B,oBAx0BA,SAw0BAgG,EAAAC,EAAAC,GACA,IAAA+E,EAAA,EAgBA,OAbAjF,EAAA,GAAAE,GAAA,IACA+E,EAAA,IAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,KAEAnF,EAAA,GAAAE,EAAA,IACA+E,EAAA,IAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,GAAA,MAEAnF,EAAA,GAAAE,GAAA,IACA+E,EAAA,IAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,KAEAnF,EAAA,GAAAE,EAAA,IACA+E,EAAA,QAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,KAGAF,EADA,IAAA7hB,KAAAgiB,KAAAnF,EAAA,KAAA7c,KAAA+hB,KAIArH,iBA51BA,SA41BAuH,EAAAC,GACA,IADA,IAAAC,EAAA,SACAhoB,EAAAqM,GACA,IAAA7Q,EAAAssB,EAAA9nB,GAAAxE,SACA2jB,EAAAhD,SAAAiD,cAAA,UACAD,EAAAE,MAAAC,gBAAA,sBACA,IAAAC,EAAAJ,EAAAK,WAAA,MACAL,EAAAlJ,MAAA,IACAkJ,EAAAvG,OAAA,IACA,IAAA6G,EAAA,IAAAC,MAEAD,EAAAvL,IAAA6T,EAGAtI,EAAAE,OAAA,WACAJ,EAAAK,UAAAH,EAAA,KACA,IAAAI,EAAA,IAAAvF,MAAAwF,QAAAX,GACAU,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,UACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,GAEAzjB,EAAA,GAFA,GAGAA,EAAA,GAHA,GAIAA,EAAA,IAEAsnB,EAAAtnB,SAAAynB,KAAAD,GACAxgB,EAAA8d,IAAAwC,KA9BA9iB,EAAA,EAAAqM,EAAAyb,EAAA7nB,OAAAD,EAAAqM,EAAArM,IAAAgoB,EAAAhoB,IAmCA8c,gBAh4BA,SAg4BAmL,EAAAF,GACA,IAAAvsB,EAAAysB,EACA9I,EAAAhD,SAAAiD,cAAA,UACAD,EAAAE,MAAAC,gBAAA,sBACA,IAAAC,EAAAJ,EAAAK,WAAA,MACAL,EAAAlJ,MAAA,IACAkJ,EAAAvG,OAAA,IACA,IAAA6G,EAAA,IAAAC,MAEAD,EAAAvL,IAAA6T,EAGAtI,EAAAE,OAAA,WACAJ,EAAAK,UAAAH,EAAA,KACA,IAAAI,EAAA,IAAAvF,MAAAwF,QAAAX,GACAU,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,UACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,GAEAzjB,EAAA,GAFA,GAGAA,EAAA,GAHA,GAIAA,EAAA,IAEAsnB,EAAAtnB,SAAAynB,KAAAD,GACAxgB,EAAA8d,IAAAwC,KAIAtC,kBAl6BA,SAk6BAsH,GACA,QAAA5nB,EAAA,EAAAmM,EAAAyb,EAAA7nB,OAAAC,EAAAmM,EAAAnM,IAAA,KAgCAukB,EAAA,SAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,IAzCAub,EAAAJ,EAAA5nB,GAAA1E,SACAwpB,EAAA,IAAA1K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACAsY,EAAA,IAAA3K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACAuY,EAAA,IAAA5K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACAwY,EAAA,IAAA7K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GAEAyY,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAA6C,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACA2Y,GAAA4C,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACA4Y,GAAA2C,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACA6Y,GAAA0C,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACA8Y,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAeA,GAAAF,IAAAH,EAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KAIA,GAAAD,IAAAF,EAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KAIA,GAAAD,IAAAD,EAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,KAKAT,EAAAU,qBACA,IAAApJ,EAAA,IAAApC,MAAA6L,oBAAAC,aAAA,IACA1J,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACAla,EAAA8d,IAAA4C,KAIAlG,iBApgCA,SAogCAiL,GACA,IAAAzsB,EAAAysB,EACAjD,EAAA,IAAA1K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACAsY,EAAA,IAAA3K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACAuY,EAAA,IAAA5K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACAwY,EAAA,IAAA7K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GAEAyY,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAA7pB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA2Y,GAAA9pB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA4Y,GAAA/pB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA6Y,GAAAhqB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA8Y,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAKAT,EAAAU,qBAEA,IAAApJ,EAAA,IAAApC,MAAA6L,oBAAAC,aAAA,IACA1J,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACAla,EAAA8d,IAAA4C,IAGAjG,oBArmCA,SAqmCAgL,GACA,IAAAzsB,EAAAysB,EACAjD,EAAA,IAAA1K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACAsY,EAAA,IAAA3K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACAuY,EAAA,IAAA5K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACAwY,EAAA,IAAA7K,MAAA2E,QAAAzjB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GAEAyY,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAA7pB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA2Y,GAAA9pB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA4Y,GAAA/pB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA6Y,GAAAhqB,EAAA,GAAAiR,EAAAjR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAmR,GACA8Y,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAKAT,EAAAU,qBAEA,IAAApJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,MACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACAla,EAAA8d,IAAA4C,IAGA3gB,kBAtsCA,SAssCA6lB,GACA,QAAAloB,EAAA,EAAAA,EAAAsC,EAAA1H,SAAAmF,OAAAC,IACA,WAAAsC,EAAA1H,SAAAoF,GAAA2O,KAAA2N,eACA3W,KAAAC,MAAA,KAAAtD,EAAA1H,SAAAoF,GAAA1E,SAAAiR,KAAA5G,KAAAC,MAAAsiB,EAAA5sB,SAAA,KACAqK,KAAAC,MAAA,KAAAtD,EAAA1H,SAAAoF,GAAA1E,SAAAkR,KAAA7G,KAAAC,MAAAsiB,EAAA5sB,SAAA,KACAqK,KAAAC,MAAA,KAAAtD,EAAA1H,SAAAoF,GAAA1E,SAAAmR,KAAA9G,KAAAC,MAAAsiB,EAAA5sB,SAAA,MACAgH,EAAA1H,SAAA4H,OAAAxC,EAAA,GACAlH,KAAAuR,OAAA9P,OAAA,kBACAzB,KAAAuR,OAAA9P,OAAA,iBAMAmI,mBAptCA,SAotCAwlB,GACA,QAAAloB,EAAA,EAAAA,EAAAsC,EAAA1H,SAAAmF,OAAAC,IACA,SAAAsC,EAAA1H,SAAAoF,GAAA2O,KAAA2N,eACA3W,KAAAC,MAAAtD,EAAA1H,SAAAoF,GAAAyc,SAAAC,SAAA,GAAAnQ,KAAA5G,KAAAC,MAAAsiB,EAAA5sB,SAAA,GAAAiR,IACA5G,KAAAC,MAAAtD,EAAA1H,SAAAoF,GAAAyc,SAAAC,SAAA,GAAAnQ,KAAA5G,KAAAC,MAAAsiB,EAAA5sB,SAAA,GAAAiR,IACA5G,KAAAC,MAAAtD,EAAA1H,SAAAoF,GAAAyc,SAAAC,SAAA,GAAAnQ,KAAA5G,KAAAC,MAAAsiB,EAAA5sB,SAAA,GAAAiR,IACA5G,KAAAC,MAAAtD,EAAA1H,SAAAoF,GAAAyc,SAAAC,SAAA,GAAAnQ,KAAA5G,KAAAC,MAAAsiB,EAAA5sB,SAAA,GAAAiR,KACAjK,EAAA1H,SAAA4H,OAAAxC,EAAA,GACAlH,KAAAuR,OAAA9P,OAAA,kBACAzB,KAAAuR,OAAA9P,OAAA,iBAMAksB,iBAnuCA,SAmuCAzqB,GAEA,IAAAkc,KACAvN,EAAA7R,KAyBA,SAAAoN,EAAAwS,EAAA3C,GACA,IAAA/P,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEA6B,EAAAuqB,OAAA,OAAA7N,IAAAlL,OAAAqR,WAAA,WACA7iB,EAAAuqB,OAAA,MAAAxQ,IAAAvI,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAIA7P,EAAAN,OAAA9P,OAAA,iBAAAyL,GAEA,IAAAmiB,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAUA,OARAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GA5CAsd,EAAAhS,EAAA,SAEAiV,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,GAAA,UACAiV,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,GAAA,SACAiV,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,EAAA,UACAiV,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAmCA,IAAAqY,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAnJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,WACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACA/Q,QAAAC,IAAA,QACAD,QAAAC,IAAAsX,GACAzH,EAAAyH,EAAAzH,KAEAjZ,EAAA8d,IAAA4C,GAEA7H,KACAC,KACAC,MAGA+M,uBAh5CA,SAg5CApsB,EAAAkf,GAEA,IAAAhD,KAEAmQ,EAAA,IAAA1iB,KAAA2hB,IAAA3hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IACAY,EAAA,IAAA3iB,KAAA0hB,IAAA1hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IACAa,EAAA,IAAA5iB,KAAA2hB,IAAA3hB,KAAA+hB,GAAA/hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IACAc,EAAA,IAAA7iB,KAAA0hB,IAAA1hB,KAAA+hB,GAAA/hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IACAe,EAAA,IAAA9iB,KAAA2hB,IAAA3hB,KAAA+hB,GAAA/hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IACAgB,EAAA,IAAA/iB,KAAA0hB,IAAA1hB,KAAA+hB,GAAA/hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IACAiB,EAAA,IAAAhjB,KAAA2hB,KAAA3hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IACAkB,EAAA,IAAAjjB,KAAA0hB,KAAA1hB,KAAA8hB,KAAA,KAAAvM,EAAA,IAAAvV,KAAA+hB,IAyBA,SAAAxhB,EAAAwS,EAAA3C,GACA,IAAA/P,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEA6B,EAAAuqB,OAAA,OAAA7N,IAAAlL,OAAAqR,WAAA,WACA7iB,EAAAuqB,OAAA,MAAAxQ,IAAAvI,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GACA,IAAA2N,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAMA,OAJAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GAvCAsd,EAAAhS,EAAAmiB,EAAAC,GAEAnN,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,EAAAuiB,EAAAC,GACAvN,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,EAAAqiB,EAAAC,GACArN,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,EAAAyiB,EAAAC,GACAzN,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAwBA,IAAAqY,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAnJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,WACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACAjB,EAAAyH,EAAAzH,KAEAjZ,EAAA8d,IAAA4C,GAEA7H,KACAC,KACAC,MAGA8B,sBAxjDA,SAwjDAnhB,EAAA+f,GAEA,IAAA7D,KAyBA,SAAAhS,EAAAwS,EAAA3C,GACA,IAAA/P,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEA6B,EAAAuqB,OAAA,OAAA7N,IAAAlL,OAAAqR,WAAA,WACA7iB,EAAAuqB,OAAA,MAAAxQ,IAAAvI,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GACA,IAAA2N,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAMA,OAJAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GAvCAsd,EAAAhS,EAAA,IAAA6V,EAAA,IAAAA,GAEAZ,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,GAAA,IAAA6V,GAAA,IAAAA,GACAZ,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,GAAA,IAAA6V,EAAA,IAAAA,GACAZ,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAEAyL,EAAAhS,EAAA,IAAA6V,GAAA,IAAAA,GACAZ,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GA0BA,IAAAqY,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAnJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,WACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACAjB,EAAAyH,EAAAzH,KAEAjZ,EAAA8d,IAAA4C,GAEA7H,KACAC,KACAC,MAIAwN,kBA1tDA,SA0tDAC,GACA,IAAA9iB,EAAA,IAAAoU,MAAA2E,QAYA,OAXA/Y,EAAA7L,KAEA2uB,EAAAvc,EAAA,MAAAiB,OAAAqR,WAAA,WACAiK,EAAAtc,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAIA9Y,EAAA+b,UAAAvH,GAGAxU,GAGA+iB,kBA1uDA,SA0uDA/iB,GACAA,EAAAgjB,QAAAxO,GACA,IAAAsO,GAAAvc,EAAA,EAAAC,EAAA,GAMA,OALAsc,EAAAvc,EAAA5G,KAAAC,OAAAI,EAAAuG,EAAA,MAAAiB,OAAAqR,WAAA,UACAiK,EAAAtc,EAAA7G,KAAAC,OAAAI,EAAAwG,EAAA,SAAAgB,OAAAsR,YAAA,QAIAgK,GA+KA9L,qBAj6DA,SAi6DAhhB,EAAAuY,GACA9I,QAAAC,IAAA6I,GACA,IAAA2D,KACAvN,EAAA7R,KACAmwB,KAIA,GAFAxd,QAAAC,IAAAf,EAAAN,OAAA3Q,MAAAmB,KAAA8B,YAEA,IAAAgO,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAoD,OACA,QAAAD,EAAA,EAAAA,EAAA,EAAAA,IACAmpB,EAAAhpB,KAAA0K,EAAAoe,kBAAApe,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAmD,KAGA2L,QAAAC,IAAAud,GAGA,QAAAvY,EAAA,EAAAA,EAAA,EAAAA,IACAuY,EAAAvY,GAAAnE,GAAAgI,EAGAzb,KAAAuR,OAAA9P,OAAA,mBAEA,QAAAyW,EAAA,EAAAA,EAAA,EAAAA,IACAkH,EAAAhS,EAAA+iB,EAAAjY,IACAvF,QAAAC,IAAAwM,GACAiD,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAKA,IAAA8Z,EAAAztB,KAAAiwB,kBAAA/sB,EAAAgK,QAEAugB,EAAAha,GAAAgI,EAEA,IAAA2U,EAAApwB,KAAA+vB,kBAAAtC,GACAztB,KAAAuR,OAAA9P,OAAA,wBAAA2uB,EAAAvE,SAEA,IAAAwE,EAMA,SAAAC,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAEA,IAAA2N,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAOA,OALAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GAvBAyuB,CAAA9C,GACA+C,GAAAH,EAAA9G,MAAA9V,EAAA4c,EAAA9G,MAAA7V,EAAA2c,EAAA9G,MAAA5V,GA2BA,SAAAvG,EAAAkjB,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAIA7P,EAAAN,OAAA9P,OAAA,iBAAAyL,GAEA,IAAAmiB,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAUA,OARAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GA9CA9B,KAAAuR,OAAA9P,OAAA,wBAAA+uB,GAsDA,IAAAxE,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAnJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,WACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACA/Q,QAAAC,IAAA,QACAD,QAAAC,IAAAsX,GACAzH,EAAAyH,EAAAzH,KAEAjZ,EAAA8d,IAAA4C,GAEA7H,KACAC,KACAC,MAEA4B,qBAlnEA,SAknEAjhB,EAAAuY,GACA9I,QAAAC,IAAA6I,GACA,IAAA2D,KACAvN,EAAA7R,KACAmwB,KAIA,GAFAxd,QAAAC,IAAAf,EAAAN,OAAA3Q,MAAAmB,KAAA8B,YAEA,IAAAgO,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAoD,OACA,QAAAD,EAAA,EAAAA,EAAA,EAAAA,IACAmpB,EAAAhpB,KAAA0K,EAAAoe,kBAAApe,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAmD,KAGA2L,QAAAC,IAAAud,GAGA,QAAAM,EAAA,EAAAA,EAAA,EAAAA,IACAN,EAAAM,GAAA/c,GAAA+H,EAGAzb,KAAAuR,OAAA9P,OAAA,mBAEA,QAAAivB,EAAA,EAAAA,EAAA,EAAAA,IACAtR,EAAAhS,EAAA+iB,EAAAO,IACA/d,QAAAC,IAAAwM,GACAiD,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAKA,IAAA8Z,EAAAztB,KAAAiwB,kBAAA/sB,EAAAgK,QAEAugB,EAAA/Z,GAAA+H,EAEA,IAAA2U,EAAApwB,KAAA+vB,kBAAAtC,GACAztB,KAAAuR,OAAA9P,OAAA,wBAAA2uB,EAAAvE,SAEA,IAAAwE,EAMA,SAAAC,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAEA,IAAA2N,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAOA,OALAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GAvBAyuB,CAAA9C,GACA+C,GAAAH,EAAA9G,MAAA9V,EAAA4c,EAAA9G,MAAA7V,EAAA2c,EAAA9G,MAAA5V,GA2BA,SAAAvG,EAAAkjB,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAIA7P,EAAAN,OAAA9P,OAAA,iBAAAyL,GAEA,IAAAmiB,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAUA,OARAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GA9CA9B,KAAAuR,OAAA9P,OAAA,wBAAA+uB,GAsDA,IAAAxE,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAnJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,WACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACA/Q,QAAAC,IAAA,QACAD,QAAAC,IAAAsX,GACAzH,EAAAyH,EAAAzH,KAEAjZ,EAAA8d,IAAA4C,GAEA7H,KACAC,KACAC,MAEA6B,qBAn0EA,SAm0EAlhB,EAAAkf,GACA,IAAAhD,KACAvN,EAAA7R,KACAmwB,KAGA,OAAAte,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAoD,OACA,QAAAD,EAAA,EAAAA,EAAA,EAAAA,IACAmpB,EAAAhpB,KAAA0K,EAAAoe,kBAAApe,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAmD,KAGA2L,QAAAC,IAAAud,GAGA,IAAA1C,EAAAztB,KAAAiwB,kBAAA/sB,EAAAgK,QAEAyF,QAAAC,IAAA6a,GAEA,IAAA2C,EAAApwB,KAAA+vB,kBAAAtC,GACAztB,KAAAuR,OAAA9P,OAAA,wBAAA2uB,EAAAvE,SAEA,IAAAwE,EAkDA,SAAAC,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAEA,IAAA2N,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAOA,OALAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GAnEAyuB,CAAA9C,GACA+C,GAAAH,EAAA9G,MAAA9V,EAAA4c,EAAA9G,MAAA7V,EAAA2c,EAAA9G,MAAA5V,GAEA3T,KAAAuR,OAAA9P,OAAA,wBAAA+uB,GAIA,IADA,IAAAG,KACAC,EAAA,EAAAA,EAAAT,EAAAlpB,OAAA2pB,IAAA,CACA,IAAAloB,KACAA,EAAA+K,EAAA0c,EAAAS,GAAAnd,EAAAga,EAAAha,EACA/K,EAAAgL,EAAAyc,EAAAS,GAAAld,EAAA+Z,EAAA/Z,EACAid,EAAAxpB,KAAAuB,GAEAiK,QAAAC,IAAA+d,GAuBAhe,QAAAC,IAAAud,GAGAnwB,KAAAuR,OAAA9P,OAAA,mBAEA,QAAAovB,EAAA,EAAAA,EAAA,EAAAA,IACAzR,EAAAhS,EAAA+iB,EAAAU,IAEAxO,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GA0BA,SAAAvG,EAAAkjB,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAIA7P,EAAAN,OAAA9P,OAAA,iBAAAyL,GAEA,IAAAmiB,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAUA,OARAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GAQA,IAAAkqB,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAnJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,WACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACA/Q,QAAAC,IAAA,QACAD,QAAAC,IAAAsX,GACAzH,EAAAyH,EAAAzH,KAEAjZ,EAAA8d,IAAA4C,GAEA7H,KACAC,KACAC,MAEAuO,qBA9iFA,SA8iFA5tB,EAAAuY,GACA9I,QAAAC,IAAA6I,GACA,IAAA2D,KACAvN,EAAA7R,KACAmwB,KAIA,GAFAxd,QAAAC,IAAAf,EAAAN,OAAA3Q,MAAAmB,KAAA8B,YAEA,IAAAgO,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAoD,OACA,QAAAD,EAAA,EAAAA,EAAA,EAAAA,IACAmpB,EAAAhpB,KAAA0K,EAAAoe,kBAAApe,EAAAN,OAAA3Q,MAAAmB,KAAA8B,WAAAmD,KAGA2L,QAAAC,IAAAud,GAGA,QAAAY,EAAA,EAAAA,EAAA,EAAAA,IACAZ,EAAAY,GAAArd,GAAA+H,EAGAzb,KAAAuR,OAAA9P,OAAA,mBAEA,QAAAuvB,EAAA,EAAAA,EAAA,EAAAA,IACA5R,EAAAhS,EAAA+iB,EAAAa,IACAre,QAAAC,IAAAwM,GACAiD,EAAAlb,KAAAiY,EAAAmK,MAAA9V,GACA6O,EAAAnb,KAAAiY,EAAAmK,MAAA7V,GACA6O,EAAApb,KAAAiY,EAAAmK,MAAA5V,GAKA,IAAA8Z,EAAAztB,KAAAiwB,kBAAA/sB,EAAAgK,QAEAugB,EAAA/Z,GAAA+H,EAEA,IAAA2U,EAAApwB,KAAA+vB,kBAAAtC,GACAztB,KAAAuR,OAAA9P,OAAA,wBAAA2uB,EAAAvE,SAEA,IAAAwE,EAMA,SAAAC,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAEA,IAAA2N,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAOA,OALAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GAvBAyuB,CAAA9C,GACA+C,GAAAH,EAAA9G,MAAA9V,EAAA4c,EAAA9G,MAAA7V,EAAA2c,EAAA9G,MAAA5V,GA2BA,SAAAvG,EAAAkjB,GACA,IAAApjB,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAivB,EAAA7c,EAAA,MAAAiB,OAAAqR,WAAA,WACAuK,EAAA5c,EAAA,KAAAgB,OAAAsR,YAAA,QACA,IAEA9Y,EAAA+b,UAAAvH,GAIA7P,EAAAN,OAAA9P,OAAA,iBAAAyL,GAEA,IAAAmiB,EAAA,IAAA/N,MAAA6H,UACAzH,EAAAlf,SACA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aAUA,OARAgG,EAAAhuB,IAAAqgB,EAAAlf,SAAA0K,EAAAkc,IAAA1H,EAAAlf,UAAA6mB,aACAgG,EAAA/F,iBAAA9f,EAAA1H,UAEA,GA9CA9B,KAAAuR,OAAA9P,OAAA,wBAAA+uB,GAsDA,IAAAxE,EAAA,IAAA1K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA0J,EAAA,IAAA3K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA2J,EAAA,IAAA5K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA4J,EAAA,IAAA7K,MAAA2E,QACA5D,EAAA,GACAC,EAAA,GACAC,EAAA,IAGA6J,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GAEA,IAAAE,GAAAhK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA+J,GAAAjK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgK,GAAAlK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAiK,GAAAnK,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAkK,GACAH,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,KACAC,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IACAK,GACAH,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,KACAE,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IACAM,GACAH,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,KACAG,EAAA,GAAAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,IACAO,EAAA/f,KAAA+f,IAAAH,EAAAC,EAAAC,GACAE,EAAAT,EAAAU,qBAEA,SAAArB,EAAAhH,EAAAiH,EAAAC,GAEA,IAAAC,EAAAnH,EAAAoH,QAQA,OANAD,EAAAE,MAAAJ,GAEAE,EAAAvC,aAEAuC,EAAAnY,EAAAkY,EAAAlY,EAAAmY,EAAAlY,EAAAiY,EAAAjY,EAAAkY,EAAAjY,EAAAgY,EAAAhY,GAEA9G,KAAAkf,KAAAJ,EAAAlY,EAAAkY,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAAjY,EAAAiY,EAAAhY,EAAAgY,EAAAhY,GAGAiZ,IAAAH,IAEAhB,EAAAO,EAAAC,EAAAC,GACA,GAEAE,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAF,IAEAjB,EAAAO,EAAAE,EAAAD,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAD,IAAAD,IAEAlB,EAAAO,EAAAG,EAAAF,GACA,GAEAG,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAGAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,IACAT,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,MAAAJ,MAIA,IAAAnJ,EAAA,IAAApC,MAAA6N,qBAAA3E,MAAA,WACA9G,EAAA0D,aAAA,EACA1D,EAAAiF,QAAA,GACA,IAAAuB,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA1I,GACA/Q,QAAAC,IAAA,QACAD,QAAAC,IAAAsX,GACAzH,EAAAyH,EAAAzH,KAEAjZ,EAAA8d,IAAA4C,GAEA7H,KACAC,KACAC,QCtmGe0O,GADEnxB,OAFjB,WAA0B,IAAaC,EAAbC,KAAaC,eAAkD,OAA/DD,KAAuCG,MAAAD,IAAAH,GAAwB,OAAiB6P,YAAA,kBAAAxP,OAAqCC,GAAA,gBAE9HC,oBCCjB,ICiBA4wB,EDMeC,EAvBU3wB,EAAQ,OAcjCC,CACEiiB,EACAuO,GATF,EAVA,SAAA3gB,GACE9P,EAAQ,SAaV,kBAEA,MAUgC,QCnBhC4wB,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KAKAC,GAAA,EACAC,EAAA,EAAAC,EAAA,EACAC,EAAA,EAAAC,EAAA,EACAC,EAAA,EAAAC,EAAA,EACAC,EAAA,EAAAC,EAAA,EACAjnB,EAAA,IAAAiW,MAAA2E,QACAsM,GACA7xB,KAAA,aACAwQ,UACAyR,OADA,WAKA,OADA3iB,KAAAuR,OAAA3Q,MAAAmB,KAAAwC,QAAAiuB,aAGA1tB,SAPA,WAQA,IAAAA,EAAA9E,KAAAuR,OAAA3Q,MAAAmB,KAAA+C,SACA,OAAAA,IAIAwK,OACAqT,OADA,SACAO,GACAC,SAAAC,eAAA,aAAAC,UAAA,GACArjB,KAAAsjB,KAAAJ,GACAljB,KAAAujB,WAIAze,SARA,WAWA,IAFA,IAAAhD,EAAAsvB,EAAAtvB,SACA0E,KACAQ,EAAA,EAAAqM,EAAAvR,EAAAmF,OAAAD,EAAAqM,EAAArM,IACA,WAAAlF,EAAAkF,GAAA6O,KAAA2N,gBACAhd,EAAAW,KAAArF,EAAAkF,GAAAyrB,UACAjsB,EAAAW,KAAArF,EAAAkF,KAIAhH,KAAAuR,OAAAC,SAAA,YAAAhL,cAGA8d,QApCA,WAqCAtkB,KAAAsjB,KAAAtjB,KAAA2iB,QACA3iB,KAAAujB,WAEA3U,SACA0U,KADA,SACAsC,GACA,OAAAA,EAAA3e,OAAA,CACA,IAAA4e,EAAA1C,SAAAC,eAAA,cACgBkO,EAAhB,IAAAhQ,MAAAsG,eACAC,cAAAnT,OAAAoT,kBACgBwJ,EAAhBvJ,QAAArT,OAAAqR,WAAArR,OAAAsR,aACAH,EAAAmC,YAAAsJ,EAAArJ,YACgBmJ,EAAhB,IAAA9P,MAAA5K,OACgB2a,EAAhB,IAAA/P,MAAAwE,kBAAA,IAAApR,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,aACAxjB,SAAAmR,EAAA,KACA4d,EAAA,IAAAjQ,MAAAoR,cAAArB,EAAAC,EAAArJ,aACA0K,YAAA,EACApB,EAAAqB,WAAA,EACArB,EAAAsB,eAAA,EACAtB,EAAAuB,aAAA,IACA,IAAAC,EAAA/yB,KAAAgzB,yBAAApN,EAAA,MACAjT,QAAAC,IAAAmgB,GAEA,IADA,IAAAE,KACAjsB,EAAA,EAAAA,EAAA,EAAAA,IACAisB,EAAA9rB,KAAA,IAAAma,MAAA6F,mBAAA9H,IAAA0T,EAAA/rB,MAEA,IAAAksB,EAAA,IAAA5R,MAAA+F,KAAA,IAAA/F,MAAA6R,aAAA,OAAAF,GACAC,EAAAvP,SAAAV,MAAA,QACgBmO,EAAhB9J,IAAA4L,GAEAxe,OAAAyT,iBAAA,SAAAnoB,KAAA4oB,gBAAA,QACA,OAAAhD,EAAA3e,OAAA,CACA,IAAAub,EACAqD,EAAA1C,SAAAC,eAAA,aACgBiO,EAAhB,IAAA/P,MAAAwE,kBAAA,IAAApR,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,YACgBoL,EAAhB,IAAA9P,MAAA5K,OACAwa,EAAA/N,SAAAiD,cAAA,WACAnJ,MAAA,IACAiU,EAAAtR,OAAA,IACA,IAAA2G,EAAA2K,EAAA1K,WAAA,MACAD,EAAA6M,UAAA,uBACA7M,EAAA8M,SAAA,IAAAnC,EAAAjU,MAAAiU,EAAAtR,QACAqT,GACAjzB,KAAAszB,YAAA1N,EAAA,IACA5lB,KAAAszB,YAAA1N,EAAA,IACA5lB,KAAAszB,YAAA1N,EAAA,IACA5lB,KAAAszB,YAAA1N,EAAA,IACA5lB,KAAAszB,YAAA1N,EAAA,IACA5lB,KAAAszB,YAAA1N,EAAA,KANA,IAQAjC,EAAA,IAAArC,MAAAiS,YAAA,mBACA5P,EAAAV,OAAA,OACAT,EAAA,IAAAlB,MAAA+F,KAAA1D,EAAAsP,GACgB7B,EAAhB9J,IAAA9E,GAEA,IAAAgR,EAAA,IAAAlS,MAAA4E,eAAA,WACAsN,EAAAvQ,OAAA,OACA,IAAAwQ,EAAA,IAAAnS,MAAA6F,mBAAAqD,MAAA,WACAkJ,EAAA,IAAApS,MAAA+F,KAAAmM,EAAAC,GACAC,EAAAhQ,SAAA0D,aAAA,EACAsM,EAAAhQ,SAAAiF,QAAA,EACgByI,EAAhB9J,IAAAoM,IACgBpC,EAAhB,IAAAhQ,MAAAqS,gBACA9L,cAAAnT,OAAAoT,kBACgBwJ,EAAhBvJ,QAAArT,OAAAqR,WAAA,IAAArR,OAAAsR,YAAA,IACAH,EAAAmC,YAAAsJ,EAAArJ,YACA9E,SAAAgF,iBAAA,YAAAnoB,KAAAooB,qBAAA,GACAjF,SAAAgF,iBAAA,YAAAnoB,KAAAqoB,qBAAA,GACAlF,SAAAgF,iBAAA,UAAAnoB,KAAAsoB,mBAAA,GACAnF,SAAAgF,iBAAA,QAAAnoB,KAAAuoB,sBAAA,GACA7T,OAAAyT,iBAAA,SAAAnoB,KAAA4oB,gBAAA,KAKAoK,yBAAA,SAAAY,EAAAC,GAEA,IADA,IAAAd,KACA/rB,EAAA,EAAAA,EAAA6sB,EAAA7sB,IACA+rB,EAAA/rB,GAAA,IAAAsa,MAAAwF,QAEA,IAAAgN,EAAA,IAAApN,MAeA,OAdAoN,EAAAnN,OAAA,WAGA,IAFA,IAAAR,EAAAI,EACAwN,EAAAD,EAAAlU,OACA5Y,EAAA,EAAAA,EAAA+rB,EAAA9rB,OAAAD,IAEAuf,GADAJ,EAAAhD,SAAAiD,cAAA,WACAI,WAAA,MACAL,EAAAvG,OAAAmU,EACA5N,EAAAlJ,MAAA8W,EACAxN,EAAAK,UAAAkN,EAAAC,EAAA/sB,EAAA,EAAA+sB,IAAA,IAAAA,KACAhB,EAAA/rB,GAAA+f,MAAAZ,EACA4M,EAAA/rB,GAAAggB,aAAA,GAGA8M,EAAA5Y,IAAA0Y,EACAb,GAEAnK,eA7FA,WA8FYyI,EAAZxI,QAAAnU,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,IACYqL,EAAZvI,yBACYwI,EAAZvJ,QAAArT,OAAAqR,WAAA,IAAArR,OAAAsR,YAAA,KAEAzC,QAlGA,WAmGA,IAAAvjB,KAAA2iB,OAAA1b,QACAmnB,sBAAApuB,KAAAujB,SACAgO,EAAApD,SACgBmD,EAAhBxxB,OAAAsxB,EAAAC,IACA,IAAArxB,KAAA2iB,OAAA1b,SACAjH,KAAAmuB,SACAC,sBAAApuB,KAAAujB,WAKA+P,YA9GA,SA8GAlkB,GACA,IAAAyX,EAAA,IAAAvF,MAAAwF,QAAAoK,GACAxN,EAAA,IAAApC,MAAA6F,mBAAA9H,IAAAwH,EAAAmN,SAAA,KACAjN,EAAA,IAAAL,MAMA,OALAK,EAAAJ,OAAA,WACAE,EAAAE,MAAA/mB,KACA6mB,EAAAG,aAAA,GAEAD,EAAA7L,IAAA9L,EACAsU,GAEA0E,oBAzHA,SAyHA/M,GACA,kBAAArb,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,QAAA,CACAuX,EAAAoD,iBACA,IAAAvR,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAga,EAAA0N,QAAA,MAAArU,OAAAqR,WAAA,WACA1K,EAAA2N,QAAA,KAAAtU,OAAAsR,YAAA,QACA,IACA9Y,EAAA+b,UAAAoI,GACA,IACAnI,EADA,IAAA5H,MAAA6H,UAAAkI,EAAA7uB,SAAA0K,EAAAkc,IAAAiI,EAAA7uB,UAAA6mB,aACAC,iBAAA8H,EAAAtvB,UAEA,GAAA9B,KAAAuR,OAAA3Q,MAAAmB,KAAA4C,UAAA,CACA,GAAAukB,EAAAjiB,OAAA,GACA,IAAAgtB,EAAA/K,EAAA,GACAyI,EAAAxqB,KAAA+sB,OAAAD,EAAA1K,MAAA9V,IACAme,EAAAzqB,KAAA+sB,OAAAD,EAAA1K,MAAA7V,IACAme,EAAA1qB,KAAA+sB,OAAAD,EAAA1K,MAAA5V,IACA,IAAAyL,EAAA8J,EAAA,GACwBsI,EAAxBrqB,KAAAiY,EAAAmK,MAAA9V,GACwBge,EAAxBtqB,KAAAiY,EAAAmK,MAAA7V,GACwBge,EAAxBvqB,KAAAiY,EAAAmK,MAAA5V,GAIA,MAAA6d,EAAAvqB,OAAA,CACAkc,SAAAC,eAAA,aAAAiD,MAAAmD,OAAA,UACAxpB,KAAAuR,OAAAC,SAAA,aACA,IAAAiY,GAAA+H,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACA9H,GAAA+H,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACA9H,GAAA+H,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACA/d,GAAAke,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACAne,GAAAke,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACAne,GAAAke,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACAxL,EAAAhD,SAAAiD,cAAA,UACAD,EAAAE,MAAAC,gBAAA,sBACA,IAAAC,EAAAJ,EAAAK,WAAA,MACAL,EAAAlJ,MAAA,IACAkJ,EAAAvG,OAAA,IACA,IAAA6G,EAAA,IAAAC,MACAD,EAAAvL,IAAA,8BACA,IAAArJ,EAAA7R,KACAymB,EAAAE,OAAA,WACAJ,EAAAK,UAAAH,EAAA,KACA,IAAAI,EAAA,IAAAvF,MAAAwF,QAAAX,GACAU,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,UACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,GACAwD,EADA,GACAC,EADA,GACAC,GACAG,EAAAtnB,SAAAynB,KAAAD,GAEAF,EAAA2I,SAAA5gB,EAAA4R,qBAAA9P,EAAAD,EAAAD,GAE4B2d,EAA5B9J,IAAAwC,IAGA6H,KACAC,KACAC,KACwBL,KACAC,KACAC,WAIxB,GAAAxI,EAAAjiB,OAAA,GACA,IAAAomB,EAAAnE,EAAA,GAEA,IACAmE,EAAAnD,QAAAmD,EAAAnD,OAAArU,KAAA5O,OAAA,GACA,UAAAomB,EAAAnD,OAAArU,KAAA2N,eACoC4N,EAApCjH,OAAAkD,EAAAnD,QAIA,MAAA1P,GACA7H,QAAAC,IAAA4H,KAMYsX,GAAZ,EACYC,EAAZ1W,EAAA0N,QACYiJ,EAAZ3W,EAAA2N,QACYkJ,EAAZD,EACYG,EAAZD,GAEA9J,oBAxNA,SAwNAhN,IACA,IAAAyW,IACgBG,EAAhB,IAAAF,EAAA1W,EAAA0N,SAAAmJ,EACgBC,EAAhB,IAAA9W,EAAA2N,QAAAgJ,GAAAI,IAGA9J,kBA9NA,SA8NAjN,GACYyW,GAAZ,GAEAvJ,qBAjOA,SAiOAlN,GACA,IAAA0S,EAAAsD,EAAAtD,IAAA,IAAA1S,EAAA2S,OACYqD,EAAZtD,IAAAzM,MAAAzU,KAAAohB,MAAAF,EAAA,OACYsD,EAAZvI,0BAEAqF,OAtOA,YAuOA,IAAA2D,IACgBG,GAAhB,GAEYE,EAAZtlB,KAAA+f,KAAA,GAAA/f,KAAAwhB,IAAA,GAAA8D,IACYE,EAAZ/Q,MAAAzU,KAAAyhB,SAAA,GAAA6D,GACYG,EAAZhR,MAAAzU,KAAAyhB,SAAA2D,GACA5mB,EAAAoI,EAAA,IAAA5G,KAAA0hB,IAAA8D,GAAAxlB,KAAA2hB,IAAA8D,GACAjnB,EAAAqI,EAAA,IAAA7G,KAAA2hB,IAAA6D,GACAhnB,EAAAsI,EAAA,IAAA9G,KAAA0hB,IAAA8D,GAAAxlB,KAAA0hB,IAAA+D,GACYjB,EAAZ5C,OAAApjB,GACYimB,EAAZxxB,OAAAsxB,EAAAC,IAEA5N,oBAnPA,SAmPAgG,EAAAC,EAAAC,GACA,IAAA+E,EAAA,EAkBA,OAfAjF,EAAA,GAAAE,GAAA,IACA+E,EAAA,IAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,KAEAnF,EAAA,GAAAE,EAAA,IACA+E,EAAA,IAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,GAAA,MAEAnF,EAAA,GAAAE,GAAA,IACA+E,EAAA,IAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,KAEAnF,EAAA,GAAAE,EAAA,IACA+E,EAAA,QAAA7hB,KAAA8hB,KAAAhF,GAAAF,GAAA5c,KAAA+hB,KAKAF,EAHA,IAAA7hB,KAAAgiB,KAAAnF,EAAA,KAAA7c,KAAA+hB,OCnUeuF,GADEr0B,OAFP,WAAgB,IAAaC,EAAbC,KAAaC,eAAkD,OAA/DD,KAAuCG,MAAAD,IAAAH,GAAwB,OAAiB6P,YAAA,kBAAAxP,OAAqCC,GAAA,gBAE/GC,oBCChC,IAuBe8zB,EAvBU5zB,EAAQ,OAcjB6zB,CACd9B,EACA4B,GAT6B,EAV/B,SAAoB7jB,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,QCnBhC8zB,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,EACAC,GAAA,EACAC,MACAC,MACAC,MACAC,IACA30B,KAAA,cACAwQ,UACAyR,OADA,WAGA,OADA3iB,KAAAuR,OAAA3Q,MAAAmB,KAAAwC,QAAAE,SAGAK,SALA,WAMA,IAAAA,EAAA9E,KAAAuR,OAAA3Q,MAAAmB,KAAA+C,SACA,OAAAA,GAEA8d,eATA,WAWA,IADA,IAAA3d,EAAAjF,KAAAuR,OAAA3Q,MAAAmB,KAAAkD,IACA+B,EAAA,EAAAA,EAAA/B,EAAAgC,OAAAD,IAAA,CAEA,GADA/B,EAAA+B,GAAAzC,QAAAE,QACA,IAAAzE,KAAA2iB,OACA,OAAA1d,EAAA+B,GAAAjC,SAGA,UAEA8d,kBAnBA,WAqBA,IADA,IAAA5d,EAAAjF,KAAAuR,OAAA3Q,MAAAmB,KAAAkD,IACA+B,EAAA,EAAAA,EAAA/B,EAAAgC,OAAAD,IAAA,CAEA,GADA/B,EAAA+B,GAAAzC,QAAAE,QACA,IAAAzE,KAAA2iB,OACA,OAAA1d,EAAA+B,GAAAhC,YAGA,WAGAsK,OACAqT,OADA,SACAO,GACAC,SAAAC,eAAA,aAAAC,UAAA,GACArjB,KAAAuR,OAAA9P,OAAA,eACAzB,KAAAuR,OAAA9P,OAAA,iBACAzB,KAAAuR,OAAA9P,OAAA,eACAzB,KAAAuR,OAAA9P,OAAA,oBACAzB,KAAAsjB,KAAAJ,GACAljB,KAAAujB,WAGAze,SAXA,WAmBA,IAPA,IAAAhD,EAAAwyB,EAAAxyB,SACAkD,KACAwB,KACA6E,EAAArL,KAAAuR,OAAA3Q,MAAAmB,KAAAsJ,OACArC,EAAAhJ,KAAAuR,OAAA3Q,MAAAmB,KAAAiH,OACA6B,EAAA,EACAyqB,EAAA,EACAtuB,EAAA,EAAAqM,EAAAvR,EAAAmF,OAAAD,EAAAqM,EAAArM,IAAA,CACA,cAAAlF,EAAAkF,GAAA6O,KAAA2N,cAAA,CACA,IAAA1a,EAAA9I,KAAAyjB,oBAAA,KAAA3hB,EAAAkF,GAAAxE,SAAAiR,EAAA,KAAA3R,EAAAkF,GAAAxE,SAAAkR,EAAA,KAAA5R,EAAAkF,GAAAxE,SAAAmR,GACAnN,EAAAW,MAAA2B,aAAAtG,UAAA,KAAAV,EAAAkF,GAAAxE,SAAAiR,EAAA,KAAA3R,EAAAkF,GAAAxE,SAAAkR,EAAA,KAAA5R,EAAAkF,GAAAxE,SAAAmR,GAAAtI,SAAAR,OAEA,0BAAA/I,EAAAkF,GAAA0c,SAAA7N,KAAA2N,cAAA,CAGA,IADA,IAAA3Z,KACA3C,EAAA,EAAA6M,EAAAjS,EAAAkF,GAAA2c,SAAAC,SAAA3c,OAAAC,EAAA6M,EAAA7M,IACA2C,EAAA1C,KAAAnH,KAAAyjB,oBAAA3hB,EAAAkF,GAAA2c,SAAAC,SAAA1c,GAAAuM,EAAA3R,EAAAkF,GAAA2c,SAAAC,SAAA1c,GAAAwM,EAAA5R,EAAAkF,GAAA2c,SAAAC,SAAA1c,GAAAyM,IAGA3O,EAAAmC,MAAA2B,WAAAe,EAAArH,SAAAV,EAAAkF,GAAA2c,SAAAC,SAAAvY,OAAA,KAAArC,SAAAssB,QAMAt1B,KAAAuR,OAAAC,SAAA,YAAAhL,YACAxG,KAAAuR,OAAAC,SAAA,eAAAxM,kBAGAsf,QAzEA,WA0EAtkB,KAAAsjB,KAAAtjB,KAAA2iB,QACA3iB,KAAAujB,WAGA3U,SACA0U,KADA,SACAsC,GACA,GAAAA,EAAA3e,OAAA,EACAmV,MAAA,uDADA,CAIA,IACAoG,EADAqD,EAAA,GAEAA,EAAA1C,SAAAC,eAAA,aACYkR,EAAZ,IAAAhT,MAAA5K,OACY6d,EAAZ,IAAAjT,MAAAwE,kBAAA,IAAApR,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,aACA3a,OAAA,IAAAiW,MAAA2E,QAAA,OACA,IAAAtC,EAAA,IAAArC,MAAAiU,iBAAA,YAAA1oB,KAAA+hB,GAAA,OACAjL,EAAAV,OAAA,OACA,IAAAS,EAAA,IAAApC,MAAA6F,mBACA9H,KAAA,IAAAiC,MAAAkU,eAAAC,KAAA7P,EAAA,MAEApD,EAAA,IAAAlB,MAAA+F,KAAA1D,EAAAD,GACY4Q,EAAZhN,IAAA9E,GAGA,IADA,IAAAkT,EAAA11B,KAAA4iB,eAnBAoM,EAAA,SAoBAhoB,EAAAqM,GACA,IAAA7Q,EAAAkzB,EAAA1uB,GAAAxE,SACA2jB,EAAAhD,SAAAiD,cAAA,UACAD,EAAAE,MAAAC,gBAAA,sBACA,IAAAC,EAAAJ,EAAAK,WAAA,MACAL,EAAAlJ,MAAA,IACAkJ,EAAAvG,OAAA,KACA6G,EAAA,IAAAC,OAEAxL,IAAA,8BACAuL,EAAAE,OAAA,WACAJ,EAAAK,UAAAH,EAAA,KACA,IAAAI,EAAA,IAAAvF,MAAAwF,QAAAX,GACAU,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,UACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,GACAzjB,EAAA,GADA,GACAA,EAAA,GADA,GACAA,EAAA,IACAsnB,EAAAtnB,SAAAynB,KAAAD,GACoBsK,EAApBhN,IAAAwC,KAxBA9iB,EAAA,EAAAqM,EAAAqiB,EAAAzuB,OAAAD,EAAAqM,EAAArM,IAAA,KAOAyf,EAPAuI,EAAAhoB,GA6BA,IAAA6b,EAAA7iB,KAAA6iB,kBACA3b,EAAA,MAAAmM,EAAAwP,EAAA5b,OAAAC,EAAAmM,EAAAnM,IAAA,CACA,IAAAgoB,EAAArM,EAAA3b,GAAA1E,SACAwpB,EAAA,IAAA1K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACAsY,EAAA,IAAA3K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACAuY,EAAA,IAAA5K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GACAwY,EAAA,IAAA7K,MAAA2E,QAAAiJ,EAAA,GAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAvb,GAEAyY,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GACAC,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,QACAb,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,QACAb,EAAAU,qBACA,IAAA5C,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA,IAAA9K,MAAA6L,oBACgBmH,EAAhBhN,IAAA4C,IAIYsK,EAAZ,IAAAlT,MAAAsG,eACAC,cAAAnT,OAAAoT,kBACY0M,EAAZzM,QAAArT,OAAAqR,WAAA,IAAArR,OAAAsR,YAAA,IACAH,EAAAmC,YAAAwM,EAAAvM,YACA9E,SAAA+E,qBAAA,aAAAC,iBAAA,YAAAnoB,KAAAooB,qBAAA,GACAjF,SAAA+E,qBAAA,aAAAC,iBAAA,YAAAnoB,KAAAqoB,qBAAA,GACAlF,SAAA+E,qBAAA,aAAAC,iBAAA,UAAAnoB,KAAAsoB,mBAAA,GACAnF,SAAA+E,qBAAA,aAAAC,iBAAA,QAAAnoB,KAAAuoB,sBAAA,GAEA7T,OAAAyT,iBAAA,SAAAnoB,KAAA4oB,gBAAA,KAEAA,eAlFA,WAmFY2L,EAAZ1L,QAAAnU,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,IACYuO,EAAZzL,yBACY0L,EAAZzM,QAAArT,OAAAqR,WAAA,IAAArR,OAAAsR,YAAA,KAEAoC,oBAvFA,SAuFA/M,GACA,mBAAArb,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,QAAA,CACAuX,EAAAoD,iBACA,IAAAvR,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAga,EAAA0N,QAAA,MAAArU,OAAAqR,WAAA,WACA1K,EAAA2N,QAAA,KAAAtU,OAAAsR,YAAA,QACA,IACA9Y,EAAA+b,UAAAsL,GACA,IACArL,EADA,IAAA5H,MAAA6H,UAAAoL,EAAA/xB,SAAA0K,EAAAkc,IAAAmL,EAAA/xB,UAAA6mB,aACAC,iBAAAgL,EAAAxyB,UAEA,GAAA9B,KAAAuR,OAAA3Q,MAAAmB,KAAA4C,UAAA,CACA,GAAAukB,EAAAjiB,OAAA,GACA,IAAAmY,EAAA8J,EAAA,GACAvW,QAAAC,IAAAsW,GACwBgM,GAAxB/tB,KAAAiY,EAAAmK,MAAA9V,GACwB0hB,GAAxBhuB,KAAAiY,EAAAmK,MAAA7V,GACwB0hB,GAAxBjuB,KAAAiY,EAAAmK,MAAA5V,GAEA,MAAAuhB,GAAAjuB,OAAA,CACAkc,SAAAC,eAAA,aAAAiD,MAAAmD,OAAA,UACAxpB,KAAAuR,OAAAC,SAAA,aACA,IAAAiY,GAAAyL,GAAA,GAAAA,GAAA,GAAAA,GAAA,MACAxL,GAAAyL,GAAA,GAAAA,GAAA,GAAAA,GAAA,MACAxL,GAAAyL,GAAA,GAAAA,GAAA,GAAAA,GAAA,MACAO,EAAAxS,SAAAiD,cAAA,UACAuP,EAAAtP,MAAAC,gBAAA,sBACA,IAAAsP,EAAAD,EAAAnP,WAAA,MACAmP,EAAA1Y,MAAA,IACA0Y,EAAA/V,OAAA,IACA,IAAA6G,EAAA,IAAAC,MACAD,EAAAvL,IAAA,8BACAuL,EAAAE,OAAA,WACAiP,EAAAhP,UAAAH,EAAA,KACA,IAAAI,EAAA,IAAAvF,MAAAwF,QAAA6O,GACA9O,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,UACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,GACAwD,EADA,GACAC,EADA,GACAC,GACAG,EAAAtnB,SAAAynB,KAAAD,GAC4BsK,EAA5BhN,IAAAwC,IAGwBoL,MACAC,MACAC,YAIxB,GAAAlM,EAAAjiB,OAAA,GACA,IAAAoE,EAAA6d,EAAA,GACA,IACA7d,EAAA6e,QAAA7e,EAAA6e,OAAArU,KAAA5O,OAAA,GACA,UAAAoE,EAAA6e,OAAArU,KAAA2N,eACoC8Q,EAApCnK,OAAA9e,EAAA6e,QAGA,MAAA1P,GACA7H,QAAAC,IAAA4H,IAIA,GAAAxa,KAAAuR,OAAA3Q,MAAAmB,KAAA6C,eAAA,CACA,GAAAskB,EAAAjiB,OAAA,IACAmY,EAAA8J,EAAA,IACAK,MACwB2L,GAAxB/tB,KAAAiY,EAAAmK,MAAA9V,GAEwB0hB,GAAxBhuB,KAAAiY,EAAAmK,MAAA7V,GAEwB0hB,GAAxBjuB,KAAAiY,EAAAmK,MAAA5V,GAIA,MAAAuhB,GAAAjuB,OAAA,CACA,IAAAojB,EAAA,IAAA/I,MAAAgJ,SACA5G,EAAA,IAAApC,MAAAiJ,gBACAC,MAAA,IACA7M,KAAA,KAEA0M,EAAAzG,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA,IAAA7L,EAAA,IAAAjI,MAAAmJ,OAAAJ,EAAA3G,GACwB4Q,EAAxBhN,IAAAiC,GAGA,MAAA2L,GAAAjuB,OAAA,CAEA,IAAAyjB,EAAA,IAAApJ,MAAAgJ,SACAK,EAAA,IAAArJ,MAAAsJ,uBACAJ,MAAA,IACA7M,KAAA,KAGA+M,EAAA9G,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA,IAAAvK,EAAA,IAAAvJ,MAAAmJ,OAAAC,EAAAC,GACwB2J,EAAxBhN,IAAAuD,GAEA,IAAAC,EAAA,IAAAxJ,MAAAgJ,SACAQ,EAAAlH,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACAtK,EAAAlH,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA,IAAA5S,EAAA,IAAAlB,MAAA0J,KAAAF,EAAAH,EAAArJ,MAAA2J,cACwBqJ,EAAxBhN,IAAA9E,GAGA,MAAA0S,GAAAjuB,OAAA,CAEA,IAAAikB,EAAA,IAAA5J,MAAAgJ,SACAa,EAAA,IAAA7J,MAAAsJ,uBACAJ,MAAA,IACA7M,KAAA,KAGAuN,EAAAtH,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA,IAAAhK,EAAA,IAAA9J,MAAAmJ,OAAAS,EAAAC,GACwBmJ,EAAxBhN,IAAA8D,GAEA,IAAAC,EAAA,IAAA/J,MAAAgJ,SACAe,EAAAzH,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA/J,EAAAzH,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA,IAAA9J,EAAA,IAAAhK,MAAA0J,KAAAK,EAAAF,EAAA7J,MAAA2J,cACwBqJ,EAAxBhN,IAAAgE,GACA,IAAAC,EAAA,IAAAjK,MAAAgJ,SACAiB,EAAA3H,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA7J,EAAA3H,SAAAzc,KAAA,IAAAma,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,KACA,IAAA5J,EAAA,IAAAlK,MAAA0J,KAAAO,EAAAJ,EAAA7J,MAAA2J,cACwBqJ,EAAxBhN,IAAAkE,GAGA,MAAA0J,GAAAjuB,OAAA,CACAkc,SAAAC,eAAA,aAAAiD,MAAAmD,OAAA,UACAxpB,KAAAuR,OAAAC,SAAA,kBAGA,IADA,IAAA1P,EAAAwyB,EAAAxyB,SACAkF,EAAA,EAAAA,EAAAlF,EAAAmF,OAAAD,IACA,WAAAlF,EAAAkF,GAAA6O,KAAA2N,eAAA,SAAA1hB,EAAAkF,GAAA6O,KAAA2N,gBACgC8Q,EAAhCnK,OAAAroB,EAAAkF,IACAA,KAIA,IAAAglB,EAAA,IAAA1K,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,IACAnJ,EAAA,IAAA3K,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,IACAlJ,EAAA,IAAA5K,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,IACAjJ,EAAA,IAAA7K,MAAA2E,QAAAiP,GAAA,GAAAC,GAAA,GAAAC,GAAA,IAEAhJ,EAAA,IAAA9K,MAAAgJ,SACA8B,EAAAxI,SAAAzc,KAAA6kB,GACAI,EAAAxI,SAAAzc,KAAA8kB,GACAG,EAAAxI,SAAAzc,KAAA+kB,GACAE,EAAAxI,SAAAzc,KAAAglB,GACAC,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,QACAb,EAAAY,MAAA7lB,KAAA,IAAAma,MAAA2L,MAAA,QACAb,EAAAU,qBACA,IAAA5C,EAAA,IAAA5I,MAAA+F,KAAA+E,EAAA,IAAA9K,MAAA6L,oBACwBmH,EAAxBhN,IAAA4C,GACwBgL,MACAC,MACAC,MACxBziB,QAAAC,IAAA0hB,SAIA,GAAApL,EAAAjiB,OAAA,GACA,IAAAomB,EAAAnE,EAAA,GACA,IACAmE,EAAAnD,QAAAmD,EAAAnD,OAAArU,KAAA5O,OAAA,GACA,sBAAAomB,EAAAnD,OAAAxG,SAAA7N,KAAA2N,eACoC8Q,EAApCnK,OAAAkD,EAAAnD,QAGA,MAAA1P,GACA7H,QAAAC,IAAA4H,KAMYia,GAAZ,EACYG,GAAZvZ,EAAA0N,QACY+L,GAAZzZ,EAAA2N,QACY6L,GAAZH,GACYK,GAAZJ,IAEAtM,oBAtRA,SAsRAhN,IACA,IAAAoZ,IACgBC,GAAhB,IAAAE,GAAAvZ,EAAA0N,SAAA8L,GACgBF,GAAhB,IAAAtZ,EAAA2N,QAAA8L,IAAAC,KAGAzM,kBA5RA,WA6RYmM,GAAZ,GAGAlM,qBAhSA,SAgSAlN,GACYkZ,EAAZxG,KAAA,IAAA1S,EAAA2S,OACAuG,EAAAxG,KAAA,IAAAwG,EAAAxG,KAAA,KACgBwG,EAAhBzL,0BAGAvF,QAtSA,WAwSAvjB,KAAA2iB,OAAA1b,OAAA,IAGAjH,KAAAmuB,SACAC,sBAAApuB,KAAAujB,WAGA4K,OA/SA,YAiTA,IAAAsG,IACgBC,IAAhB,GAEYC,GAAZ9nB,KAAA+f,KAAA,GAAA/f,KAAAwhB,IAAA,GAAAsG,KACYK,GAAZ1T,MAAAzU,KAAAyhB,SAAA,GAAAqG,IACYM,GAAZ3T,MAAAzU,KAAAyhB,SAAAoG,IACYH,EAAZlpB,OAAAoI,EAAA,IAAA5G,KAAA0hB,IAAAyG,IAAAnoB,KAAA2hB,IAAAyG,IACYV,EAAZlpB,OAAAqI,EAAA,IAAA7G,KAAA2hB,IAAAwG,IACYT,EAAZlpB,OAAAsI,EAAA,IAAA9G,KAAA0hB,IAAAyG,IAAAnoB,KAAA0hB,IAAA0G,IACYV,EAAZ9F,OAAA8F,EAAAlpB,QACYmpB,EAAZ10B,OAAAw0B,EAAAC,IAGA9Q,oBA9TA,SA8TAgG,EAAAC,EAAAC,GACA,IACAlE,EADAiJ,EAAA,EAkBA,OAfAjF,EAAA,GAAAE,EAAA,IACA+E,EAAA,IAAA7hB,KAAAgiB,MAAApF,EAAA,KAAA5c,KAAA+hB,IAEAnF,EAAA,GAAAE,EAAA,IACA+E,EAAA,IAAA7hB,KAAAgiB,MAAApF,EAAA,KAAA5c,KAAA+hB,IAEAnF,EAAA,GAAAE,GAAA,IACA+E,EAAA,IAAA7hB,KAAAgiB,KAAApF,EAAA,KAAA5c,KAAA+hB,GAAA,KAEAnF,EAAA,GAAAE,EAAA,IACA+E,EAAA,IAAA7hB,KAAAgiB,KAAApF,EAAA,KAAA5c,KAAA+hB,GAAA,KAEAnJ,EAAA,IAAA5Y,KAAA8hB,KAAAjF,EAAA,KAAA7c,KAAA+hB,GACAjc,QAAAC,IAAA,QAAA8b,GACA/b,QAAAC,IAAA,SAAA6S,IACAiJ,EAAAjJ,MClbeoQ,IADE/1B,OAFP,WAAgB,IAAaC,EAAbC,KAAaC,eAAkD,OAA/DD,KAAuCG,MAAAD,IAAAH,GAAwB,OAAiB6P,YAAA,kBAAAxP,OAAqCC,GAAA,gBAE/GC,oBCChC,IAuBew1B,GAvBUt1B,EAAQ,OAcjBu1B,CACdV,GACAQ,IAT6B,EAV/B,SAAoBvlB,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,QCnBhCw1B,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,MACAC,MACAC,MACAC,GAAA,KACAC,IAAA,EACAC,GAAA,EAEAC,GAAA,EACAC,IACAh2B,KAAA,OACAwQ,UACAyR,OADA,WAGA,OADA3iB,KAAAuR,OAAA3Q,MAAAmB,KAAAwC,QAAAE,SAGAK,SALA,WAMA,IAAAA,EAAA9E,KAAAuR,OAAA3Q,MAAAmB,KAAA+C,SACA,OAAAA,GAEA8d,eATA,WAWA,IADA,IAAA3d,EAAAjF,KAAAuR,OAAA3Q,MAAAmB,KAAAkD,IACA+B,EAAA,EAAAA,EAAA/B,EAAAgC,OAAAD,IAAA,CAEA,GADA/B,EAAA+B,GAAAzC,QAAAE,QACA,IAAAzE,KAAA2iB,OACA,OAAA1d,EAAA+B,GAAAjC,SAGA,WAIAuK,OACAqT,OADA,SACAO,GACAC,SAAAC,eAAA,aAAAC,UAAA,GACArjB,KAAAuR,OAAA9P,OAAA,eACAzB,KAAAuR,OAAA9P,OAAA,iBACAzB,KAAAuR,OAAA9P,OAAA,eACAzB,KAAAuR,OAAA9P,OAAA,oBACAzB,KAAAsjB,KAAAJ,GACAljB,KAAAujB,WAGAze,SAXA,WAgBA,IAJA,IAAAhD,EAAAk0B,GAAAl0B,SACAuJ,EAAArL,KAAAuR,OAAA3Q,MAAAmB,KAAAsJ,OACA7E,KACAqE,EAAA,EACA7D,EAAA,EAAAqM,EAAAvR,EAAAmF,OAAAD,EAAAqM,EAAArM,IACA,cAAAlF,EAAAkF,GAAA6O,KAAA2N,cAAA,CACA,IAAA1a,GAAA,KAAAhH,EAAAkF,GAAAxE,SAAAiR,EAAA,IAAA3R,EAAAkF,GAAAxE,SAAAkR,GACAlR,GAAAV,EAAAkF,GAAAxE,SAAAiR,EAAA3R,EAAAkF,GAAAxE,SAAAkR,GACAlN,EAAAW,MAAA2B,aAAAtG,WAAA6I,SAAAR,OAIA7K,KAAAuR,OAAAC,SAAA,YAAAhL,cAGA8d,QAlDA,WAmDAtkB,KAAAsjB,KAAAtjB,KAAA2iB,QACA3iB,KAAAujB,WAGA3U,SACA0U,KADA,SACAsC,GACA,GAAAA,EAAA3e,OAAA,EACAmV,MAAA,uDADA,CAIA,IAAAyJ,EAAA,GACAA,EAAA1C,SAAAC,eAAA,aACY4S,GAAZ,IAAA1U,MAAA5K,OACYuf,GAAZ,IAAA3U,MAAAwE,kBAAA,IAAApR,OAAAqR,WAAA,MAAArR,OAAAsR,YAAA,aACA3a,OAAA,IAAAiW,MAAA2E,QAAA,OACYgQ,GAAZzzB,SAAAmR,EAAA,GACA,IAAAgQ,EAAA,IAAArC,MAAAqV,cAAA,OACAjT,EAAA,IAAApC,MAAA6F,mBACA9H,KAAA,IAAAiC,MAAAkU,eAAAC,KAAA7P,EAAA,MAEY0Q,GAAZ,IAAAhV,MAAA+F,KAAA1D,EAAAD,GACYsS,GAAZ1O,IAAAgP,IAGA,IADA,IAAAZ,EAAA11B,KAAA4iB,eAlBAoM,EAAA,SAmBAhoB,EAAAqM,GACA,IAAA7Q,EAAAkzB,EAAA1uB,GAAAxE,SACA2jB,EAAAhD,SAAAiD,cAAA,UACAD,EAAAE,MAAAC,gBAAA,sBACA,IAAAC,EAAAJ,EAAAK,WAAA,MACAL,EAAAlJ,MAAA,IACAkJ,EAAAvG,OAAA,IACA,IAAA6G,EAAA,IAAAC,MACAD,EAAAvL,IAAA,8BACAuL,EAAAE,OAAA,WACAJ,EAAAK,UAAAH,EAAA,KACA,IAAAI,EAAA,IAAAvF,MAAAwF,QAAAX,GACAU,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,OACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,EACAzjB,EAAA,GADA,EACAA,EAAA,SACAsnB,EAAAtnB,SAAAynB,KAAAD,GACoBgM,GAApB1O,IAAAwC,KAvBA9iB,EAAA,EAAAqM,EAAAqiB,EAAAzuB,OAAAD,EAAAqM,EAAArM,IAAAgoB,EAAAhoB,IA4BYkvB,GAAZ,IAAA5U,MAAAsG,eACAC,cAAAnT,OAAAoT,kBACYoO,GAAZnO,QAAArT,OAAAqR,WAAA,IAAArR,OAAAsR,YAAA,IACAH,EAAAmC,YAAAkO,GAAAjO,YAEA9E,SAAA+E,qBAAA,aAAAC,iBAAA,QAAAnoB,KAAAuoB,sBAAA,GACA7T,OAAAyT,iBAAA,SAAAnoB,KAAA4oB,gBAAA,GACAzF,SAAA+E,qBAAA,aAAAC,iBAAA,YAAAnoB,KAAAooB,qBAAA,KAEAA,oBAzDA,SAyDA/M,GACA,YAAArb,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,QAAA,CACAuX,EAAAoD,iBACA,IAAAvR,EAAA,IAAAoU,MAAA2E,QACA/Y,EAAA7L,KAEAga,EAAA0N,QAAA,MAAArU,OAAAqR,WAAA,WACA1K,EAAA2N,QAAA,KAAAtU,OAAAsR,YAAA,QACA,IACA9Y,EAAA+b,UAAAgN,IACA,IACA/M,EADA,IAAA5H,MAAA6H,UAAA8M,GAAAzzB,SAAA0K,EAAAkc,IAAA6M,GAAAzzB,UAAA6mB,aACAC,iBAAA0M,GAAAl0B,UAEA,GAAA9B,KAAAuR,OAAA3Q,MAAAmB,KAAA4C,UAAA,CACA,GAAAukB,EAAAjiB,OAAA,GACA,IAAAmY,EAAA8J,EAAA,GACAvW,QAAAC,IAAAsW,GACA9J,EAAAmK,MACwB4M,GAAxBhvB,KAAAiY,EAAAmK,MAAA9V,GAEwB2iB,GAAxBjvB,KAAAiY,EAAAmK,MAAA7V,GAEwB2iB,GAAxBlvB,KAAAiY,EAAAmK,MAAA5V,GAGA,MAAAwiB,GAAAlvB,OAAA,CACAkc,SAAAC,eAAA,aAAAiD,MAAAmD,OAAA,UACAxpB,KAAAuR,OAAAC,SAAA,aACA,IAAAiY,GAAA0M,GAAA,GAAAA,GAAA,GAAAA,GAAA,MACAzM,GAAA0M,GAAA,GAAAA,GAAA,GAAAA,GAAA,MACAzM,GAAA0M,GAAA,GAAAA,GAAA,GAAAA,GAAA,MACA1jB,QAAAC,IAAA,YAAA6W,EAAA,cAAAC,EAAA,aAAAC,GACA,IAAAgM,EAAAxS,SAAAiD,cAAA,UACAuP,EAAAtP,MAAAC,gBAAA,sBACA,IAAAsP,EAAAD,EAAAnP,WAAA,MACAmP,EAAA1Y,MAAA,IACA0Y,EAAA/V,OAAA,IACA,IAAAgX,EAAA,IAAAlQ,MACAkQ,EAAA1b,IAAA,8BACA0b,EAAAjQ,OAAA,WACAiP,EAAAhP,UAAAgQ,EAAA,KACA,IAAA/P,EAAA,IAAAvF,MAAAwF,QAAA6O,GACA9O,EAAAG,aAAA,EACAH,EAAAI,UAAA3F,MAAA4F,aACA,IAAA0C,EAAA,IAAAtI,MAAAuI,gBACAxK,IAAAwH,EACAO,aAAA,IAEA0C,EAAA,IAAAxI,MAAAyI,OAAAH,GACAE,EAAA7G,MAAA5hB,IAAA,OACA,IACA2oB,EAAA,IAAA1I,MAAA2E,QADA,EACAwD,EADA,EACAC,EAAA,MACAI,EAAAtnB,SAAAynB,KAAAD,GAC4BgM,GAA5B1O,IAAAwC,IAGwBqM,MACAC,MACAC,YAIxB,GAAAnN,EAAAjiB,OAAA,GACA,IAAAoE,EAAA6d,EAAA,GACA,IACA7d,EAAA6e,QAAA7e,EAAA6e,OAAArU,KAAA5O,OAAA,GACA,UAAAoE,EAAA6e,OAAArU,KAAA2N,eACoCwS,GAApC7L,OAAA9e,EAAA6e,QAGA,MAAA1P,GACA7H,QAAAC,IAAA4H,KAMY+b,IAAZ,EACYC,GAAZnb,EAAA0N,QACA0N,IAEApO,oBA1IA,SA0IAhN,IACA,IAAAkb,KACgBE,GAAhB,IAAAD,GAAAnb,EAAA0N,SACgBuN,GAAhB9zB,SAAAiR,GAAAgjB,KAGAnO,kBAhJA,WAiJYiO,IAAZ,GAEA3N,eAnJA,WAoJYqN,GAAZpN,OAAAnU,OAAAqR,WAAArR,OAAAsR,YACYiQ,GAAZnN,yBACYoN,GAAZnO,QAAArT,OAAAqR,WAAArR,OAAAsR,cAEAuC,qBAxJA,SAwJAlN,GACY4a,GAAZlI,KAAA,IAAA1S,EAAA2S,OACAiI,GAAAlI,KAAA,IAAAkI,GAAAlI,KAAA,KACgBkI,GAAhBnN,0BAGAvF,QA9JA,WA+JAvjB,KAAA2iB,OAAA1b,OAAA,IAGAjH,KAAAmuB,SACAC,sBAAApuB,KAAAujB,WAGA4K,OAtKA,WAuKY8H,GAAZxH,OAAAwH,GAAA5qB,QACY6qB,GAAZp2B,OAAAk2B,GAAAC,OC9OeY,IADE/2B,OAFP,WAAgB,IAAaC,EAAbC,KAAaC,eAAkD,OAA/DD,KAAuCG,MAAAD,IAAAH,GAAwB,OAAiB6P,YAAA,kBAAAxP,OAAqCC,GAAA,gBAE/GC,oBCChC,ICAew2B,IADEh3B,OAFP,WAAgB,IAAA6P,EAAA3P,KAAaD,EAAA4P,EAAA1P,eAA0BC,EAAAyP,EAAAxP,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiBE,OAAOC,GAAA,cAAiBH,EAAA,MAAAyP,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAA/P,EAAA,SAAoDge,aAAaxd,KAAA,QAAAyd,QAAA,UAAA5Y,MAAAoK,EAAA,UAAAoO,WAAA,cAA4E3d,OAASie,YAAA,WAAwBO,UAAWrZ,MAAAoK,EAAA,WAAwBwF,IAAKgF,MAAA,SAAA+C,GAAyBA,EAAA7R,OAAAwT,YAAsClP,EAAAc,UAAAyM,EAAA7R,OAAA9F,WAAoCoK,EAAAM,GAAA,KAAA/P,EAAA,OAAwB0P,YAAA,aAAuB1P,EAAA,SAAcE,OAAOC,GAAA,aAAAge,YAAA,gBAA8C1O,EAAAM,GAAA,KAAA/P,EAAA,aAA8BE,OAAOyV,KAAA,UAAAkhB,MAAA,GAAA12B,GAAA,gBAA+CsP,EAAAM,GAAA,QAAAN,EAAAM,GAAA,KAAAN,EAAAqnB,GAAA,OAAArnB,EAAAM,GAAA,KAAAN,EAAAqnB,GAAA,GAAArnB,EAAAM,GAAA,KAAA/P,EAAA,SAAyFE,OAAOyV,KAAA,SAAAxV,GAAA,cAAiCsP,EAAAM,GAAA,KAAA/P,EAAA,SAA0BE,OAAOyV,KAAA,SAAAxV,GAAA,kBAEnwBC,iBADb,WAAiB,IAAaP,EAAbC,KAAaC,eAA0BC,EAAvCF,KAAuCG,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiB0P,YAAA,gBAA0B1P,EAAA,SAAcE,OAAOyV,KAAA,SAAAxV,GAAA,aAAAkF,MAAA,WAAoD,WAAc,IAAaxF,EAAbC,KAAaC,eAA0BC,EAAvCF,KAAuCG,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiB0P,YAAA,eAAyB1P,EAAA,OAAYE,OAAOC,GAAA,uBCEjW,ICcA2f,IACA5P,YACAsmB,KHhByBl2B,EAAQ,OAcjBy2B,CACdP,GACAG,IAT6B,EAV/B,SAAoBvmB,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,QGNhC60B,YAAAS,GACAvD,UAAA6B,EACA1R,gBAAAyO,EACA+F,WDpByB12B,EAAQ,OAcjB22B,EEOhBz2B,KAAA,eFLEo2B,IAT6B,EAV/B,SAAoBxmB,GAClB9P,EAAQ,SAaS,kBAEU,MAUG,SCDhCE,KAAA,QACA4jB,QATA,WAWA,IAAAze,EAAA7F,KAAAgP,OAAAooB,MAAAvxB,OACA7F,KAAAuR,OAAA9P,OAAA,cAAAoE,WACA8M,QAAAC,IAAA/M,IAEAqL,UACAmmB,kBADA,WAEA,cAAAr3B,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,SAAA,mBAAA9D,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,SAMAwzB,YARA,WASA,oBAAAt3B,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,SAMAyzB,cAfA,WAgBA,qBAAAv3B,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,SAMA0zB,OAtBA,WAuBA,cAAAx3B,KAAAuR,OAAA3Q,MAAAmB,KAAA+B,SAMAC,aA7BA,WA8BA,OAAA/D,KAAAuR,OAAA3Q,MAAAmB,KAAAgC,gBE3De0zB,IADE33B,OAFP,WAAgB,IAAA6P,EAAA3P,KAAaD,EAAA4P,EAAA1P,eAA0BC,EAAAyP,EAAAxP,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiB0P,YAAA,kBAA4BD,EAAA,kBAAAzP,EAAA,mBAAAyP,EAAAyG,KAAAzG,EAAAM,GAAA,KAAAN,EAAA,YAAAzP,EAAA,cAAAyP,EAAAyG,KAAAzG,EAAAM,GAAA,KAAAN,EAAA,cAAAzP,EAAA,eAAAyP,EAAAyG,KAAAzG,EAAAM,GAAA,KAAAN,EAAA,OAAAzP,EAAA,QAAAyP,EAAAyG,MAAA,IAEtG9V,oBCY5Bo3B,GAdqBl3B,EAAQ,OAcjBm3B,CACd3X,GACAyX,IAT6B,EAEb,KAEC,KAEU,MAUdG,EAAA,QAAAF,GAAiB","file":"static/js/app.557aa338e269a86e4f06.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b2106e48\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b2106e48\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n}\n</script>\n\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","import Cookies from 'js-cookie';\r\n\r\nconst app = {\r\n  state:{\r\n    sidebar: {\r\n      opened: !+Cookies.get('sidebarStatus')\r\n    },\r\n    theme: 'default',\r\n    livenewsChannels: Cookies.get('livenewsChannels') || '[]'\r\n  },\r\n  mutations: {\r\n    TOGGLE_SIDEBAR: state => {\r\n      if (state.sidebar.opened) {\r\n        Cookies.set('sidebarStatus', 1);\r\n      } else {\r\n        Cookies.set('sidebarStatus', 0);\r\n      }\r\n      state.sidebar.opened = !state.sidebar.opened;\r\n    }\r\n  },\r\n  actions: {\r\n    ToggleSideBar: ({ commit }) => {\r\n      commit('TOGGLE_SIDEBAR')\r\n    }\r\n  }\r\n};\r\n\r\nexport default app;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/app.js","// const nav = {\r\n//   navbar: {\r\n//     list: [\r\n//       {\r\n//         name: 'File',\r\n//         text: 'File',\r\n//         children: [\r\n//           {\r\n//             name: 'New',\r\n//             text: 'New'\r\n//           },\r\n//           {\r\n//             name: 'Import',\r\n//             text: 'Import'\r\n//           },\r\n//           {\r\n//             name: 'Export JSON',\r\n//             text: 'Export JSON'\r\n//           },\r\n//           {\r\n//             name: 'Publish',\r\n//             text: 'Publish'\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         name: 'Edit',\r\n//         text: 'Edit',\r\n//         children: [\r\n//           {\r\n//             name: 'Undo',\r\n//             text: 'Undo'\r\n//           },\r\n//           {\r\n//             name: 'Redo',\r\n//             text: 'Undo'\r\n//           },\r\n//           {\r\n//             name: 'Clear History',\r\n//             text: 'Clear History'\r\n//           },\r\n//           {\r\n//             name: 'Clone',\r\n//             text: 'Clone'\r\n//           },\r\n//           {\r\n//             name: 'Delete',\r\n//             text: 'Delete'\r\n//           },\r\n//           {\r\n//             name: 'Select All',\r\n//             text: 'Select All'\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         name: 'Elements',\r\n//         text: 'Elements',\r\n//         children: [\r\n//           {\r\n//             name: 'Panorama1',\r\n//             text: 'Panorama1'\r\n//           },\r\n//           {\r\n//               name: 'Panorama6',\r\n//               text: 'Panorama6'\r\n//           },\r\n//           {\r\n//             name: 'Patches',\r\n//             text: 'Patches'\r\n//           },\r\n//           {\r\n//             name: 'Point Hotspot',\r\n//             text: 'Point Hotspot'\r\n//           },\r\n//           {\r\n//             name: 'Polygon Hotspot',\r\n//             text: 'Polygon Hotspot'\r\n//           },\r\n//           {\r\n//             name: 'Sounds',\r\n//             text: 'Sounds'\r\n//           },\r\n//           {\r\n//             name: 'Images',\r\n//             text: 'Images'\r\n//           },\r\n//           {\r\n//             name: 'Viedo',\r\n//             text: 'Viedo'\r\n//           },\r\n//           {\r\n//             name: 'Lens Flares',\r\n//             text: 'Lens Flares'\r\n//           },\r\n//           {\r\n//             name: 'Map',\r\n//             text: 'Map'\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         name: 'Help',\r\n//         text: 'Help',\r\n//         children: [\r\n//           {\r\n//             name: 'About vrsyetem',\r\n//             text: 'About vrsyetem'\r\n//           },\r\n//           {\r\n//             name: 'Help',\r\n//             text: 'Help'\r\n//           }\r\n//         ]\r\n//       }\r\n//     ]\r\n//   }\r\n// };\r\n//\r\n// export default nav;\r\n\r\nconst nav = {\r\n    navbar: {\r\n        list: [\r\n            {\r\n                name: 'File',\r\n                text: 'File',\r\n                children: [\r\n                    {\r\n                        name: 'New',\r\n                        text: 'New'\r\n                    },\r\n                    {\r\n                        name: 'Import',\r\n                        text: 'Import'\r\n                    },\r\n                    {\r\n                        name: 'Export JSON',\r\n                        text: 'Export JSON'\r\n                    },\r\n                    {\r\n                        name: 'Publish',\r\n                        text: 'Publish'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'Edit',\r\n                text: 'Edit',\r\n                children: [\r\n                    {\r\n                        name: 'Undo',\r\n                        text: 'Undo'\r\n                    },\r\n                    {\r\n                        name: 'Redo',\r\n                        text: 'Undo'\r\n                    },\r\n                    {\r\n                        name: 'Clear History',\r\n                        text: 'Clear History'\r\n                    },\r\n                    {\r\n                        name: 'Clone',\r\n                        text: 'Clone'\r\n                    },\r\n                    {\r\n                        name: 'Delete',\r\n                        text: 'Delete'\r\n                    },\r\n                    {\r\n                        name: 'Select All',\r\n                        text: 'Select All'\r\n                    }\r\n                ]\r\n            },\r\n            // {\r\n            //     name: 'Elements',\r\n            //     text: 'Elements',\r\n            //     children: [\r\n            //         {\r\n            //             name: 'Panorama1',\r\n            //             text: 'Panorama1'\r\n            //         },\r\n            //         {\r\n            //             name: 'Panorama6',\r\n            //             text: 'Panorama6'\r\n            //         },\r\n            //         {\r\n            //             name: 'Patches',\r\n            //             text: 'Patches'\r\n            //         },\r\n            //         {\r\n            //             name: 'Point Hotspot',\r\n            //             text: 'Point Hotspot'\r\n            //         },\r\n            //         {\r\n            //             name: 'Polygon Hotspot',\r\n            //             text: 'Polygon Hotspot'\r\n            //         },\r\n            //         {\r\n            //             name: 'Sounds',\r\n            //             text: 'Sounds'\r\n            //         },\r\n            //         {\r\n            //             name: 'Images',\r\n            //             text: 'Images'\r\n            //         },\r\n            //         {\r\n            //             name: 'Viedo',\r\n            //             text: 'Viedo'\r\n            //         },\r\n            //         {\r\n            //             name: 'Lens Flares',\r\n            //             text: 'Lens Flares'\r\n            //         },\r\n            //         {\r\n            //             name: 'Map',\r\n            //             text: 'Map'\r\n            //         }\r\n            //     ]\r\n            // },\r\n\r\n\r\n            // {\r\n            //     name: 'Help',\r\n            //     text: 'Help',\r\n            //     children: [\r\n            //         {\r\n            //             name: 'About vrsyetem',\r\n            //             text: 'About vrsyetem'\r\n            //         },\r\n            //         {\r\n            //             name: 'Help',\r\n            //             text: 'Help'\r\n            //         }\r\n            //     ]\r\n            // }\r\n        ]\r\n    }\r\n};\r\n\r\nexport default nav;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/nav.js","\n\nconst test = {\n  state:{\n    arr:[],//xml字符串读取的数据信息\n    maxID:0,//用于保存相应节点的最大ID\n    selectHotType:'',//用于select选择框判断热点类型\n    selectUploadPicture:'',//用于select选择框判断已上传图片\n    selectJumpScene:'',//用于select选择框判断跳转场景\n    inputHotIntroduction:'',//用于input输入框输入的场景说明\n    inputHotUrl:'',//用于input输入框输入的热点链接\n    newIsDeleteHotSpot:false,//用于热点管理的删除热点\n    position:[],//用于保存热点管理点击删除后的热点的位置\n    pid:[],//用于判断热点的类型\n    activeJumpHotSpot:false,//用于判断跳转热点是否被点击\n    inactiveJumpHotSpot:false,//用于把点击之后的热点重新绘制\n    activeImageHotSpot:false,//用于判断图像热点是否被点击\n    inactiveImageHotSpot:false,//用于把点击之后的图像热点重新绘制\n    activeUrlHotSpot:false,//用于判断图像热点是否被点击\n    inactiveUrlHotSpot:false,//用于把点击之后的图像热点重新绘制\n    activePost:{},//用于保存点击之后的热点\n    sceneDelete:{},//用于场景的删除\n\n    //视频热点的相关参数\n    //绘制视频热点时中心的三维坐标和二维屏幕坐标\n    oldselected:{},//里面的三维坐标值通过换算成xml的pan和tilt参数上传\n    //平移参数x\n    isVideoTransformX:false,\n    valueX:1,//水平平移长度的倍率,默认是1\n    //videoTransformX:0,\n    //平移参数y\n    isVideoTransformY:false,\n    valueY:1,//竖直平移长度的倍率,默认是1\n    //videoTransformY:0,\n    //旋转参数\n    isVideoRotate:false,\n    valueR:1,//旋转角度的倍率,默认是1度\n    videoRotate:0,//作为xml的rotZ参数上传\n    //放缩系数\n    isVideoScale:false,\n    valueS:0.1,//旋转角度的倍率,默认是0.1倍\n    videoScale:1,//作为xml的fov参数上传，需要转换关系\n    //为了保证鼠标事件不影响绘制的视频热点\n    videoGroup:[],//存放四边形四个顶点的三维世界坐标\n\n\n    imgType: 'Auto',\n    isAddProject:true,\n    // endAction: '',\n    // level: 1,\n    // loop: 1,\n    // pitch: 1,\n    // roll: 1,\n    // pan: 1,\n    // tilt: 1,\n    // fov: 1,\n    // min: 1,\n    // max: 1,\n    // pannorth: 1,\n    dateVal: '',\n    // external: [],\n    // showLimits: true,\n    // minFov: ['Degrees'],\n    pickerOptions0: {\n      disabledDate(time) {\n        return time.getTime() < Date.now() - 8.64e7;\n      }\n    },\n    //用这个\n    // imgFile:{fileName:'tianyu01.jpg',fileUrl:['/static/textures/tianyu01.jpg'],\n    //   tempfileUrl:['/static/textures/tianyucube/right.jpg','/static/textures/tianyucube/left.jpg',\n    //     '/static/textures/tianyucube/top.jpg','/static/textures/tianyucube/bottom.jpg',\n    //     '/static/textures/tianyucube/front.jpg','/static/textures/tianyucube/back.jpg']},\n\n    // imgFile:{fileName:'tianyu01.jpg',fileUrl:['/static/textures/tianyu01.jpg']},\n    imgFile:{fileName:'1_sphere.jpg',fileUrl:['/static/textures/1_sphere.jpg']},\n\n    // imgFile:{fileName:'系统默认图片',fileUrl:['/static/textures/tianyu01.jpg'],\n    //     tempfileUrl:['/static/textures/tianyucube/right.jpg','/static/textures/tianyucube/left.jpg',\n    //         '/static/textures/tianyucube/top.jpg','/static/textures/tianyucube/bottom.jpg',\n    //         '/static/textures/tianyucube/front.jpg','/static/textures/tianyucube/back.jpg']},\n    // fileUrlArr:[{'fileName':'tianyu01.jpg','fileUrl':'../../../static/textures/tianyu01.jpg'},\n    //   {'fileName':'tianyu02.jpg','fileUrl':'../../../static/textures/tianyu02.jpg'},\n    //   {'fileName':'tianyu03.jpg','fileUrl':'../../../static/textures/tianyu03.jpg'},\n    //   {'fileName':'tianyu04.jpg','fileUrl':'../../../static/textures/tianyu04.jpg'},\n    //   {'fileName':'tianyu10.jpg','fileUrl':'../../../static/textures/tianyu10.jpg'}],\n\n\n    //用这个\n    // fileUrlArr:[{'fileName':'tianyu01.jpg','fileUrl':'/static/textures/tianyu01.jpg'},\n    //   {'fileName':'tianyu02.jpg','fileUrl':'/static/textures/tianyu02.jpg'},\n    //   {'fileName':'tianyu03.jpg','fileUrl':'/static/textures/tianyu03.jpg'},\n    //   {'fileName':'tianyu04.jpg','fileUrl':'/static/textures/tianyu04.jpg'},\n    //   {'fileName':'tianyu10.jpg','fileUrl':'/static/textures/tianyu10.jpg'}],\n\n    fileUrlArr:[],\n\n\n    isHotspot:false,\n    isImageHotspot:false,\n    isVideoHotspot:false,\n    isSubmit:false,\n    hotSpots:[],\n    imgHotSpots:{},\n    // target:[],\n    // hotUrl:[],\n    //hotIntroduction:[],\n    sum:[],\n    isJumpHotSpot:false,\n    isVideoHotSpot:false,\n    //isUrlHotSpot:false,\n    isImgHotSpot:false,\n    hotSpotsImgs:[{'key':'tianyu01.jpg','value':'tianyu01.jpg'},{'key':'tianyu02.jpg','value':'tianyu02.jpg'}],\n    //hotSpotsImgs:[],\n    tempLocation:{},\n    isDeleteHotSpot:false,\n    jumpHotSpots:[],\n    urlHotSpots:[],\n    imageHotSpots:[],\n    // activeName:'scene',\n    viewNo:'',\n    panoUploadUrl:'',\n    tietu:[],\n    output:'<?xml version=\"1.0\" encoding=\"UTF-8\"?>'\n  },\n  mutations: {\n    //把字符串读取的数据信息存到state的arr中\n    addArr:(state,msg2)=>{\n      state.arr=msg2;\n    },\n    saveimgType:(state,msg2)=>{\n      state.imgType=msg2;\n      //console.log('imgType: '+state.imgType);\n    },\n    // saveendAction:(state,msg2)=>{\n    //     state.endAction=msg2;\n    //    // console.log('endAction: '+state.endAction);\n    // },\n    // savelevel:(state,msg2)=>{\n    //     state.level=msg2;\n    //     //console.log('level: '+state.level);\n    // },\n    // saveloop:(state,msg2)=>{\n    //     state.loop=msg2;\n    //     //console.log('loop: '+state.loop);\n    // },\n    // savepitch:(state,msg2)=>{\n    //     state.pitch=msg2;\n    //     //console.log('pitch: '+state.pitch);\n    // },\n    // saveroll:(state,msg2)=>{\n    //     state.roll=msg2;\n    //     //console.log('roll: '+state.roll);\n    // },\n    // savepan:(state,msg2)=>{\n    //     state.pan=msg2;\n    //    // console.log('pan: '+state.pan);\n    // },\n    // savetilt:(state,msg2)=>{\n    //     state.tilt=msg2;\n    //   //  console.log('tilt: '+state.tilt);\n    // },\n    // savefov:(state,msg2)=>{\n    //     state.fov=msg2;\n    //     //console.log('fov: '+state.fov);\n    // },\n    // savemin:(state,msg2)=>{\n    //     state.min=msg2;\n    //     //console.log('min: '+state.min);\n    // },\n    // savemax:(state,msg2)=>{\n    //     state.max=msg2;\n    //    // console.log('max: '+state.max);\n    // },\n    // savepannorth:(state,msg2)=>{\n    //     state.pannorth=msg2;\n    //     //console.log('pannorth: '+state.pannorth);\n    // },\n    // saveexternal:(state,msg2)=>{\n    //     state.external=msg2;\n    //     //console.log('external: '+state.external);\n    // },\n    // saveminFov:(state,msg2)=>{\n    //     state.minFov=msg2;\n    //    // console.log('minFov: '+state.minFov);\n    // },\n    // saveshowLimits:(state,msg2)=>{\n    //     state.showLimits=msg2;\n    //     //console.log('showLimits: '+state.showLimits);\n    // },\n    saveimgFile:(state,msg2)=>{\n      state.imgFile=msg2;\n      //console.log('imgFileName: '+state.imgFile.fileName+'imgFileUrl: '+state.imgFile.fileUrl);\n    },\n    saveFileUrlArr:(state,msg2)=>{\n      // state.fileUrlArr.push(msg2);\n      state.fileUrlArr=msg2;\n    },\n    saveHotSpotsImgs:(state,msg2)=>{\n      state.hotSpotsImgs=msg2;\n    },\n    saveTietu:(state,msg2)=>{\n      state.tietu=msg2;\n    },\n    isHotspot:(state)=>{\n      state.isHotspot=!state.isHotspot;\n      //state.activeName='hotSpot';\n    },\n    isImageHotspot:(state)=>{\n      state.isImageHotspot=!state.isImageHotspot;\n      //state.activeName='hotSpot';\n    },\n    isVideoHotspot:(state)=>{\n      state.isVideoHotspot=!state.isVideoHotspot;\n      //state.activeName='hotSpot';\n    },\n    isSubmit:(state)=>{\n      state.isSubmit=!state.isSubmit;\n    },\n    //场景中所有的跳转热点存储\n    hotSpots:(state,msg2)=>{\n      state.hotSpots=msg2.sprites;\n    },\n    //场景中所有的图片热点存储\n    imgHotSpots:(state,msg2)=>{\n      state.imgHotSpots=msg2.imgHotSpots;\n    },\n    // saveTarget:(state,msg2)=>{\n    //     state.target.push(msg2);\n    // },\n    // saveHotUrl:(state,msg2)=>{\n    //     state.hotUrl.push(msg2.hotUrl);\n    // },\n    // saveHotIntroduction:(state,msg2)=>{\n    //   state.hotIntroduction.push(msg2.hotIntroduction);\n    // },\n    saveInformation:(state)=>{\n      //如果是在同一个场景中保存的话，对sum中的元素对象进行替换，否则是新增\n      let hotSpots=state.hotSpots;\n      let imgHotSpots=state.imgHotSpots;\n      let time=0;\n      state.isSubmit=!state.isSubmit;\n      let interval=setInterval(function () {\n        time+=100;\n        if((state.hotSpots!==hotSpots||time==500)&&(state.imgHotSpots!==imgHotSpots||time==500)){\n          clearInterval(interval);\n          let jumpHotSpots=state.jumpHotSpots;\n          let urlHotSpots=state.urlHotSpots;\n          let imageHotSpots=state.imageHotSpots;\n          let temp=[];\n          let temp2=[];\n          let temp3=[];\n          for(let i=0;i<jumpHotSpots.length;i++){\n            for(let j=0;j<state.hotSpots.length;j++){\n              if(jumpHotSpots[i].position[0]==state.hotSpots[j].position[0]){\n                temp.push(jumpHotSpots[i]);\n              }\n            }\n\n          }\n          for(let i=0;i<urlHotSpots.length;i++){\n            for(let j=0;j<state.imgHotSpots.length;j++){\n              if(urlHotSpots[i].position[0]==state.imgHotSpots[j].position[0]){\n                temp2.push(urlHotSpots[i]);\n              }\n            }\n\n          }\n          for(let i=0;i<imageHotSpots.length;i++){\n            for(let j=0;j<state.imgHotSpots.length;j++){\n              if(imageHotSpots[i].position[0]==state.imgHotSpots[j].position[0]){\n                temp3.push(imageHotSpots[i]);\n              }\n            }\n\n          }\n          state.jumpHotSpots=temp;\n          state.urlHotSpots=temp2;\n          state.imageHotSpots=temp3;\n          let flag=true;\n          let keys=Object.keys(state);\n          let o={};\n          for(let key of keys){\n            if(key!='sum'){\n              o[key]=state[key];\n            }\n          }\n          for(let i=0;i<state.sum.length;i++){\n            if(state.sum[i].imgFile.fileUrl[0]==o.imgFile.fileUrl[0]){\n              flag=false;\n              state.sum[i]=o;\n            }\n          }\n          if(flag){\n            state.sum.push(o);\n          }\n          //console.log(state.sum);\n          //点击保存场景后切换后场景选择界面\n          //state.activeName='scene';\n\n        }\n      },100);\n\n    },\n    // saveStatus:(state,msg2)=>{\n    //     state.k=msg2.k;\n    //     state.m=msg2.m;\n    // }\n    clearHotSpots:(state)=>{\n      // state.target=[];\n      state.hotSpots=[];\n      //state.hotUrl=[];\n      state.imgHotSpots=[];\n      //state.hotIntroduction=[];\n      state.jumpHotSpots=[];\n      state.urlHotSpots=[];\n      state.imageHotSpots=[];\n    },\n    showJumpHotSpot:(state)=>{\n      state.isJumpHotSpot=true;\n      state.isImgHotSpot=false;\n      state.isVideoHotSpot=false;\n      state.selectHotType='';\n      state.selectUploadPicture='';\n      state.selectJumpScene='';\n    },\n    showImgHotSpot:(state)=>{\n      state.isImgHotSpot=true;\n      state.isJumpHotSpot=false;\n      state.isVideoHotSpot=false;\n      state.selectHotType='';\n      state.selectUploadPicture='';\n      state.selectJumpScene='';\n    },\n    showVideoHotSpot:(state)=>{\n      state.isVideoHotSpot=true;\n      state.isJumpHotSpot=false;\n      state.isImgHotSpot=false;\n      state.selectHotType='';\n      state.selectUploadPicture='';\n      state.selectJumpScene='';\n    },\n    //不显示任何热点参数\n    hideHotSpot:(state)=>{\n      state.isImgHotSpot=false;\n      state.isJumpHotSpot=false;\n      state.isVideoHotSpot=false;\n    },\n    saveTempLocation:(state,msg2)=>{\n      state.tempLocation=msg2;\n    },\n    saveJumpHotSpot:(state,msg2)=>{\n      let obj={};\n      obj.hotTarget=msg2.hotTarget;\n      obj.hotIntroduction=msg2.hotIntroduction;\n      obj.position=state.tempLocation.location;\n      obj.panAndTilt=state.tempLocation.panAndTilt;\n      state.jumpHotSpots.push(obj);\n    },\n    saveUrlHotSpot:(state,msg2)=>{\n      let obj={};\n      obj.hotUrl=msg2.hotUrl;\n      obj.position=state.tempLocation.location;\n      obj.panAndTilt=state.tempLocation.panAndTilt;\n      state.urlHotSpots.push(obj);\n    },\n    saveImageHotSpot:(state,msg2)=>{\n      let obj={};\n      obj.hotImage=msg2.hotImage;\n      obj.position=state.tempLocation.location;\n      obj.panAndTilt=state.tempLocation.panAndTilt;\n      state.imageHotSpots.push(obj);\n    },\n    saveViewNo:(state,msg2)=>{\n      state.viewNo=msg2.viewNo;\n      state.panoUploadUrl='/web/file/'+state.viewNo+'/pano/3';\n    },\n    deleteHotSpot:(state)=>{\n      state.isDeleteHotSpot=true;\n    },\n    deletedHotSpot:(state)=>{\n      state.isDeleteHotSpot=false;\n      state.newIsDeleteHotSpot=false;\n    },\n    //用于热点管理的热点删除(在App.main中删除)\n    newDeleteHotSpot:(state,msg2)=>{\n      state.newIsDeleteHotSpot=true;\n      state.pid=msg2.pid;\n      state.position=msg2.position;\n    },\n    //用于热点管理的树形控件来删除各个类型的热点(在树形结构中删除)\n    deleteJumpHotSpot:(state,msg2)=>{\n      //state.tree[msg2.scene].children[0].children.splice(msg2.index,1);\n      state.arr[msg2.scene].hotspot.splice(msg2.index,1);\n      state.maxID=state.maxID-3;\n    },\n    deleteImageHotSpot:(state,msg2)=>{\n      //state.tree[msg2.scene].children[1].children.splice(msg2.index,1);\n      state.arr[msg2.scene].polyhotspot.imageHotSpots.splice(msg2.index,1);\n      state.maxID=state.maxID-2;\n    },\n    deleteUrlHotSpot:(state,msg2)=>{\n      //state.tree[msg2.scene].children[2].children.splice(msg2.index,1);\n      state.arr[msg2.scene].polyhotspot.urlHotSpots.splice(msg2.index,1);\n      state.maxID=state.maxID-2;\n    },\n    //用于热点管理的场景删除\n    deleteScene:(state,msg2)=>{\n      state.sceneDelete={index:msg2};\n      state.arr.splice(msg2,1);\n      state.fileUrlArr.splice(msg2,1);\n    },\n    //生成xml字符串\n    createXmlString:(state,msg2)=>{\n      state.output=msg2;\n    },\n    //点击热点管理的热点类型下的热点这一块则把热点信息保存到state中，并绘制新热点删除旧热点\n    showActiveJumpSpot:(state,msg2)=>{\n      state.activePost=msg2;\n      state.activeJumpHotSpot=!state.activeJumpHotSpot;//需要的只是其状态的改变\n    },\n    showInactiveJumpSpot:(state)=>{\n      state.inactiveJumpHotSpot=!state.inactiveJumpHotSpot;\n    },\n    showActiveImageSpot:(state,msg2)=>{\n      state.activePost=msg2;\n      state.activeImageHotSpot=!state.activeImageHotSpot;\n    },\n    showInactiveImageSpot:(state)=>{\n      state.inactiveImageHotSpot=!state.inactiveImageHotSpot;\n    },\n    showActiveUrlSpot:(state,msg2)=>{\n      state.activePost=msg2;\n      state.activeUrlHotSpot=!state.activeUrlHotSpot;\n    },\n    showInactiveUrlSpot:(state)=>{\n      state.inactiveUrlHotSpot=!state.inactiveUrlHotSpot;\n    },\n    //把热点信息的树形结构保存到state\n\n    // addArr:(state,msg2)=>{\n    //   state.tree=msg2;\n    // },\n    //保存树状结构节点的最大ID\n    addMaxID:(state,msg2)=>{\n      state.maxID=msg2;\n    },\n    //把跳转热点的热点说明传递到state，保证实时更新\n    saveTreeHotIntroduction:(state,msg2)=>{\n      state.arr[msg2.i].hotspot[msg2.l].title=\"{\"+msg2.result+\"}\";\n    },\n    savehotIntroduction:(state,msg2)=>{\n      state.jumpHotSpots[msg2.k].hotIntroduction=msg2.result;\n    },\n    //把Url热点的热点链接传递到state，保证实时更新\n    saveTreeHotUrl:(state,msg2)=>{\n      state.arr[msg2.i].polyhotspot.urlHotSpots[msg2.l].url=\"http://\"+msg2.result;\n    },\n    savehotUrl:(state,msg2)=>{\n      state.urlHotSpots[msg2.k].hotUrl=msg2.result;\n    },\n    //把跳转热点的跳转场景传递到state，保证实时更新\n    saveTreeJumpScene:(state,msg2)=>{\n      state.arr[msg2.i].hotspot[msg2.l].url=\"{\"+msg2.result.replace(\"场景\",'node')+\"}\";\n    },\n    savehotTarget:(state,msg2)=>{\n      state.jumpHotSpots[msg2.k].hotTarget=msg2.result;\n    },\n    //把图像热点的已上传图片信息传递到state，保证实时更新\n    saveTreeUploadPicture:(state,msg2)=>{\n      state.arr[msg2.i].polyhotspot.imageHotSpots[msg2.l].target='images/'+msg2.result;\n    },\n    savehotImage:(state,msg2)=>{\n      state.imageHotSpots[msg2.k].hotImage=msg2.result;\n    },\n    //把更改的热点信息保存到state中\n    changeJumpHotSpot:(state,msg2)=>{\n      state.jumpHotSpots[msg2.index].hotIntroduction=msg2.hotIntroduction;\n      state.jumpHotSpots[msg2.index].hotTarget=msg2.hotTarget;\n    },\n    changeImageHotSpot:(state,msg2)=>{\n      state.imageHotSpots[msg2.index].hotImage=msg2.hotImage;\n    },\n    changeUrlHotSpot:(state,msg2)=>{\n      state.urlHotSpots[msg2.index].hotUrl=msg2.hotUrl;\n    },\n    //把更改的热点信息保存到state的tree中\n    changeTreeJumpHotSpot:(state,msg2)=>{\n      state.arr[msg2.scene].hotspot[msg2.index].title=\"{\"+msg2.hotIntroduction+\"}\";\n      state.arr[msg2.scene].hotspot[msg2.index].url=\"{\"+msg2.hotTarget.replace(\"场景\",'node')+\"}\";\n    },\n    changeTreeUrlHotSpot:(state,msg2)=>{\n      state.arr[msg2.scene].polyhotspot.urlHotSpots[msg2.index].url=\"http://\"+msg2.hotUrl;\n    },\n    changeTreeImageHotSpot:(state,msg2)=>{\n      state.arr[msg2.scene].polyhotspot.imageHotSpots[msg2.index].target='images/'+msg2.hotImage;\n    },\n    //把新增的热点信息保存到state的tree中\n    saveTreeJumpHotSpot:(state,msg2)=>{\n      let newobj={};\n      newobj.id=\"Point\"+(state.jumpHotSpots.length+1);\n      newobj.position=state.tempLocation.location;\n      newobj.panAndTilt=state.tempLocation.panAndTilt;\n      newobj.title=\"{\"+msg2.hotIntroduction+\"}\";\n      newobj.url=\"{\"+msg2.hotTarget.replace(\"场景\",'node')+\"}\";\n      state.arr[msg2.scene].hotspot.push(newobj);\n    },\n    saveTreeUrlHotSpot:(state,msg2)=>{\n      let newobj={};\n      newobj.id='hpimage' + msg2.scene + state.urlHotSpots.length;\n      newobj.position=state.tempLocation.location;\n      newobj.panAndTilt=state.tempLocation.panAndTilt;\n      newobj.url=\"http://\"+msg2.hotUrl;\n      state.arr[msg2.scene].polyhotspot.urlHotSpots.push(newobj);\n    },\n    saveTreeImageHotSpot:(state,msg2)=>{\n      let newobj={};\n      newobj.id='hpimage';\n      newobj.position=state.tempLocation.location;\n      newobj.panAndTilt=state.tempLocation.panAndTilt;\n      newobj.target='images/'+msg2.hotImage;\n      state.arr[msg2.scene].polyhotspot.imageHotSpots.push(newobj);\n    },\n    //selectHotType代表select选择框中的热点类型\n    saveSelectHotType:(state,msg2)=>{\n      state.selectHotType=msg2;\n    },\n    //selectUploadPicture代表select选择的已上传图片\n    saveSelectUploadPicture:(state,msg2)=>{\n      state.selectUploadPicture=msg2;\n    },\n    //selectJumpScene代表select选择的跳转场景\n    saveSelectJumpScene:(state,msg2)=>{\n      state.selectJumpScene=msg2;\n    },\n    //inputHotIntroduction用于input输入框输入的场景说明\n    saveInputHotIntroduction:(state,msg2)=>{\n      state.inputHotIntroduction=msg2;\n    },\n    //inputHotUrl用于input输入框输入的热点链接\n    saveInputHotUrl:(state,msg2)=>{\n      state.inputHotUrl=msg2;\n    },\n\n\n\n\n\n    //视频热点的相关操作\n\n    //保存绘制时视频热点的坐标信息\n    saveOldSelected:(state,msg2)=>{\n      state.oldselected=msg2;\n    },\n    changeOldSelectedX:(state,msg2)=>{\n      // state.oldselected.client[0]=parseInt(msg2);\n      state.valueX = parseInt(msg2);\n      state.isVideoTransformX=!state.isVideoTransformX;\n    },\n    changeOldSelectedY:(state,msg2)=>{\n      // state.oldselected.client[1]=parseInt(msg2);\n      state.valueY = parseInt(msg2);\n      state.isVideoTransformY=!state.isVideoTransformY;\n    },\n    changeOldSelectedR:(state,msg2)=>{\n      //state.videoRotate=parseInt(msg2);\n      state.valueR = parseInt(msg2);\n      state.videoRotate += parseInt(msg2);\n      state.isVideoRotate=!state.isVideoRotate;\n    },\n    changeOldSelectedS:(state,msg2)=>{\n      state.valueS = parseInt(msg2);\n      state.videoScale += parseFloat(msg2);\n      state.videoScale = Math.round(state.videoScale*10)/10;//保留小数点后一位\n      state.isVideoScale=!state.isVideoScale;\n    },\n    saveVideoGroup:(state,msg2)=>{\n      state.videoGroup.push(msg2);\n    },\n    emptyVideoGroup:(state)=>{\n      state.videoGroup=[];\n    },\n    // saveOldselectedClient:(state,msg2)=>{\n    //   state.oldselected.client[0] = msg2.x;\n    //   state.oldselected.client[1] = msg2.y;\n    // },\n    saveOldselectedVector:(state,msg2)=>{\n      state.oldselected.vector = msg2;\n    },\n    saveOldselectedSelect:(state,msg2)=>{\n      state.oldselected.select[0] = msg2[0];\n      state.oldselected.select[1] = msg2[1];\n      state.oldselected.select[2] = msg2[2];\n    },\n    //倍率关系更新\n    updateValueX:(state,msg2)=>{\n      state.valueX = msg2;\n    },\n    updateValueY:(state,msg2)=>{\n      state.valueY = msg2;\n    },\n    updateValueR:(state,msg2)=>{\n      state.valueR = msg2;\n    },\n    updateValueS:(state,msg2)=>{\n      state.valueS = msg2;\n    },\n\n\n  }\n\n  ,\n  actions: {\n    saveimgFile:({commit},msg)=>{\n      commit('saveimgFile',msg)\n    },\n    saveInformation:({commit})=>{\n      commit('saveInformation')\n    },\n    isHotspot:({commit})=>{\n      commit('isHotspot')\n    },\n    isSubmit:({commit})=>{\n      commit('isSubmit')\n    },\n    isImageHotspot:({commit})=>{\n      commit('isImageHotspot')\n    },\n    isVideoHotspot:({commit})=>{\n      commit('isVideoHotspot')\n    },\n    hotSpots:({commit},msg)=>{\n      commit('hotSpots',msg)\n    },\n    imgHotSpots:({commit},msg)=>{\n      commit('imgHotSpots',msg)\n    }\n  }\n};\n\nexport default test;\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/status.js","import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport app from './modules/app';\r\n// import user from './modules/user';\r\n// import permission from './modules/permission';\r\n// import getters from './getters';\r\nimport nav from './modules/nav';\r\nimport test from './modules/status';\r\n\r\nVue.use(Vuex);\r\n\r\nconst store = new Vuex.Store({\r\n    modules: {\r\n        app,\r\n        // user,\r\n        nav,\r\n        // permission,\r\n        test\r\n    },\r\n    // getters,\r\n});\r\n\r\nexport default store\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","<template>\r\n  <el-breadcrumb class=\"app-levelbar\" separator=\"/\">\r\n    <el-breadcrumb-item v-for=\"(item,index)  in levelList\" :key=\"item\">\r\n      <router-link v-if='item.redirect===\"noredirect\"||index==levelList.length-1' to=\"\" class=\"no-redirect\">{{item.name}}</router-link>\r\n      <router-link v-else :to=\"item.path\">{{item.name}}</router-link>\r\n    </el-breadcrumb-item>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n      created() {\r\n        this.getBreadcrumb()\r\n      },\r\n      data() {\r\n        return {\r\n          levelList: null\r\n        }\r\n      },\r\n      methods: {\r\n        showName() {\r\n          let thanksALot = new Object();\r\n\r\n\r\n        },\r\n        getBreadcrumb() {\r\n          let matched = this.$route.matched.filter(item => item.name);\r\n          const first = matched[0];\r\n          if (first && (first.name !== '首页' || first.path !== '')) {\r\n            matched = [{ name: '首页', path: '/' }].concat(matched)\r\n          }\r\n          this.levelList = matched;\r\n        }\r\n      },\r\n      watch: {\r\n        $route() {\r\n          this.getBreadcrumb();\r\n          this.activeIndex();\r\n          this.jobForTest();\r\n          this.thanksALot();\r\n\r\n        }\r\n      }\r\n    }\r\n</script>\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n    .app-levelbar.el-breadcrumb {\r\n        display: inline-block;\r\n        font-size: 14px;\r\n        line-height: 50px;\r\n        margin-left: 10px;\r\n        .no-redirect{\r\n          color: #97a8be;\r\n          cursor:text;\r\n        }\r\n    }\r\n</style>\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/layout/Levelbar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-breadcrumb',{staticClass:\"app-levelbar\",attrs:{\"separator\":\"/\"}},_vm._l((_vm.levelList),function(item,index){return _c('el-breadcrumb-item',{key:item},[(item.redirect===\"noredirect\"||index==_vm.levelList.length-1)?_c('router-link',{staticClass:\"no-redirect\",attrs:{\"to\":\"\"}},[_vm._v(_vm._s(item.name))]):_c('router-link',{attrs:{\"to\":item.path}},[_vm._v(_vm._s(item.name))])],1)}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-236a3b51\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/layout/Levelbar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-236a3b51\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Levelbar.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Levelbar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Levelbar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-236a3b51\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Levelbar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-236a3b51\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/layout/Levelbar.vue\n// module id = null\n// module chunks = ","<template>\n  <el-menu class=\"navbar\" mode=\"horizontal\">\n    <!--<Hamburger class=\"hamburger-container\" :toggleClick=\"toggleSideBar\" :isActive=\"sidebar.opened\"></Hamburger>-->\n    <!--<el-submenu v-for=\"nb in navbar.list\" :key=\"nb.name\" :index=\"nb.name\">-->\n    <!--<template slot=\"title\">{{nb.text}}</template>-->\n    <!--&lt;!&ndash;<el-menu-item v-for=\"sub in nb.children\" :key=\"sub.name\" :index=\"nb.name\" ><input type=\"file\" @click=\"importFile\">{{sub.text}}</el-menu-item>&ndash;&gt;-->\n    <!--<el-menu-item v-for=\"sub in nb.children\" :key=\"sub.name\" :index=\"nb.name\" >{{sub.text}}</el-menu-item>-->\n    <!--</el-submenu>-->\n    <!--2018.5.7添加，实现读取文件的功能-->\n    <!-- 新建项目 -->\n    <!-- <el-menu-item index='add' type=\"text\" @click=\"dialogFormVisible = true\">新建项目</el-menu-item>\n    <el-dialog title=\"新建项目\" :visible.sync=\"dialogFormVisible\">\n        <el-form label-position=\"left\" label-width=\"100px\">\n                <el-form-item label=\"项目名称\">\n                    <el-input size=\"small\" v-model=\"shortName\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"地址\">\n                    <el-input size=\"small\" v-model=\"address\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"经度\">\n                    <el-input size=\"small\" v-model=\"longitude\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"纬度\">\n                    <el-input size=\"small\" v-model=\"latitude\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"补充说明\">\n                    <el-input type=\"textarea\" v-model=\"proInfo\"></el-input>\n                </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"sendProject\">确 定</el-button>\n        </div>\n    </el-dialog> -->\n\n    <el-submenu index=\"Elements\">\n      <template slot=\"title\">热点绘制</template>\n      <el-menu-item index=\"Hotspot\" @click=\"drawHotspot\">跳转热点</el-menu-item>\n      <el-menu-item index=\"imageHotspot\" @click=\"drawImageHotspot\">图像热点</el-menu-item>\n      <el-menu-item index=\"imageHotspot\" @click=\"drawVideoHotspot\">视频热点</el-menu-item>\n    </el-submenu>\n\n    <el-menu-item index=\"delete\" @click=\"deleteHotSpot\">删除热点</el-menu-item>\n\n    <el-menu-item index=\"save\" @click=\"saveInformation\">保存场景</el-menu-item>\n    <el-menu-item index=\"output\" @click=\"createXmlString\">发布</el-menu-item>\n    <!-- <ErrLog v-if=\"log.length>0\" class=\"errLog-container\" :logsList=\"log\"></ErrLog> -->\n    <el-menu-item index='uerInfo' style=\"display:absolute;right:-600px;\">{{userName}}</el-menu-item>\n    <!-- <el-dropdown class=\"avatar-container\" trigger=\"click\">\n        <div class=\"avatar-wrapper\">\n            <img class=\"user-avatar\" :src=\"avatar+'?imageView2/1/w/80/h/80'\">\n            <i class=\"el-icon-caret-bottom\"/>\n        </div>\n        <el-dropdown-menu class=\"user-dropdown\" slot=\"dropdown\">\n            <router-link  class='inlineBlock' to=\"/\">\n                <el-dropdown-item>\n                    首页\n                </el-dropdown-item>\n            </router-link>\n            <router-link  class='inlineBlock' to=\"/admin/profile\">\n                <el-dropdown-item>\n                    设置\n                </el-dropdown-item>\n            </router-link>\n            <el-dropdown-item divided><span @click=\"logout\" style=\"display:block;\">退出登录</span></el-dropdown-item>\n        </el-dropdown-menu>\n    </el-dropdown> -->\n  </el-menu>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex';\n  import Levelbar from './Levelbar';\n  // import Hamburger from 'components/Hamburger';\n  // import ErrLog from 'components/ErrLog';\n  // import errLogStore from 'store/errLog';\n  // import navStore from 'store/modules/nav';\n\n  export default {\n    components: {\n      Levelbar,\n      // Hamburger,\n      // ErrLog\n    },\n    //   mounted(){\n    //     let userName=document.getElementById('userID').value;\n    //     console.log(userName);\n    //   },\n    data() {\n      return {\n        // log: errLogStore.state.errLog,\n        // navbar: navStore.navbar,\n        fileList: [],\n        dialogFormVisible: false,\n        shortName: '',\n        address: '',\n        longitude: '',\n        latitude: '',\n        proInfo: '',\n        //这里暂时写死\n        createUserNo: \"84d2a1ed-d26e-4772-a296-ce8c111132d4\",\n        companyNo: \"84d2a1ed-d26e-4772-a296-ce8c111132d4\",\n        token: \"4KD8DLL84D2A1ED-D26E-4772-A296-CE8C111132D4\",\n        formLabelWidth: '120px'\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'sidebar',\n        'name',\n        'avatar'\n      ]),\n      userName() {\n        // let userName=document.getElementById('userID').value;\n        // console.log(userName);\n        // return userName;\n      }\n    },\n    methods: {\n      toggleSideBar() {\n        this.$store.dispatch('ToggleSideBar')\n      },\n      logout() {\n        this.$store.dispatch('LogOut').then(() => {\n          location.reload();// 为了重新实例化vue-router对象 避免bug\n        });\n      },\n      sendProject() {\n        this.dialogFormVisible = false;\n        let that = this;\n        this.$ajax({\n          url: '/web/spaceview/',\n          method: 'post',\n          data: {\n            shortName: that.shortName,\n            address: that.address,\n            longitude: that.longitude,\n            latitude: that.latitude,\n            info: that.proInfo,\n            createUserNo: that.createUserNo,\n            companyNo: that.companyNo,\n            _token: that.token,\n            viewType: 0,\n            status: 1\n          },\n          transformRequest: [function (data) {\n            // Do whatever you want to transform the data\n            let ret = ''\n            for (let it in data) {\n              ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n            }\n            return ret\n          }],\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n          }\n        }).then(function (response) {\n          let viewNo = response.data.data;\n          that.$store.commit('saveViewNo', {viewNo: viewNo});\n          console.log(viewNo);\n\n        }).catch(function (error) {\n          console.log(error);\n        });\n      },\n      //2018.4.28添加，实现点击element中的Panorama时实现读取全景文件\n      //暂时没用到\n      // importFile(event){\n      //     var fileNameArr=[];\n      //     var fileUrlArr=[];\n      //   event.target.addEventListener('change', (event) => {\n      //       event.preventDefault();\n      //       //用于判断是选择了哪种类型，一张图or多张图\n      //       let ele=event.target.parentNode.innerHTML.substring(event.target.parentNode.innerHTML.lastIndexOf(\">\")+1);\n      //       var file=event.target.files[0];\n      //       var fileName=file.name;\n      //       if (window.FileReader) {\n      //           var that=this;\n      //           var reader = new FileReader();\n      //           reader.readAsDataURL(file);\n      //           //监听文件读取结束后事件\n      //           reader.onloadend = function () {\n      //               var fileUrl=reader.result;\n      //               fileNameArr.push(fileName);\n      //               fileUrlArr.push(fileUrl);\n      //               //一张图的情况\n      //               if(fileNameArr.length===1&&ele==='Panorama1'){\n      //                   that.$store.dispatch('saveimgFile',{fileName:fileNameArr,fileUrl:fileUrlArr});\n      //                   return;\n      //               }\n      //               //六张图的情况\n      //               if(fileNameArr.length===6&&ele==='Panorama6'){\n      //                   that.$store.dispatch('saveimgFile',{fileName:fileNameArr,fileUrl:fileUrlArr});\n      //                   return;\n      //               }\n      //\n      //           };\n      //\n      //       }\n      //   }, false);\n      // },\n\n\n      drawHotspot() {\n        this.$store.dispatch('isHotspot');\n      },\n      drawImageHotspot() {\n        this.$store.dispatch('isImageHotspot');\n      },\n      drawVideoHotspot() {\n        this.$store.dispatch('isVideoHotspot');\n      },\n      //确定按钮会改变state中的isSubmit的状态，从而实现在editor组件中通过监听isSubmit实现同步state中的hotSpots属性\n      submitInformation() {\n        this.$store.dispatch('isSubmit');\n      },\n      saveInformation() {\n        this.$store.dispatch('saveInformation');\n      },\n      deleteHotSpot() {\n        this.$store.commit('deleteHotSpot');\n      },\n      //生成xml字符串\n      createXmlString() {\n        let output = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><tour start=\"node1\">';\n        //场景数\n        let sum = this.$store.state.test.sum;\n        let imgName = [];\n        let hotSpots = [];\n        let hotSpotsTarget = [];\n        for (let i = 0, len = sum.length; i < len; i++) {\n          let node = 'node' + (i + 1);\n          //let point = 'Point' + (i + 1);\n\n          imgName.push(sum[i].imgFile.fileName);\n          hotSpots.push(sum[i].hotSpots);\n          hotSpotsTarget.push(sum[i].target);\n\n          // output +=`<siderbar>`;\n          // for (let j = 0; j <sum[i].fileUrlArr.length ; j++) {\n          //   output +=`<input fileName=\"${sum[i].fileUrlArr[j].fileName}\" fileUrl=\"${sum[i].fileUrlArr[j].fileUrl}\"/>`;\n          //   output += '</input>';\n          // }\n          // output += '</siderbar>';\n\n          output += `<panorama id=\"${node}\">\n                           <input overlap=\"1\" levelingpitch=\"0\" width=\"1920\" levelingroll=\"0\" leveltileurl=\"tiles/${sum[i].imgFile.fileName.substring(0,sum[i].imgFile.fileName.lastIndexOf('.'))}/cf_%c/l_%l/c_%x/tile_%y.jpg\" fileName=\"${sum[i].fileUrlArr[i].fileName}\" fileUrl=\"${sum[i].fileUrlArr[i].fileUrl}\" height=\"1920\" levelbiashidpi=\"0.400\" levelbias=\"0.400\" leveltilesize=\"510\">\n                             <level width=\"1920\" preload=\"0\" height=\"1920\" predecode=\"0\"/>\n                             <level width=\"960\" preload=\"0\" height=\"960\" predecode=\"0\"/>\n                             <level width=\"480\" preload=\"1\" height=\"480\" predecode=\"1\"/>\n                             <preview color=\"0x808080\" strip=\"1\"/>\n                           </input>\n                           <view fovmode=\"0\" pannorth=\"0\">\n                             <start fov=\"70\" pan=\"0\" tilt=\"0\"/>\n                             <min fov=\"5\" pan=\"0\" tilt=\"-90\"/>\n                             <max fov=\"120\" pan=\"360\" tilt=\"90\"/>\n                           </view>\n                           <userdata author=\"\" info=\"\" latitude=\"\" comment=\"\" copyright=\"\" title=\"\" tags=\"\" longitude=\"\" source=\"\" description=\"\" datetime=\"\"/>\n                           <hotspots width=\"180\" wordwrap=\"1\" height=\"20\">\n                             <label background=\"1\" borderalpha=\"1\" width=\"180\" bordercolor=\"0x000000\" wordwrap=\"1\" enabled=\"1\" height=\"20\" borderradius=\"1\" textcolor=\"0x000000\" textalpha=\"1\" border=\"1\" backgroundalpha=\"1\" backgroundcolor=\"0xffffff\"/>\n                             <polystyle borderalpha=\"1\" handcursor=\"1\" mode=\"1\" bordercolor=\"0x0000ff\" backgroundalpha=\"0.2509803921568627\" backgroundcolor=\"0x0000ff\"/>`;\n          for (let j = 0; j < sum[i].jumpHotSpots.length; j++) {\n            output += `<hotspot skinid=\"ht_node\" id=\"${'Point'+(j+1)}\" url=\"{${sum[i].jumpHotSpots[j].hotTarget.replace(/场景/, 'node')}}\" pan=\"${sum[i].jumpHotSpots[j].panAndTilt[0]}\" target=\"0/0/0\" tilt=\"${sum[i].jumpHotSpots[j].panAndTilt[1]}\" title=\"{${sum[i].jumpHotSpots[j].hotIntroduction}}\" jumpHotSpotsx=\"${sum[i].jumpHotSpots[j].position[0]}\" jumpHotSpotsy=\"${sum[i].jumpHotSpots[j].position[1]}\" jumpHotSpotsz=\"${sum[i].jumpHotSpots[j].position[2]}\" description=\"\"/>`;\n          }\n          for (let k = 0; k < sum[i].urlHotSpots.length; k++) {\n            let id = 'hpimage' + i + k;\n            output += `<polyhotspot id=\"${id}\" url=\"${'http://' + sum[i].urlHotSpots[k].hotUrl}\" title=\"\" description=\"\" target=\"_blank\">\n                                <vertex pan=\"${sum[i].urlHotSpots[k].panAndTilt[0][0]}\" tilt=\"${sum[i].urlHotSpots[k].panAndTilt[0][1]}\" urlHotSpotsx=\"${sum[i].urlHotSpots[k].position[0].x}\" urlHotSpotsy=\"${sum[i].urlHotSpots[k].position[0].y}\" urlHotSpotsz=\"${sum[i].urlHotSpots[k].position[0].z}\"/>\n                                <vertex pan=\"${sum[i].urlHotSpots[k].panAndTilt[1][0]}\" tilt=\"${sum[i].urlHotSpots[k].panAndTilt[1][1]}\" urlHotSpotsx=\"${sum[i].urlHotSpots[k].position[1].x}\" urlHotSpotsy=\"${sum[i].urlHotSpots[k].position[1].y}\" urlHotSpotsz=\"${sum[i].urlHotSpots[k].position[1].z}\"/>\n                                <vertex pan=\"${sum[i].urlHotSpots[k].panAndTilt[2][0]}\" tilt=\"${sum[i].urlHotSpots[k].panAndTilt[2][1]}\" urlHotSpotsx=\"${sum[i].urlHotSpots[k].position[2].x}\" urlHotSpotsy=\"${sum[i].urlHotSpots[k].position[2].y}\" urlHotSpotsz=\"${sum[i].urlHotSpots[k].position[2].z}\"/>\n                                <vertex pan=\"${sum[i].urlHotSpots[k].panAndTilt[3][0]}\" tilt=\"${sum[i].urlHotSpots[k].panAndTilt[3][1]}\" urlHotSpotsx=\"${sum[i].urlHotSpots[k].position[3].x}\" urlHotSpotsy=\"${sum[i].urlHotSpots[k].position[3].y}\" urlHotSpotsz=\"${sum[i].urlHotSpots[k].position[3].z}\"/>\n                               </polyhotspot>`\n\n          }\n          for (let k = 0; k < sum[i].imageHotSpots.length; k++) {\n            output += `<polyhotspot id=\"hpimage\" url=\"\" title=\"\" description=\"\" target=\"${'images/' + sum[i].imageHotSpots[k].hotImage}\">\n                                <vertex pan=\"${sum[i].imageHotSpots[k].panAndTilt[0][0]}\" tilt=\"${sum[i].imageHotSpots[k].panAndTilt[0][1]}\" imageHotSpotsx=\"${sum[i].imageHotSpots[k].position[0].x}\" imageHotSpotsy=\"${sum[i].imageHotSpots[k].position[0].y}\" imageHotSpotsz=\"${sum[i].imageHotSpots[k].position[0].z}\"/>\n                                <vertex pan=\"${sum[i].imageHotSpots[k].panAndTilt[1][0]}\" tilt=\"${sum[i].imageHotSpots[k].panAndTilt[1][1]}\" imageHotSpotsx=\"${sum[i].imageHotSpots[k].position[1].x}\" imageHotSpotsy=\"${sum[i].imageHotSpots[k].position[1].y}\" imageHotSpotsz=\"${sum[i].imageHotSpots[k].position[1].z}\"/>\n                                <vertex pan=\"${sum[i].imageHotSpots[k].panAndTilt[2][0]}\" tilt=\"${sum[i].imageHotSpots[k].panAndTilt[2][1]}\" imageHotSpotsx=\"${sum[i].imageHotSpots[k].position[2].x}\" imageHotSpotsy=\"${sum[i].imageHotSpots[k].position[2].y}\" imageHotSpotsz=\"${sum[i].imageHotSpots[k].position[2].z}\"/>\n                                <vertex pan=\"${sum[i].imageHotSpots[k].panAndTilt[3][0]}\" tilt=\"${sum[i].imageHotSpots[k].panAndTilt[3][1]}\" imageHotSpotsx=\"${sum[i].imageHotSpots[k].position[3].x}\" imageHotSpotsy=\"${sum[i].imageHotSpots[k].position[3].y}\" imageHotSpotsz=\"${sum[i].imageHotSpots[k].position[3].z}\"/>\n                               </polyhotspot>`\n          }\n          output += `</hotspots>\n                           <media/>\n                           <transition zoomin=\"0\" zoomoutpause=\"1\" enabled=\"0\" blendcolor=\"0x000000\" zoomspeed=\"2\" type=\"crossdissolve\" blendtime=\"1\" softedge=\"0\" zoomout=\"0\" zoomfov=\"20\"/>\n                           <control lockedmouse=\"0\" speedwheel=\"1\" dblclickfullscreen=\"0\" hideabout=\"0\" lockedkeyboard=\"0\" invertwheel=\"0\" invertcontrol=\"1\" lockedkeyboardzoom=\"0\" simulatemass=\"1\" sensitivity=\"8\" lockedwheel=\"0\" contextfullscreen=\"0\"/>\n                           </panorama>`;\n        }\n        output += '</tour>';\n        console.log(output);\n\n\n\n        //下面是传参给后台\n        let that = this;\n        let arr = [];\n        let arr2 = [];\n        for (let i = 0, len = that.$store.state.test.fileUrlArr.length; i < len; i++) {\n          arr.push(that.$store.state.test.fileUrlArr[i].fileName);\n          arr.push(that.$store.state.test.fileUrlArr[i].fileUrl.replace(/http:\\/\\/172\\.28\\.211\\.16:8010\\//, ''));\n        }\n        let fastdfsURL = arr.join(',');\n        for (let j = 0, len = that.$store.state.test.tietu.length; j < len; j++) {\n          arr2.push(that.$store.state.test.tietu[j].fileName);\n          arr2.push(that.$store.state.test.tietu[j].fileUrl);\n        }\n        let hotfastdfsURL = arr2.join(',');\n        this.$ajax({\n          url: '/web/pano/html',\n          method: 'post',\n          data: {\n            //暂时写死\n            _token: that.token,\n            user: that.createUserNo,\n            xmlstring: output,\n            fastdfsURL: fastdfsURL,\n            hotfastdfsURL: hotfastdfsURL,\n            id: that.$store.state.test.viewNo,\n          },\n          transformRequest: [function (data) {\n            // Do whatever you want to transform the data\n            let ret = ''\n            for (let it in data) {\n              ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n            }\n            return ret\n          }],\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n          }\n        }).then(function (response) {\n          console.log(response);\n\n        }).catch(function (error) {\n          console.log(error);\n        });\n\n        this.$store.commit('createXmlString', output);\n      },\n      // outputPanorama(){\n      //   //对xml进行修改,有问题\n      //     let xmlDoc=this.loadXMLDoc(\"/static/pano.xml\");\n      //     let newel=xmlDoc.createElement(\"hotspot\");\n      //     let newtext=xmlDoc.createTextNode(\"first\");\n      //     newel.appendChild(newtext);\n      //     let x=xmlDoc.getElementsByTagName(\"hotspots\")[0];\n      //     x.appendChild(newel);\n      //     let oSerializer = new XMLSerializer();\n      //     let sXML = oSerializer.serializeToString(xmlDoc);\n      //\n      //     let urlObject = window.URL || window.webkitURL || window;\n      //     let export_blob = new Blob([sXML]);\n      //     let save_link = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n      //     save_link.href = urlObject.createObjectURL(export_blob);\n      //     save_link.download = name;\n      //     this.fake_click(save_link);\n      //\n      //     var xmlhttp = new window.XMLHttpRequest();\n      //     xmlhttp.open(\"POST\", \"/static/pano.xml\", false); // open() 方法需要三个参数。第一个参数定义发送请求所使用的方法（GET 还是 POST）。第二个参数规定服务器端脚本的 URL。第三个参数规定应当对请求进行异步地处理。\n      //     xmlhttp.send(xmlDoc);\n      // },\n      loadXMLDoc(dname) {\n        let xhttp = null;\n        if (window.XMLHttpRequest) {\n          xhttp = new XMLHttpRequest();\n        }\n        else {\n          xhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n        xhttp.open(\"GET\", dname, false);\n        xhttp.send();\n        return xhttp.responseText;\n      }\n      // fake_click(obj) {\n      //     var ev = document.createEvent(\"MouseEvents\");\n      //     ev.initMouseEvent(\n      //         \"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null\n      //     );\n      //     obj.dispatchEvent(ev);\n      // }\n    }\n  }\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .navbar {\n    height: 50px;\n    line-height: 50px;\n    border-radius: 0px !important;\n  }\n  .hamburger-container {\n    line-height: 58px;\n    height: 50px;\n    float: left;\n    padding: 0 10px;\n  }\n\n  .errLog-container {\n    display: inline-block;\n    position: absolute;\n    right: 150px;\n  }\n\n  .avatar-container {\n    height: 50px;\n    display: inline-block;\n    position: absolute;\n    right: 35px;\n  }\n  .avatar-wrapper {\n    cursor: pointer;\n    margin-top: 5px;\n    position: relative;\n  }\n  .user-avatar {\n    width: 40px;\n    height: 40px;\n    border-radius: 10px;\n  }\n\n  .el-icon-caret-bottom {\n    position: absolute;\n    right: -20px;\n    top: 25px;\n    font-size: 12px;\n  }\n\n</style>\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/layout/Navbar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-menu',{staticClass:\"navbar\",attrs:{\"mode\":\"horizontal\"}},[_c('el-submenu',{attrs:{\"index\":\"Elements\"}},[_c('template',{slot:\"title\"},[_vm._v(\"热点绘制\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"Hotspot\"},on:{\"click\":_vm.drawHotspot}},[_vm._v(\"跳转热点\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"imageHotspot\"},on:{\"click\":_vm.drawImageHotspot}},[_vm._v(\"图像热点\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"imageHotspot\"},on:{\"click\":_vm.drawVideoHotspot}},[_vm._v(\"视频热点\")])],2),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"delete\"},on:{\"click\":_vm.deleteHotSpot}},[_vm._v(\"删除热点\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"save\"},on:{\"click\":_vm.saveInformation}},[_vm._v(\"保存场景\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"output\"},on:{\"click\":_vm.createXmlString}},[_vm._v(\"发布\")]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"display\":\"absolute\",\"right\":\"-600px\"},attrs:{\"index\":\"uerInfo\"}},[_vm._v(_vm._s(_vm.userName))])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-89563d00\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/layout/Navbar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-89563d00\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Navbar.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Navbar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Navbar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-89563d00\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Navbar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-89563d00\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/layout/Navbar.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div>\r\n        <template v-for=\"item in routes\">\r\n            <router-link v-if=\"!item.hidden&&item.noDropdown&&item.children.length>0\" :to=\"item.path+'/'+item.children[0].path\">\r\n                <el-menu-item :index=\"item.path+'/'+item.children[0].path\">\r\n                    <wscn-icon-svg v-if='item.icon' :icon-class=\"item.icon\" /> {{item.children[0].name}}\r\n                </el-menu-item>\r\n            </router-link>\r\n            <el-submenu :index=\"item.name\" v-if=\"!item.noDropdown&&!item.hidden\">\r\n                <template slot=\"title\">\r\n                    <wscn-icon-svg v-if='item.icon' :icon-class=\"item.icon\" /> {{item.name}}\r\n                </template>\r\n                <template v-for=\"child in item.children\" v-if='!child.hidden'>\r\n                    <sidebar-item class='menu-indent' v-if='child.children&&child.children.length>0' :routes='[child]'> </sidebar-item>\r\n                    <router-link v-else class=\"menu-indent\" :to=\"item.path+'/'+child.path\">\r\n                        <el-menu-item :index=\"item.path+'/'+child.path\">\r\n                            {{child.name}}\r\n                        </el-menu-item>\r\n                    </router-link>\r\n                </template>\r\n            </el-submenu>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n      name: 'SidebarItem',\r\n      props: {\r\n        routes: {\r\n          type: Array\r\n        }\r\n      }\r\n    }\r\n</script>\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n    .wscn-icon {\r\n        margin-right: 10px;\r\n    }\r\n    .hideSidebar .menu-indent{\r\n        display: block;\r\n        text-indent: 10px;\r\n    }\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/layout/SidebarItem.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._l((_vm.routes),function(item){return [(!item.hidden&&item.noDropdown&&item.children.length>0)?_c('router-link',{attrs:{\"to\":item.path+'/'+item.children[0].path}},[_c('el-menu-item',{attrs:{\"index\":item.path+'/'+item.children[0].path}},[(item.icon)?_c('wscn-icon-svg',{attrs:{\"icon-class\":item.icon}}):_vm._e(),_vm._v(\" \"+_vm._s(item.children[0].name)+\"\\n            \")],1)],1):_vm._e(),_vm._v(\" \"),(!item.noDropdown&&!item.hidden)?_c('el-submenu',{attrs:{\"index\":item.name}},[_c('template',{slot:\"title\"},[(item.icon)?_c('wscn-icon-svg',{attrs:{\"icon-class\":item.icon}}):_vm._e(),_vm._v(\" \"+_vm._s(item.name)+\"\\n            \")],1),_vm._v(\" \"),_vm._l((item.children),function(child){return (!child.hidden)?[(child.children&&child.children.length>0)?_c('sidebar-item',{staticClass:\"menu-indent\",attrs:{\"routes\":[child]}}):_c('router-link',{staticClass:\"menu-indent\",attrs:{\"to\":item.path+'/'+child.path}},[_c('el-menu-item',{attrs:{\"index\":item.path+'/'+child.path}},[_vm._v(\"\\n                        \"+_vm._s(child.name)+\"\\n                    \")])],1)]:_vm._e()})],2):_vm._e()]})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-57085023\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/layout/SidebarItem.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-57085023\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SidebarItem.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SidebarItem.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SidebarItem.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-57085023\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SidebarItem.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-57085023\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/layout/SidebarItem.vue\n// module id = null\n// module chunks = ","<template xmlns:v-bind=\"http://www.w3.org/1999/xhtml\">\n    <el-menu mode=\"vertical\"  :default-active=\"$route.path\">\n        <div class=\"sidelogo\">\n          <span><i class=\"el-icon-setting\"></i></span>\n          <span class=\"sidelogotxt\">&nbsp;&nbsp;全景编辑</span>\n        </div>\n        <!--<el-tabs type=\"border-card\" v-model=\"activeName\">-->\n        <el-tabs type=\"border-card\">\n            <!--<el-tab-pane label=\"新建项目\" name=\"user\">-->\n                <!--<el-form label-position=\"left\" label-width=\"100px\">-->\n                    <!--<div class=\"sideItem\">-->\n                        <!--<el-form-item label=\"项目名称\">-->\n                            <!--<el-input size=\"small\" v-model=\"shortName\"></el-input>-->\n                        <!--</el-form-item>-->\n                        <!--<el-form-item label=\"地址\">-->\n                            <!--<el-input size=\"small\" v-model=\"address\"></el-input>-->\n                        <!--</el-form-item>-->\n                        <!--<el-form-item label=\"经度\">-->\n                            <!--<el-input size=\"small\" v-model=\"longitude\"></el-input>-->\n                        <!--</el-form-item>-->\n                        <!--<el-form-item label=\"纬度\">-->\n                            <!--<el-input size=\"small\" v-model=\"latitude\"></el-input>-->\n                        <!--</el-form-item>-->\n                        <!--<el-form-item label=\"补充说明\">-->\n                            <!--<el-input type=\"textarea\" v-model=\"info\"></el-input>-->\n                        <!--</el-form-item>-->\n                        <!--<div style=\"text-align:center\">-->\n                            <!--<el-button type=\"primary\" @click=\"sendProject\">确定</el-button>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                <!--</el-form>-->\n            <!--</el-tab-pane>-->\n\n          <el-button type=\"primary\" @click=\"dialogFormVisible = true\" style=\"width:266px\">\n            添加场景<i class=\"el-icon-plus\"></i>\n          </el-button>\n          <el-dialog title=\"全景图片:\" :visible.sync=\"dialogFormVisible\">\n            <el-form>\n              <el-form-item label=\"上传\" :label-width=\"formLabelWidth\">\n                <el-upload\n                  class=\"upload-panorama1\"\n                  v-bind:action=ajaxUrl1\n                  :on-remove=\"panoHandleRemove\"\n                  :before-remove=\"beforeRemove\"\n                  :onError=\"uploadError\"\n                  :onSuccess=\"panoUploadSuccess\">\n                  <el-button size=\"small\" type=\"primary\">请上传全景照片</el-button>\n                </el-upload>\n              </el-form-item>\n              <el-form-item label=\"类型\" :label-width=\"formLabelWidth\">\n                <el-select size=\"small\" v-model=\"imgType\">\n                  <el-option label=\"Auto\" value=\"Auto\"></el-option>\n                  <el-option label=\"Equirectangular\" value=\"Equirectangular\"></el-option>\n                  <el-option label=\"Cube Faces\" value=\"Cube Faces\"></el-option>\n                  <el-option label=\"Cylindrical\" value=\"Cylindrical\"></el-option>\n                  <el-option label=\"Flat\" value=\"Flat\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"文件名\" :label-width=\"formLabelWidth\">\n                <!--<el-input v-model=\"fileName\" autocomplete=\"off\"></el-input>-->\n                <el-input size=\"small\" id=\"image\" v-model=\"fileName\" :disabled=\"true\" style=\"width:200px\"></el-input>\n              </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n              <el-button type=\"primary\" @click=\"dialogFormVisible = false\">确 定</el-button>\n            </div>\n          </el-dialog>\n\n\n          <!--被注释的场景，热点参数，热点管理三个tab-->\n          <div>\n            <!--<el-tab-pane label=\"场景\" name=\"scene\">-->\n              <!--<el-form label-position=\"left\" label-width=\"100px\">-->\n                <!--<div class=\"sideItem\">-->\n                  <!--<div class=\"sidetitle\">全景图片:</div>-->\n                  <!--<el-form-item label=\"上传\">-->\n                    <!--<el-upload-->\n                      <!--class=\"upload-panorama1\"-->\n                      <!--v-bind:action=ajaxUrl1-->\n                      <!--:on-remove=\"panoHandleRemove\"-->\n                      <!--:before-remove=\"beforeRemove\"-->\n                      <!--:onError=\"uploadError\"-->\n                      <!--:onSuccess=\"panoUploadSuccess\">-->\n                      <!--<el-button size=\"small\" type=\"primary\">请上传全景照片</el-button>-->\n                    <!--</el-upload>-->\n                  <!--</el-form-item>-->\n                  <!--<el-form-item label=\"类型\">-->\n                    <!--<el-select size=\"small\" v-model=\"imgType\">-->\n                      <!--<el-option label=\"Auto\" value=\"Auto\"></el-option>-->\n                      <!--<el-option label=\"Equirectangular\" value=\"Equirectangular\"></el-option>-->\n                      <!--<el-option label=\"Cube Faces\" value=\"Cube Faces\"></el-option>-->\n                      <!--<el-option label=\"Cylindrical\" value=\"Cylindrical\"></el-option>-->\n                      <!--<el-option label=\"Flat\" value=\"Flat\"></el-option>-->\n                    <!--</el-select>-->\n                  <!--</el-form-item>-->\n                  <!--<el-form-item label=\"文件名\">-->\n                    <!--<el-input size=\"small\" id=\"image\" v-model=\"fileName\" :disabled=\"true\"></el-input>-->\n                  <!--</el-form-item>-->\n                <!--</div>-->\n                <!--&lt;!&ndash;在场景预览中每个图片上绑定事件，点击图片获取图片的src,将src传到state.imgFile中。&ndash;&gt;-->\n                <!--<div class=\"sideItem\">-->\n                  <!--<div class=\"sidetitle\">场景预览:</div>-->\n                  <!--<el-form label-position=\"left\" label-width=\"150px\">-->\n                    <!--<div class=\"sideItem\">-->\n                      <!--<ul style=\"padding: 0\">-->\n                        <!--<li v-for=\"item in fileUrlArr\" @click=\"changeImgFile\">-->\n                          <!--<img v-bind:src=item.fileUrl  v-bind:title=item.fileName width=\"270px\" height=\"135px\">-->\n                        <!--</li>-->\n                      <!--</ul>-->\n                    <!--</div>-->\n                  <!--</el-form>-->\n                <!--</div>-->\n\n              <!--</el-form>-->\n\n            <!--</el-tab-pane>-->\n          </div>\n          <div>\n            <!--2018.5.22新增-->\n            <!--<el-tab-pane label=\"热点参数\" name=\"hotSpot\">-->\n              <!--<el-form label-position=\"left\" label-width=\"100px\">-->\n                <!--<div class=\"sideItem\">-->\n                  <!--<div v-show=\"this.$store.state.test.isImgHotSpot\">-->\n                    <!--<div class=\"sidetitle\">热点类型:</div>-->\n                    <!--<el-form-item label=\"热点类型\">-->\n                      <!--&lt;!&ndash;<div v-show=\"\"></div>&ndash;&gt;-->\n                      <!--<el-select size=\"small\" v-model=\"value\" clearable @change=\"saveSelectHotType(value)\"-->\n                                 <!--:placeholder=\"hotSpotsType?hotSpotsType:'请选择热点类型'\">-->\n                        <!--<el-option-->\n                          <!--v-for=\"item in hotSpotsTypes\"-->\n                          <!--:key=\"item.value\"-->\n                          <!--:label=\"item.label\"-->\n                          <!--:value=\"item.value\">-->\n                        <!--</el-option>-->\n                      <!--</el-select>-->\n\n                    <!--</el-form-item>-->\n                    <!--<div v-show=\"this.hotSpotsType==='URL热点'\">-->\n                      <!--<el-form-item label=\"跳转链接\">-->\n                        <!--<el-input v-bind:value=\"hotUrl\" ref=\"input4\" clearable @blur.prevent=\"saveInputHotUrl()\"-->\n                                  <!--placeholder=\"确认后点击确定\"></el-input>-->\n                        <!--&lt;!&ndash;<el-input placeholder=\"确认后点击确定\" v-model='hotUrl' size=\"small\"></el-input>&ndash;&gt;-->\n                      <!--</el-form-item>-->\n                      <!--<div style=\"text-align:center\">-->\n                        <!--<el-button type=\"primary\" @click=\"saveUrlHotSpot\">确定</el-button>-->\n                      <!--</div>-->\n                    <!--</div>-->\n                    <!--<div v-show=\"this.hotSpotsType==='图像热点'\">-->\n                      <!--<el-form-item label=\"已上传图片\">-->\n\n                        <!--<el-select size=\"small\" v-model=\"value1\" clearable @change=\"saveSelectUploadPicture(value1)\"-->\n                                   <!--:placeholder=\"hotSpotsImg?hotSpotsImg:'请选择已上传图片'\">-->\n                          <!--<el-option-->\n                            <!--v-for=\"item in this.$store.state.test.hotSpotsImgs\"-->\n                            <!--:key=\"item.value\"-->\n                            <!--:label=\"item.label\"-->\n                            <!--:value=\"item.value\">-->\n                          <!--</el-option>-->\n                        <!--</el-select>-->\n\n                      <!--</el-form-item>-->\n                      <!--<el-form-item label=\"图片上传\">-->\n                        <!--<el-upload-->\n                          <!--class=\"upload-panorama1\"-->\n                          <!--v-bind:action=ajaxUrl2-->\n                          <!--:on-remove=\"imgHandleRemove\"-->\n                          <!--:before-remove=\"beforeRemove\"-->\n                          <!--:onError=\"uploadError\"-->\n                          <!--:onSuccess=\"imgUploadSuccess\">-->\n                          <!--<el-button size=\"small\" type=\"primary\">请上传热点图片</el-button>-->\n                        <!--</el-upload>-->\n                      <!--</el-form-item>-->\n                      <!--<div style=\"text-align:center\">-->\n                        <!--<el-button type=\"primary\" @click=\"saveImageHotSpot\">确定</el-button>-->\n                      <!--</div>-->\n                    <!--</div>-->\n                  <!--</div>-->\n                  <!--<div v-show=\"this.$store.state.test.isJumpHotSpot\">-->\n                    <!--<div class=\"sidetitle\">跳转热点:</div>-->\n                    <!--<el-form-item label=\"目标场景\">-->\n\n                      <!--<el-select size=\"small\" v-model=\"value2\" clearable @change=\"saveSelectJumpScene(value2)\"-->\n                                 <!--:placeholder=\"hotTarget?hotTarget:'请选择要跳转的场景'\">-->\n                        <!--<el-option-->\n                          <!--v-for=\"item in targetOptions\"-->\n                          <!--:key=\"item.value\"-->\n                          <!--:label=\"item.label\"-->\n                          <!--:value=\"item.value\">-->\n                        <!--</el-option>-->\n                      <!--</el-select>-->\n\n                    <!--</el-form-item>-->\n                    <!--<el-form-item label=\"场景说明\">-->\n                      <!--<el-input v-bind:value=\"hotIntroduction\" ref=\"input3\" clearable @blur.prevent=\"saveInputHotIntroduction()\"-->\n                                <!--placeholder=\"确认后点击确定\"></el-input>-->\n                      <!--&lt;!&ndash;<el-input placeholder=\"确认后点击确定\" v-model='hotIntroduction' size=\"small\"></el-input>&ndash;&gt;-->\n                    <!--</el-form-item>-->\n                    <!--<div style=\"text-align:center\">-->\n                      <!--<el-button type=\"primary\" @click=\"saveJumpHotSpot\">确定</el-button>-->\n                    <!--</div>-->\n                  <!--</div>-->\n\n                <!--</div>-->\n              <!--</el-form>-->\n            <!--</el-tab-pane>-->\n          </div>\n          <div>\n            <!--<el-tab-pane label=\"热点管理\" name=\"admin\">-->\n\n            <!--<el-form label-position=\"left\" label-width=\"100px\">-->\n            <!--<div class=\"sideItem\">-->\n            <!--<div v-show=\"this.$store.state.test.isImgHotSpot\">-->\n            <!--<div class=\"sidetitle\">热点类型:</div>-->\n            <!--<el-form-item label=\"热点类型\">-->\n            <!--&lt;!&ndash;<div v-show=\"\"></div>&ndash;&gt;-->\n            <!--<el-select size=\"small\" v-model=\"value\" clearable @change=\"saveSelectHotType(value)\"-->\n            <!--:placeholder=\"hotSpotsType?hotSpotsType:'请选择热点类型'\">-->\n            <!--<el-option-->\n            <!--v-for=\"item in hotSpotsTypes\"-->\n            <!--:key=\"item.value\"-->\n            <!--:label=\"item.label\"-->\n            <!--:value=\"item.value\">-->\n            <!--</el-option>-->\n            <!--</el-select>-->\n\n            <!--</el-form-item>-->\n            <!--<div v-show=\"this.hotSpotsType==='URL热点'\">-->\n            <!--<el-form-item label=\"跳转链接\">-->\n            <!--<el-input v-bind:value=\"hotUrl\" ref=\"input4\" clearable @blur.prevent=\"saveInputHotUrl()\"-->\n            <!--placeholder=\"确认后点击确定\"></el-input>-->\n            <!--&lt;!&ndash;<el-input placeholder=\"确认后点击确定\" v-model='hotUrl' size=\"small\"></el-input>&ndash;&gt;-->\n            <!--</el-form-item>-->\n            <!--<div style=\"text-align:center\">-->\n            <!--<el-button type=\"primary\" @click=\"saveUrlHotSpot\">确定</el-button>-->\n            <!--</div>-->\n            <!--</div>-->\n            <!--<div v-show=\"this.hotSpotsType==='图像热点'\">-->\n            <!--<el-form-item label=\"已上传图片\">-->\n\n            <!--<el-select size=\"small\" v-model=\"value1\" clearable @change=\"saveSelectUploadPicture(value1)\"-->\n            <!--:placeholder=\"hotSpotsImg?hotSpotsImg:'请选择已上传图片'\">-->\n            <!--<el-option-->\n            <!--v-for=\"item in this.$store.state.test.hotSpotsImgs\"-->\n            <!--:key=\"item.value\"-->\n            <!--:label=\"item.label\"-->\n            <!--:value=\"item.value\">-->\n            <!--</el-option>-->\n            <!--</el-select>-->\n\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"图片上传\">-->\n            <!--<el-upload-->\n            <!--class=\"upload-panorama1\"-->\n            <!--v-bind:action=ajaxUrl2-->\n            <!--:on-remove=\"imgHandleRemove\"-->\n            <!--:before-remove=\"beforeRemove\"-->\n            <!--:onError=\"uploadError\"-->\n            <!--:onSuccess=\"imgUploadSuccess\">-->\n            <!--<el-button size=\"small\" type=\"primary\">请上传热点图片</el-button>-->\n            <!--</el-upload>-->\n            <!--</el-form-item>-->\n            <!--<div style=\"text-align:center\">-->\n            <!--<el-button type=\"primary\" @click=\"saveImageHotSpot\">确定</el-button>-->\n            <!--</div>-->\n            <!--</div>-->\n            <!--</div>-->\n            <!--<div v-show=\"this.$store.state.test.isJumpHotSpot\">-->\n            <!--<div class=\"sidetitle\">跳转热点:</div>-->\n            <!--<el-form-item label=\"目标场景\">-->\n\n            <!--<el-select size=\"small\" v-model=\"value2\" clearable @change=\"saveSelectJumpScene(value2)\"-->\n            <!--:placeholder=\"hotTarget?hotTarget:'请选择要跳转的场景'\">-->\n            <!--<el-option-->\n            <!--v-for=\"item in targetOptions\"-->\n            <!--:key=\"item.value\"-->\n            <!--:label=\"item.label\"-->\n            <!--:value=\"item.value\">-->\n            <!--</el-option>-->\n            <!--</el-select>-->\n\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"场景说明\">-->\n            <!--<el-input v-bind:value=\"hotIntroduction\" ref=\"input3\" clearable @blur.prevent=\"saveInputHotIntroduction()\"-->\n            <!--placeholder=\"确认后点击确定\"></el-input>-->\n            <!--&lt;!&ndash;<el-input placeholder=\"确认后点击确定\" v-model='hotIntroduction' size=\"small\"></el-input>&ndash;&gt;-->\n            <!--</el-form-item>-->\n            <!--<div style=\"text-align:center\">-->\n            <!--<el-button type=\"primary\" @click=\"saveJumpHotSpot\">确定</el-button>-->\n            <!--</div>-->\n            <!--</div>-->\n\n            <!--</div>-->\n            <!--</el-form>-->\n\n            <!--<div class=\"tree\">-->\n            <!--<div class=\"el-tree\">-->\n            <!--<div class=\"el-tree-node\" v-for=\"(item,index) in Tree\">-->\n            <!--&lt;!&ndash;节点内容&ndash;&gt;-->\n            <!--<div class=\"el-tree-node__content\" style=\"padding-left: 0px;\">-->\n\n            <!--<span @click.stop=\"expand\">-->\n            <!--<span v-if=\"expandicon===item.label\" class=\"el-tree-node__expand-icon expanded\"></span>-->\n            <!--<span v-else class=\"el-tree-node__expand-icon \"></span>-->\n            <!--</span>-->\n\n            <!--<span class=\"custom-tree-node\">-->\n            <!--&lt;!&ndash;场景信息&ndash;&gt;-->\n            <!--<span>{{item.label}}</span>-->\n            <!--<span>-->\n            <!--&lt;!&ndash;添加按钮&ndash;&gt;-->\n            <!--<i class=\"el-icon-search\"  @click.stop=\"newChangeImgFile(item)\"></i>-->\n            <!--<i class=\"el-icon-delete\"  @click.stop=\"deleteScene(item,index)\"></i>-->\n            <!--</span>-->\n            <!--</span>-->\n            <!--</div>-->\n            <!--<div v-if=\"expandicon===item.label\">-->\n            <!--&lt;!&ndash;子节点内容&ndash;&gt;-->\n            <!--<div class=\"el-tree-node__children\"  style=\"display: block;\">-->\n            <!--&lt;!&ndash;每个子节点内容&ndash;&gt;-->\n            <!--<div class=\"el-tree-node\" v-for=\"(child,childindex) in Tree[index].children\">-->\n            <!--<div class=\"el-tree-node__content\" style=\"padding-left: 16px;\">-->\n\n            <!--<span @click.stop=\"expand1\">-->\n            <!--<span v-if=\"expandicon1===child.label\" class=\"el-tree-node__expand-icon expanded\"></span>-->\n            <!--<span v-else class=\"el-tree-node__expand-icon\"></span>-->\n            <!--</span>-->\n\n            <!--<span class=\"custom-tree-node\">-->\n            <!--&lt;!&ndash;热点类型信息&ndash;&gt;-->\n            <!--<span>{{child.label}}</span>-->\n            <!--<span>-->\n            <!--<i class=\"el-icon-plus\" @click.stop=\"\"></i>-->\n            <!--</span>-->\n            <!--</span>-->\n            <!--</div>-->\n\n            <!--<div v-if=\"expandicon1===child.label\">-->\n            <!--<div class=\"el-tree-node__children\" style=\"display: block;\">-->\n            <!--<div class=\"el-tree-node\" v-for=\"(child1,index1) in child.children\">-->\n            <!--<div class=\"el-tree-node__content\" style=\"padding-left: 32px;\" @click.stop=\"activeHotSpot(child1)\">-->\n\n            <!--<span @click.stop=\"expand2\">-->\n            <!--<span v-if=\"expandicon2===child1.label\" class=\"el-tree-node__expand-icon expanded\"></span>-->\n            <!--<span v-else class=\"el-tree-node__expand-icon\"></span>-->\n            <!--</span>-->\n\n            <!--<span class=\"custom-tree-node\">-->\n            <!--&lt;!&ndash;对应热点类型下的热点&ndash;&gt;-->\n            <!--<span>{{child1.label}}</span>-->\n            <!--<span>-->\n            <!--<i class=\"el-icon-delete\" @click.stop=\"newDeleteHotSpot(child1,index1)\"></i>-->\n            <!--</span>-->\n            <!--</span>-->\n            <!--</div>-->\n            <!--<div>-->\n\n            <!--<div v-if=\"expandicon2===child1.label\">-->\n            <!--<div class=\"el-tree-node__children\" style=\"display: block;\">-->\n            <!--<div class=\"el-tree-node\" v-for=\"child2 in child1.children\">-->\n            <!--<div class=\"el-tree-node__content\" style=\"padding-left: 48px;\">-->\n            <!--<span class=\"el-tree-node__expand-icon is-leaf\"></span>-->\n            <!--<span class=\"custom-tree-node\">-->\n            <!--<span v-show=\"child2.pid===4\">-->\n            <!--跳转场景：-->\n            <!--<template>-->\n            <!--<select @change=\"saveTreeJumpScene(child2)\"  v-model=\"child2.label\">-->\n            <!--<option disabled value=\"\">{{child2.label}}</option>-->\n            <!--<option v-for=\"targetItem in targetOptions\" :value=\"targetItem.value\" >-->\n            <!--{{targetItem.value}}-->\n            <!--</option>-->\n            <!--</select>-->\n            <!--</template>-->\n            <!--</span>-->\n            <!--<span v-show=\"child2.pid===5\">-->\n            <!--热点说明：<input v-bind:value=\"child2.label\" ref=\"input1\"-->\n            <!--@blur.prevent=\"saveTreeHotIntroduction(child2)\"/>-->\n            <!--</span>-->\n            <!--<span v-show=\"child2.pid===6\">-->\n            <!--已上传图片：-->\n            <!--<template>-->\n            <!--<select v-model=\"child2.label\" @change=\"saveTreeUploadPicture(child2)\">-->\n            <!--<option disabled value=\"\">{{child2.label}}</option>-->\n            <!--<option v-for=\"item in hotSpotsImgs\" :value=\"item.value\">-->\n            <!--{{item.value}}-->\n            <!--</option>-->\n            <!--</select>-->\n            <!--</template>-->\n            <!--</span>-->\n            <!--<span v-show=\"child2.pid===7\">-->\n            <!--跳转链接：<input v-bind:value=\"child2.label\" ref=\"input2\" @blur.prevent=\"saveTreeHotUrl(child2)\"/>-->\n            <!--</span>-->\n            <!--</span>-->\n            <!--</div>-->\n            <!--<div class=\"el-tree-node__children\" style=\"display: none;\"></div>-->\n            <!--</div>-->\n            <!--</div>-->\n            <!--</div>-->\n\n            <!--<div v-else>-->\n            <!--<div class=\"el-tree-node__children\"  style=\"display: none;\"></div>-->\n            <!--</div>-->\n\n            <!--</div>-->\n            <!--</div>-->\n            <!--</div>-->\n            <!--</div>-->\n\n            <!--<div v-else>-->\n            <!--<div class=\"el-tree-node__children\"  style=\"display: none;\"></div>-->\n            <!--</div>-->\n\n            <!--</div>-->\n            <!--</div>-->\n\n            <!--</div>-->\n\n            <!--<div v-else>-->\n            <!--<div class=\"el-tree-node__children\"  style=\"display: none;\"></div>-->\n            <!--</div>-->\n\n            <!--</div>-->\n            <!--</div>-->\n            <!--</div>-->\n\n            <!--<el-form label-position=\"left\" label-width=\"100px\">-->\n            <!--&lt;!&ndash;在场景预览中每个图片上绑定事件，点击图片获取图片的src,将src传到state.imgFile中。&ndash;&gt;-->\n            <!--<div class=\"sideItem\">-->\n            <!--<div class=\"sidetitle\">场景预览:</div>-->\n            <!--<el-form label-position=\"left\" label-width=\"150px\">-->\n            <!--<div class=\"sideItem\">-->\n            <!--<ul style=\"padding: 0\">-->\n            <!--<li v-for=\"item in fileUrlArr\" @click=\"changeImgFile\">-->\n            <!--<img v-bind:src=item.fileUrl  v-bind:title=item.fileName width=\"270px\" height=\"135px\">-->\n            <!--</li>-->\n            <!--</ul>-->\n            <!--</div>-->\n            <!--</el-form>-->\n            <!--</div>-->\n            <!--</el-form>-->\n\n            <!--</el-tab-pane>-->\n          </div>\n\n\n          <el-form label-position=\"left\" label-width=\"100px\">\n            <div class=\"sideItem\">\n              <div v-show=\"this.$store.state.test.isImgHotSpot\">\n                <div class=\"sidetitle\">热点类型:</div>\n                <el-form-item label=\"热点类型\">\n                  <!--<div v-show=\"\"></div>-->\n                  <el-select size=\"small\" v-model=\"value\" clearable @change=\"saveSelectHotType(value)\"\n                             :placeholder=\"hotSpotsType?hotSpotsType:'请选择热点类型'\">\n                    <el-option\n                      v-for=\"item in hotSpotsTypes\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                    </el-option>\n                  </el-select>\n\n                </el-form-item>\n                <div v-show=\"this.hotSpotsType==='URL热点'\">\n                  <el-form-item label=\"跳转链接\">\n                    <el-input v-bind:value=\"hotUrl\" ref=\"input4\" clearable @blur.prevent=\"saveInputHotUrl()\"\n                              placeholder=\"确认后点击确定\"></el-input>\n                    <!--<el-input placeholder=\"确认后点击确定\" v-model='hotUrl' size=\"small\"></el-input>-->\n                  </el-form-item>\n                  <div style=\"text-align:center\">\n                    <el-button type=\"primary\" @click=\"saveUrlHotSpot\">确定</el-button>\n                  </div>\n                </div>\n                <div v-show=\"this.hotSpotsType==='图像热点'\">\n                  <el-form-item label=\"已上传图片\">\n\n                    <el-select size=\"small\" v-model=\"value1\" clearable @change=\"saveSelectUploadPicture(value1)\"\n                               :placeholder=\"hotSpotsImg?hotSpotsImg:'请选择已上传图片'\">\n                      <el-option\n                        v-for=\"item in this.$store.state.test.hotSpotsImgs\"\n                        :key=\"item.value\"\n                        :label=\"item.label\"\n                        :value=\"item.value\">\n                      </el-option>\n                    </el-select>\n\n                  </el-form-item>\n                  <el-form-item label=\"图片上传\">\n                    <el-upload\n                      class=\"upload-panorama1\"\n                      v-bind:action=ajaxUrl2\n                      :on-remove=\"imgHandleRemove\"\n                      :before-remove=\"beforeRemove\"\n                      :onError=\"uploadError\"\n                      :onSuccess=\"imgUploadSuccess\">\n                      <el-button size=\"small\" type=\"primary\">请上传热点图片</el-button>\n                    </el-upload>\n                  </el-form-item>\n                  <div style=\"text-align:center\">\n                    <el-button type=\"primary\" @click=\"saveImageHotSpot\">确定</el-button>\n                  </div>\n                </div>\n              </div>\n              <div v-show=\"this.$store.state.test.isJumpHotSpot\">\n                <div class=\"sidetitle\">跳转热点:</div>\n                <el-form-item label=\"目标场景\">\n\n                  <el-select size=\"small\" v-model=\"value2\" clearable @change=\"saveSelectJumpScene(value2)\"\n                             :placeholder=\"hotTarget?hotTarget:'请选择要跳转的场景'\">\n                    <el-option\n                      v-for=\"item in targetOptions\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                    </el-option>\n                  </el-select>\n\n                </el-form-item>\n                <el-form-item label=\"场景说明\">\n                  <el-input v-bind:value=\"hotIntroduction\" ref=\"input3\" clearable @blur.prevent=\"saveInputHotIntroduction()\"\n                            placeholder=\"确认后点击确定\"></el-input>\n                  <!--<el-input placeholder=\"确认后点击确定\" v-model='hotIntroduction' size=\"small\"></el-input>-->\n                </el-form-item>\n                <div style=\"text-align:center\">\n                  <el-button type=\"primary\" @click=\"saveJumpHotSpot\">确定</el-button>\n                </div>\n              </div>\n\n              <div v-show=\"this.$store.state.test.isVideoHotSpot\">\n\n                <div class=\"sidetitle\">热点类型:</div>\n                <el-form-item label=\"上传视频类型\">\n                  <el-select size=\"small\" v-model=\"value\" clearable @change=\"saveSelectHotType(value)\"\n                             :placeholder=\"hotSpotsType?hotSpotsType:'请选择视频类型'\">\n                    <el-option\n                      v-for=\"item in hotSpotsTypes\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n\n                <div class=\"transfrom\">\n                  <label>水平平移：</label>\n                  <!--<input type=\"text\" v-model=\"VideoTransformX\" id=\"txtNumberX\"/>-->\n                  <!--<input type=\"button\" value=\"▲\" class=\"up\" @click.stop=\"addTransformX()\" />-->\n                  <!--<input class=\"down\" type=\"button\" @click.stop=\"removeTransformX()\" value=\"▼\" />-->\n\n                  <!--<select :value=\"value\" @input=\"value = $event.target.value\" id=\"txtNumberX\">-->\n\n                  <!--<select v-model=\"valueX\" id=\"txtNumberX\">-->\n                    <!--<option  v-for=\"item in optionsX\"-->\n                             <!--:key=\"item.value\"-->\n                             <!--:label=\"item.label\"-->\n                             <!--:value=\"item.value\"></option>-->\n                  <!--</select>-->\n                  <el-select v-model=\"valueX\" @change=\"selectGetX(valueX)\" placeholder=\"请选择\" id=\"txtNumberX\">\n                    <el-option\n                      v-for=\"item in optionsX\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                    </el-option>\n                  </el-select>\n                  <i class=\"el-icon-arrow-up up\"  @click.stop=\"addTransformX()\"></i>\n                  <i class=\"el-icon-arrow-down down\"  @click.stop=\"removeTransformX()\"></i>\n                </div>\n                <div class=\"transfrom\">\n                  <label>竖直平移：</label>\n                  <el-select v-model=\"valueY\" @change=\"selectGetY(valueY)\" placeholder=\"请选择\" id=\"txtNumberY\">\n                    <el-option\n                      v-for=\"item in optionsY\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                    </el-option>\n                  </el-select>\n                  <i class=\"el-icon-arrow-up up\"  @click.stop=\"addTransformY()\"></i>\n                  <i class=\"el-icon-arrow-down down\"  @click.stop=\"removeTransformY()\"></i>\n                </div>\n                <div class=\"transfrom\">\n                  <label>旋转：</label>\n                  <el-select v-model=\"valueR\" @change=\"selectGetR(valueR)\" placeholder=\"请选择\" id=\"txtNumberRR\">\n                    <el-option\n                      v-for=\"item in optionsR\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                    </el-option>\n                  </el-select>\n                  <i class=\"el-icon-arrow-up up\"  @click.stop=\"addRotate()\"></i>\n                  <i class=\"el-icon-arrow-down down\"  @click.stop=\"removeRotate()\"></i>\n                </div>\n                <div class=\"transfrom\">\n                  <label>放缩：</label>\n                  <el-select v-model=\"valueS\" @change=\"selectGetS(valueS)\" placeholder=\"请选择\" id=\"txtNumberSS\">\n                    <el-option\n                      v-for=\"item in optionsS\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                    </el-option>\n                  </el-select>\n                  <i class=\"el-icon-arrow-up up\"  @click.stop=\"addScale()\"></i>\n                  <i class=\"el-icon-arrow-down down\"  @click.stop=\"removeScale()\"></i>\n                </div>\n                <div class=\"transfrom\">\n                  <label>旋转角度：</label>\n                  <input type=\"text\" v-model=\"VideoRotate\" id=\"txtNumberR\" :disabled=\"true\"/>\n                </div>\n                <div class=\"transfrom\">\n                  <label>放缩倍数：</label>\n                  <input type=\"text\" v-model=\"VideoScale\" id=\"txtNumberS\" :disabled=\"true\"/>\n                </div>\n\n\n                <div v-show=\"this.hotSpotsType==='URL热点'\">\n                  <el-form-item label=\"视频链接\">\n                    <el-input v-bind:value=\"hotUrl\" ref=\"input4\" clearable @blur.prevent=\"saveInputHotUrl()\"\n                              placeholder=\"确认后点击确定\"></el-input>\n                    <!--<el-input placeholder=\"确认后点击确定\" v-model='hotUrl' size=\"small\"></el-input>-->\n                  </el-form-item>\n                  <div style=\"text-align:center\">\n                    <el-button type=\"primary\" @click=\"saveUrlHotSpot\">确定</el-button>\n                  </div>\n                </div>\n                <div v-show=\"this.hotSpotsType==='图像热点'\">\n                  <el-form-item label=\"本地视频\">\n\n                    <el-select size=\"small\" v-model=\"value1\" clearable @change=\"saveSelectUploadPicture(value1)\"\n                               :placeholder=\"hotSpotsImg?hotSpotsImg:'请选择已上传视频'\">\n                      <el-option\n                        v-for=\"item in this.$store.state.test.hotSpotsImgs\"\n                        :key=\"item.value\"\n                        :label=\"item.label\"\n                        :value=\"item.value\">\n                      </el-option>\n                    </el-select>\n\n                  </el-form-item>\n                  <el-form-item label=\"视频上传\">\n                    <el-upload\n                      class=\"upload-panorama1\"\n                      v-bind:action=ajaxUrl2\n                      :on-remove=\"imgHandleRemove\"\n                      :before-remove=\"beforeRemove\"\n                      :onError=\"uploadError\"\n                      :onSuccess=\"imgUploadSuccess\">\n                      <el-button size=\"small\" type=\"primary\">请上传相关视频</el-button>\n                    </el-upload>\n                  </el-form-item>\n                  <div style=\"text-align:center\">\n                    <el-button type=\"primary\" @click=\"\">确定</el-button>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </el-form>\n\n          <div class=\"tree\">\n            <div class=\"el-tree\">\n              <div class=\"el-tree-node\" v-for=\"(item,index) in Tree\">\n                <!--节点内容-->\n                <div class=\"el-tree-node__content\" style=\"padding-left: 0px;\">\n\n                      <span @click.stop=\"expand\">\n                        <span v-if=\"expandicon===item.label\" class=\"el-tree-node__expand-icon expanded\"></span>\n                        <span v-else class=\"el-tree-node__expand-icon \"></span>\n                      </span>\n\n                  <span class=\"custom-tree-node\">\n                        <!--场景信息-->\n                      <span>{{item.label}}</span>\n                      <span>\n                          <!--添加按钮-->\n                          <i class=\"el-icon-search\"  @click.stop=\"newChangeImgFile(item)\"></i>\n                          <i class=\"el-icon-delete\"  @click.stop=\"deleteScene(item,index)\"></i>\n                      </span>\n                    </span>\n                </div>\n                <div v-if=\"expandicon===item.label\">\n                  <!--子节点内容-->\n                  <div class=\"el-tree-node__children\"  style=\"display: block;\">\n                    <!--每个子节点内容-->\n                    <div class=\"el-tree-node\" v-for=\"(child,childindex) in Tree[index].children\">\n                      <div class=\"el-tree-node__content\" style=\"padding-left: 16px;\">\n\n                          <span @click.stop=\"expand1\">\n                            <span v-if=\"expandicon1===child.label\" class=\"el-tree-node__expand-icon expanded\"></span>\n                            <span v-else class=\"el-tree-node__expand-icon\"></span>\n                          </span>\n\n                        <span class=\"custom-tree-node\">\n                            <!--热点类型信息-->\n                          <span>{{child.label}}</span>\n                            <span>\n                              <i class=\"el-icon-plus\" @click.stop=\"drawHotspot(child)\"></i>\n                            </span>\n                          </span>\n                      </div>\n\n                      <div v-if=\"expandicon1===child.label\">\n                        <div class=\"el-tree-node__children\" style=\"display: block;\">\n                          <div class=\"el-tree-node\" v-for=\"(child1,index1) in child.children\">\n                            <div class=\"el-tree-node__content\" style=\"padding-left: 32px;\" @click.stop=\"activeHotSpot(child1)\">\n\n                              <span @click.stop=\"expand2\">\n                                <span v-if=\"expandicon2===child1.label\" class=\"el-tree-node__expand-icon expanded\"></span>\n                                <span v-else class=\"el-tree-node__expand-icon\"></span>\n                              </span>\n\n                              <span class=\"custom-tree-node\">\n                                <!--对应热点类型下的热点-->\n                                <span>{{child1.label}}</span>\n                                  <span>\n                                    <i class=\"el-icon-delete\" @click.stop=\"newDeleteHotSpot(child1,index1)\"></i>\n                                  </span>\n                              </span>\n                            </div>\n                            <div>\n\n                              <div v-if=\"expandicon2===child1.label\">\n                                <div class=\"el-tree-node__children\" style=\"display: block;\">\n                                  <div class=\"el-tree-node\" v-for=\"child2 in child1.children\">\n                                    <div class=\"el-tree-node__content\" style=\"padding-left: 48px;\">\n                                      <span class=\"el-tree-node__expand-icon is-leaf\"></span>\n                                      <span class=\"custom-tree-node\">\n                                  <span v-show=\"child2.pid===4\">\n                                        跳转场景：\n                                        <template>\n                                          <select @change=\"saveTreeJumpScene(child2)\"  v-model=\"child2.label\">\n                                           <option disabled value=\"\">{{child2.label}}</option>\n                                           <option v-for=\"targetItem in targetOptions\" :value=\"targetItem.value\" >\n                                             {{targetItem.value}}\n                                           </option>\n                                          </select>\n                                        </template>\n                                  </span>\n                                  <span v-show=\"child2.pid===5\">\n                                    热点说明：<input v-bind:value=\"child2.label\" ref=\"input1\"\n                                                @blur.prevent=\"saveTreeHotIntroduction(child2)\"/>\n                                  </span>\n                                  <span v-show=\"child2.pid===6\">\n                                        已上传图片：\n                                        <template>\n                                        <select v-model=\"child2.label\" @change=\"saveTreeUploadPicture(child2)\">\n                                        <option disabled value=\"\">{{child2.label}}</option>\n                                        <option v-for=\"item in hotSpotsImgs\" :value=\"item.value\">\n                                          {{item.value}}\n                                        </option>\n                                        </select>\n                                        </template>\n                                 </span>\n                                  <span v-show=\"child2.pid===7\">\n                                    跳转链接：<input v-bind:value=\"child2.label\" ref=\"input2\" @blur.prevent=\"saveTreeHotUrl(child2)\"/>\n                                  </span>\n                                  </span>\n                                    </div>\n                                    <div class=\"el-tree-node__children\" style=\"display: none;\"></div>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div v-else>\n                                <div class=\"el-tree-node__children\"  style=\"display: none;\"></div>\n                              </div>\n\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div v-else>\n                        <div class=\"el-tree-node__children\"  style=\"display: none;\"></div>\n                      </div>\n\n                    </div>\n                  </div>\n\n                </div>\n\n                <div v-else>\n                  <div class=\"el-tree-node__children\"  style=\"display: none;\"></div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <el-form label-position=\"left\" label-width=\"100px\">\n            <!--在场景预览中每个图片上绑定事件，点击图片获取图片的src,将src传到state.imgFile中。-->\n            <div class=\"sideItem\">\n              <div class=\"sidetitle\">场景预览:</div>\n              <el-form label-position=\"left\" label-width=\"150px\">\n                <div class=\"sideItem\">\n                  <ul style=\"padding: 0\">\n                    <img v-bind:src=\"imgFile.fileUrl\"  v-bind:title=\"imgFile.fileName\" width=\"270px\" height=\"135px\">\n                  </ul>\n                </div>\n              </el-form>\n            </div>\n          </el-form>\n\n\n          <div>\n            <!--<el-tab-pane label=\"用户数据\" name=\"user\">-->\n            <!--<el-form label-position=\"left\" label-width=\"100px\">-->\n            <!--<div class=\"sideItem\">-->\n            <!--<el-form-item label=\"Title\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Description\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Author\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Date\">-->\n            <!--<el-date-picker-->\n            <!--align=\"left\"-->\n            <!--v-model=\"dateVal\" type=\"date\"-->\n            <!--size=\"small\" placeholder=\"选择日期\" :picker-options=\"pickerOptions0\">-->\n            <!--</el-date-picker>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Corpright\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Source\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Information\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Comment\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Latitude\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Longitude\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--<el-form-item label=\"Tags\">-->\n            <!--<el-input size=\"small\"></el-input>-->\n            <!--</el-form-item>-->\n            <!--</div>-->\n            <!--</el-form>-->\n            <!--</el-tab-pane>-->\n          </div>\n\n        </el-tabs>\n    </el-menu>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import SidebarItem from './SidebarItem';\n    export default {\n      components: { SidebarItem },\n      computed: {\n        ...mapGetters([\n          'permission_routers'\n        ]),\n        //平移，旋转，放缩的倍率框\n        // valueX:{\n        //   get () {\n        //     return this.$store.state.test.valueX\n        //   },\n        //   set (valueX) {\n        //     this.$store.commit('updateValueX', valueX)\n        //   }\n        // },\n        // valueY:{\n        //   get () {\n        //     return this.$store.state.test.valueY\n        //   },\n        //   set (valueX) {\n        //     this.$store.commit('updateValueY', valueY)\n        //   }\n        // },\n        // valueR:{\n        //   get () {\n        //     return this.$store.state.test.valueR\n        //   },\n        //   set (valueX) {\n        //     this.$store.commit('updateValueR', valueR)\n        //   }\n        // },\n        // valueS:{\n        //   get () {\n        //     return this.$store.state.test.valueS\n        //   },\n        //   set (valueX) {\n        //     this.$store.commit('updateValueS', valueS)\n        //   }\n        // },\n        // VideoTransformX:{\n        //   get(){\n        //     if(Object.keys(this.$store.state.test.oldselected).length !== 0){\n        //       return this.$store.state.test.oldselected.client[0];\n        //     }\n        //     return '';\n        //   }\n        // },\n        // VideoTransformY:{\n        //   get(){\n        //     if(Object.keys(this.$store.state.test.oldselected).length !== 0){\n        //       return this.$store.state.test.oldselected.client[1];\n        //     }\n        //     return '';\n        //   }\n        // },\n        VideoRotate:{\n          get(){\n            return this.$store.state.test.videoRotate+\"°\";\n          }\n        },\n        VideoScale:{\n          get(){\n            return this.$store.state.test.videoScale;\n          }\n        },\n\n        //获得当前场景\n        Scene:{\n          get(){\n            for(let i = 0 ;i < this.$store.state.test.fileUrlArr.length ; i++){\n              if(this.$store.state.test.imgFile.fileName===this.$store.state.test.fileUrlArr[i].fileName){\n                return i;\n              }\n            }\n            return -1;\n          },\n          set(){}\n        },\n        //获得点击的热点的tempLocation\n        TempLocation:{\n          get(){\n            return this.$store.state.test.tempLocation;\n          },\n        },\n        //获得state里面的imgFIle\n        imgFile:{\n          get(){\n            return this.$store.state.test.imgFile;\n          }\n        },\n        Tree:{\n          get(){\n            //获得xml字符串中所有场景热点信息并存储为树形结构\n            let  tree = [];\n            for (let i = 0; i <this.$store.state.test.arr.length; i++) {\n              let  newobj = {\n                label:\"\",\n                children:[],\n              };\n              let newobj2 = {\n                label:\"跳转热点\",\n                children:[],\n              };\n              let newobj3 = {\n                children:[]\n              };\n\n              let  len = this.$store.state.test.arr[i].hotspot.length;\n              newobj.label=\"场景\"+(i+1);\n              newobj.pid=1;\n              for (let j = 0; j <len ; j++) {\n\n                newobj3 = {\n                  children:[]\n                };\n\n                let obj={};\n                obj.label=this.$store.state.test.arr[i].hotspot[j].url.replace(\"{\",\"\").replace(\"}\",\"\").replace('node', \"场景\");\n                //不同的热点参数给不同的pid来判断是哪个热点参数\n                obj.pid=4;\n                obj.children=[];\n                newobj3.children.push(obj);\n\n                obj.position=this.$store.state.test.arr[i].hotspot[j].position;\n\n                obj={};\n                obj.label=this.$store.state.test.arr[i].hotspot[j].title.replace(\"{\",\"\").replace(\"}\",\"\");\n                obj.pid=5;\n                obj.children=[];\n                newobj3.children.push(obj);\n\n                newobj3.label=\"跳转热点\"+(j+1);\n                newobj3.pid=3;\n\n                newobj2.children.push(newobj3);\n              }\n\n              newobj2.pid=2;\n              newobj.children.push(newobj2);\n\n              newobj2 = {\n                label:\"图像热点\",\n                children:[],\n              };\n\n              let len2 = this.$store.state.test.arr[i].polyhotspot.imageHotSpots.length;\n              for (let j = 0; j < len2; j++) {\n\n                newobj3 = {\n                  children:[]\n                };\n\n\n                let obj={};\n                let reg2 = /([^/]+)$/;\n                obj.label=this.$store.state.test.arr[i].polyhotspot.imageHotSpots[j].target.match(reg2)[1];\n                obj.pid=6;\n                obj.children=[];\n                newobj3.children.push(obj);\n\n                obj.position=this.$store.state.test.arr[i].polyhotspot.imageHotSpots[j].position;\n                obj.panAndTilt=this.$store.state.test.arr[i].polyhotspot.imageHotSpots[j].panAndTilt;\n\n                newobj3.label=\"图像热点\"+(j+1);\n                newobj3.pid=3;\n                newobj2.children.push(newobj3);\n              }\n\n              newobj2.pid=2;\n              newobj.children.push(newobj2);\n\n\n              newobj2 = {\n                label:\"URL热点\",\n                children:[],\n              };\n\n              let len3 = this.$store.state.test.arr[i].polyhotspot.urlHotSpots.length;\n              for (let j = 0; j < len3; j++) {\n\n                newobj3 = {\n                  children:[]\n                };\n\n                let obj={};\n                let reg2 = /([^/]+)$/;\n                obj.label=this.$store.state.test.arr[i].polyhotspot.urlHotSpots[j].url.match(reg2)[1];\n                obj.pid=7;\n                obj.children=[];\n                newobj3.children.push(obj);\n\n                obj.position=this.$store.state.test.arr[i].polyhotspot.urlHotSpots[j].position;\n                obj.panAndTilt=this.$store.state.test.arr[i].polyhotspot.urlHotSpots[j].panAndTilt;\n\n\n                newobj3.label=\"URL热点\"+(j+1);\n                newobj3.pid=3;\n                newobj2.children.push(newobj3);\n\n              }\n              newobj2.pid=2;\n              newobj.children.push(newobj2);\n\n              tree.push(newobj);\n            }\n\n            //根据数据的树状结构给每个层次赋予id值\n            let num = 0;\n            for (let i = 0; i <tree.length; i++) {\n              tree[i].id=(++num);\n            }\n            for (let i = 0; i <tree.length; i++) {\n              for (let j = 0; j <tree[i].children.length ; j++) {\n                tree[i].children[j].id=(++num);\n              }\n            }\n            for (let i = 0; i <tree.length; i++) {\n              for (let j = 0; j <tree[i].children.length ; j++) {\n                for (let k = 0; k <tree[i].children[j].children.length ; k++) {\n                  tree[i].children[j].children[k].id=(++num);\n                }\n              }\n            }\n            for (let i = 0; i <tree.length; i++) {\n              for (let j = 0; j <tree[i].children.length ; j++) {\n                for (let k = 0; k <tree[i].children[j].children.length ; k++) {\n                  for (let l = 0; l <tree[i].children[j].children[k].children.length ; l++) {\n                    tree[i].children[j].children[k].children[l].id=(++num);\n                  }\n                }\n              }\n            }\n\n            this.$store.commit('addMaxID', num);\n            return JSON.parse(JSON.stringify(tree));\n            // return JSON.parse(JSON.stringify(this.$store.state.test.tree));\n          },\n        },\n        fileName:{\n            get(){\n                return this.$store.state.test.imgFile.fileName;\n            }\n          },\n        //实现了双向绑定计算属性\n        imgType:{\n              get(){\n                  return this.$store.state.test.imgType;\n              },\n              set(value){\n                  this.$store.commit('saveimgType',value);\n              }\n          },\n        hotIntroduction:{\n          get(){\n\n            if(Object.keys(this.$store.state.test.tempLocation).length !== 0){\n              for (let i = 0; i < this.$store.state.test.jumpHotSpots.length ; i++) {\n                if(Math.round(this.$store.state.test.jumpHotSpots[i].position[0])===Math.round(this.$store.state.test.tempLocation.location[0])&&Math.round(this.$store.state.test.jumpHotSpots[i].position[1])===Math.round(this.$store.state.test.tempLocation.location[1])&&Math.round(this.$store.state.test.jumpHotSpots[i].position[2])===Math.round(this.$store.state.test.tempLocation.location[2])){\n                  return this.$store.state.test.jumpHotSpots[i].hotIntroduction;\n                }\n              }\n              return '';\n            }else{\n              return '';\n            }\n          },\n          set(){}\n        },\n        hotTarget:{\n          get(){\n            if (Object.keys(this.$store.state.test.tempLocation).length !== 0) {\n            for (let i = 0; i < this.$store.state.test.jumpHotSpots.length ; i++) {\n              if (Math.round(this.$store.state.test.jumpHotSpots[i].position[0])===Math.round(this.$store.state.test.tempLocation.location[0])&&Math.round(this.$store.state.test.jumpHotSpots[i].position[1])===Math.round(this.$store.state.test.tempLocation.location[1])&&Math.round(this.$store.state.test.jumpHotSpots[i].position[2])===Math.round(this.$store.state.test.tempLocation.location[2])) {\n                return this.$store.state.test.jumpHotSpots[i].hotTarget;\n                }\n              }\n              return '';\n            }else{\n              return '';\n            }\n          },\n          set(){}\n        },\n        hotSpotsType:{\n          get(){\n            //获取state中所有的热点，并判断是否是state中的热点\n            let hotSpotsType = \"\";\n            if (this.$store.state.test.selectHotType){\n              return this.$store.state.test.selectHotType;\n            } else if (Object.keys(this.$store.state.test.tempLocation).length !== 0) {\n              for (let i = 0; i < this.$store.state.test.urlHotSpots.length; i++) {\n                if (Math.round(this.$store.state.test.urlHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) ) {\n                  if (Math.round(this.$store.state.test.urlHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) ) {\n                    if (Math.round(this.$store.state.test.urlHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) ) {\n                      if (Math.round(this.$store.state.test.urlHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) ) {\n                        hotSpotsType = 'URL热点';\n                        return hotSpotsType;\n                      }\n                    }\n                  }\n                }\n              }\n              for (let i = 0; i < this.$store.state.test.imageHotSpots.length; i++) {\n                if (Math.round(this.$store.state.test.imageHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) ) {\n                  if (Math.round(this.$store.state.test.imageHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) ) {\n                    if (Math.round(this.$store.state.test.imageHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) ) {\n                      if (Math.round(this.$store.state.test.imageHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) ) {\n                        hotSpotsType = '图像热点';\n                        return hotSpotsType;\n                      }\n                    }\n                  }\n                }\n              }\n            } else{\n              return '';\n            }\n\n          },\n          set(){}\n        },\n        hotUrl:{\n          get: function () {\n\n            if (Object.keys(this.$store.state.test.tempLocation).length !== 0) {\n              for (let i = 0; i < this.$store.state.test.urlHotSpots.length; i++) {\n                if (Math.round(this.$store.state.test.urlHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[0].y) === Math.round(this.$store.state.test.tempLocation.location[0].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[0].z) === Math.round(this.$store.state.test.tempLocation.location[0].z)) {\n                  if (Math.round(this.$store.state.test.urlHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[1].y) === Math.round(this.$store.state.test.tempLocation.location[1].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[1].z) === Math.round(this.$store.state.test.tempLocation.location[1].z)) {\n                    if (Math.round(this.$store.state.test.urlHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[2].y) === Math.round(this.$store.state.test.tempLocation.location[2].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[2].z) === Math.round(this.$store.state.test.tempLocation.location[2].z)) {\n                      if (Math.round(this.$store.state.test.urlHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[3].y) === Math.round(this.$store.state.test.tempLocation.location[3].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[3].z) === Math.round(this.$store.state.test.tempLocation.location[3].z)) {\n                        return this.$store.state.test.urlHotSpots[i] ? this.$store.state.test.urlHotSpots[i].hotUrl : '';\n                      }\n                    }\n                  }\n                }\n              }\n              return '';\n            } else {\n              return '';\n            }\n          },\n          set(){}\n        },\n        hotSpotsImg:{\n          get(){\n            if (Object.keys(this.$store.state.test.tempLocation).length !== 0) {\n              for (let i = 0; i < this.$store.state.test.imageHotSpots.length; i++) {\n                if (Math.round(this.$store.state.test.imageHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[0].y) === Math.round(this.$store.state.test.tempLocation.location[0].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[0].z) === Math.round(this.$store.state.test.tempLocation.location[0].z)) {\n                  if (Math.round(this.$store.state.test.imageHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[1].y) === Math.round(this.$store.state.test.tempLocation.location[1].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[1].z) === Math.round(this.$store.state.test.tempLocation.location[1].z)) {\n                    if (Math.round(this.$store.state.test.imageHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[2].y) === Math.round(this.$store.state.test.tempLocation.location[2].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[2].z) === Math.round(this.$store.state.test.tempLocation.location[2].z)) {\n                      if (Math.round(this.$store.state.test.imageHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[3].y) === Math.round(this.$store.state.test.tempLocation.location[3].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[3].z) === Math.round(this.$store.state.test.tempLocation.location[3].z)) {\n                        return this.$store.state.test.imageHotSpots[i]?this.$store.state.test.imageHotSpots[i].hotImage:'';\n                      }\n                    }\n                  }\n                }\n              }\n              return '';\n            }else{\n              return '';\n            }\n          },\n          set(){}\n        },\n        // endAction:{\n        //     get(){\n        //         return this.$store.state.test.endAction;\n        //     },\n        //     set(value){\n        //         this.$store.commit('saveendAction',value);\n        //     }\n        // },\n        // level:{\n        //     get(){\n        //         return this.$store.state.test.level;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savelevel',value);\n        //     }\n        // },\n        // loop:{\n        //     get(){\n        //         return this.$store.state.test.loop;\n        //     },\n        //     set(value){\n        //         this.$store.commit('saveloop',value);\n        //     }\n        // },\n        // pitch:{\n        //     get(){\n        //         return this.$store.state.test.pitch;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savepitch',value);\n        //     }\n        // },\n        // roll:{\n        //     get(){\n        //         return this.$store.state.test.roll;\n        //     },\n        //     set(value){\n        //         this.$store.commit('saveroll',value);\n        //     }\n        // },\n        // pan:{\n        //     get(){\n        //         return this.$store.state.test.pan;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savepan',value);\n        //     }\n        // },\n        // tilt:{\n        //     get(){\n        //         return this.$store.state.test.tilt;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savetilt',value);\n        //     }\n        // },\n        // fov:{\n        //     get(){\n        //         return this.$store.state.test.fov;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savefov',value);\n        //     }\n        // },\n        // min:{\n        //     get(){\n        //         return this.$store.state.test.min;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savemin',value);\n        //     }\n        // },\n        // max:{\n        //     get(){\n        //         return this.$store.state.test.max;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savemax',value);\n        //     }\n        // },\n        // pannorth:{\n        //     get(){\n        //         return this.$store.state.test.pannorth;\n        //     },\n        //     set(value){\n        //         this.$store.commit('savepannorth',value);\n        //     }\n        // },\n        // external:{\n        //     get(){\n        //         return this.$store.state.test.external;\n        //     },\n        //     set(value){\n        //         this.$store.commit('saveexternal',value);\n        //     }\n        // },\n        // minFov:{\n        //     get(){\n        //         return this.$store.state.test.minFov;\n        //     },\n        //     set(value){\n        //         this.$store.commit('saveminFov',value);\n        //     }\n        // },\n        // showLimits:{\n        //     get(){\n        //         return this.$store.state.test.showLimits;\n        //     },\n        //     set(value){\n        //         this.$store.commit('saveshowLimits',value);\n        //     }\n        // },\n        //暂时用不到\n        dateVal:{\n            get(){\n                return this.$store.state.test.dateVal;\n            },\n            set(value){\n                this.$store.commit('savedateVal',value);\n            }\n        },\n        fileUrlArr:{\n          get(){\n              return this.$store.state.test.fileUrlArr;\n          }\n        },\n        //根据文件上传的数量来生成target的数目\n        targetOptions:{\n          get(){\n              let targetOptions=[{'value':'无','label':'无'}];\n              let fileSum=this.$store.state.test.fileUrlArr.length;\n              for(let i=0;i<fileSum;i++){\n                  let o={};\n                  o.value='场景'+(i+1);\n                  o.label='场景'+(i+1);\n                  targetOptions.push(o);\n              }\n              return targetOptions;\n          }\n        },\n        //显示哪一列\n        // activeName:{\n        //   get(){\n        //       let activeName=this.$store.state.test.activeName;\n        //       return activeName\n        //   },\n        //   set(){\n        //\n        //   }\n        //\n        // },\n        //上传全景照片的url\n        ajaxUrl1:{\n          get(){\n              let ajaxUrl1=this.$store.state.test.panoUploadUrl;\n              return ajaxUrl1+'?_token='+this.token+'&user='+this.createUserNo+'&summary=1';\n          }\n        },\n        ajaxUrl2:{\n          get(){\n              //这里上传贴图和上传全景图前面的路径相同，只是根据summary来判断\n              let ajaxUrl2=this.$store.state.test.panoUploadUrl;\n              return ajaxUrl2+'?_token='+this.token+'&user='+this.createUserNo+'&summary=2';\n          }\n        }\n\n      },\n      watch: {\n        //若点击其他热点则清空select选择框中的值\n        TempLocation: function () {\n          this.value = '';\n          this.value1 = '';\n          this.value2 = '';\n        }\n      },\n      methods:{\n        //下拉框选中事件\n        selectGetX: function(value){\n          this.Xvalue = value;\n        },\n        selectGetY: function(value){\n          this.Yvalue = value;\n        },\n        selectGetR: function(value){\n          this.Rvalue = value;\n        },\n        selectGetS: function(value){\n          this.Svalue = value;\n        },\n        //视频热点X轴方向的平移操作\n        addTransformX: function(){\n          console.log(this.Xvalue);\n          this.$store.commit('changeOldSelectedX',this.Xvalue);\n          // showControl.value = parseInt(showControl.value) + 1;\n          // this.$store.commit('changeOldSelectedX',showControl.value);\n        },\n        removeTransformX: function(){\n          this.$store.commit('changeOldSelectedX',this.Xvalue*(-1));\n          // let showControl = document.getElementById(\"txtNumberX\");\n          // showControl.value = parseInt(showControl.value) - 1;\n          // this.$store.commit('changeOldSelectedX',showControl.value);\n        },\n        //视频热点Y轴方向的平移操作\n        addTransformY: function(){\n          this.$store.commit('changeOldSelectedY',this.Yvalue*(-1));\n          // let showControl = document.getElementById(\"txtNumberY\");\n          // showControl.value = parseInt(showControl.value) + 1;\n          // this.$store.commit('changeOldSelectedY',showControl.value);\n        },\n        removeTransformY: function(){\n          this.$store.commit('changeOldSelectedY',this.Yvalue);\n          // let showControl = document.getElementById(\"txtNumberY\");\n          // showControl.value = parseInt(showControl.value) - 1;\n          // this.$store.commit('changeOldSelectedY',showControl.value);\n        },\n        //视频热点的旋转操作\n        addRotate: function(){\n          this.$store.commit('changeOldSelectedR',this.Rvalue);\n          // let showControl = document.getElementById(\"txtNumberR\");\n          // showControl.value = parseInt(showControl.value) + 45;\n          // this.$store.commit('changeOldSelectedR',showControl.value);\n        },\n        removeRotate: function(){\n          this.$store.commit('changeOldSelectedR',this.Rvalue*(-1));\n          // let showControl = document.getElementById(\"txtNumberR\");\n          // showControl.value = parseInt(showControl.value) - 45;\n          // this.$store.commit('changeOldSelectedR',showControl.value);\n        },\n        //视频热点的放缩操作\n        addScale: function(){\n          this.$store.commit('changeOldSelectedS',this.Svalue);\n          // let showControl = document.getElementById(\"txtNumberS\");\n          // console.log(showControl.value);\n          // showControl.value = parseFloat(showControl.value) + 0.1;\n          // console.log(showControl.value);\n          // this.$store.commit('changeOldSelectedS',Math.round(showControl.value*10)/10);\n        },\n        removeScale: function(){\n          this.$store.commit('changeOldSelectedS',this.Svalue*(-1));\n          // let showControl = document.getElementById(\"txtNumberS\");\n          // showControl.value = parseFloat(showControl.value) - 0.1;\n          // this.$store.commit('changeOldSelectedS',Math.round(showControl.value*10)/10);\n        },\n\n        //点击加号按钮则绘制新的热点\n        drawHotspot:function(child){\n          if(child.label===\"跳转热点\"){\n            this.$store.dispatch('isHotspot');\n          }\n          if(child.label===\"图像热点\"||child.label===\"URL热点\"){\n            this.$store.dispatch('isImageHotspot');\n          }\n        },\n        //把树形控件更改的热点说明提交给state的Tree和state里面的热点说明\n        saveTreeHotIntroduction:function(child2){\n          //获取到输入框中的值\n          let result1 = this.$refs.input1[1].value;\n          //判断ID的值，若相同则代表获得了Tree中的相应节点\n          for (let i = 0; i <this.Tree.length; i++) {\n            for (let j = 0; j <this.Tree[i].children.length ; j++) {\n              for (let k = 0; k <this.Tree[i].children[j].children.length ; k++) {\n                for (let l = 0; l <this.Tree[i].children[j].children[k].children.length ; l++) {\n                  if(this.Tree[i].children[j].children[k].children[l].id===child2.id){\n                    //把获取到的内容commit到state的Tree中\n                    this.$store.commit('saveTreeHotIntroduction',{\n                      i:i,\n                      j:j,\n                      k:k,\n                      l:l,\n                      result:result1\n                    });\n                    //更改state里面的热点说明\n                    this.$store.commit('savehotIntroduction',{\n                      k:k,\n                      result:result1\n                    });\n                    //把修改后的热点变回原来的蓝色热点\n                    this.$store.commit('showInactiveJumpSpot');\n                  }\n                }\n              }\n            }\n          }\n\n        },\n        saveTreeHotUrl:function(child2){\n          let result2 = this.$refs.input2[0].value;\n          //判断ID的值，若相同则代表获得了Tree中的相应节点\n          for (let i = 0; i <this.Tree.length; i++) {\n            for (let j = 0; j <this.Tree[i].children.length ; j++) {\n              for (let k = 0; k <this.Tree[i].children[j].children.length ; k++) {\n                for (let l = 0; l <this.Tree[i].children[j].children[k].children.length ; l++) {\n                  if(this.Tree[i].children[j].children[k].children[l].id===child2.id){\n                    //把获取到的内容commit到state的Tree中\n                    this.$store.commit('saveTreeHotUrl',{\n                      i:i,\n                      j:j,\n                      k:k,\n                      l:l,\n                      result:result2\n                    });\n                    //更改state里面的热点说明\n                    this.$store.commit('savehotUrl',{\n                      k:k,\n                      result:result2\n                    });\n                    //把修改后的热点变回原来的Url热点\n                    this.$store.commit('showInactiveUrlSpot');\n                  }\n                }\n              }\n            }\n          }\n\n        },\n        saveTreeJumpScene:function(child2){\n          let result3 = child2.label;\n          //判断ID的值，若相同则代表获得了Tree中的相应节点\n          for (let i = 0; i <this.Tree.length; i++) {\n            for (let j = 0; j <this.Tree[i].children.length ; j++) {\n              for (let k = 0; k <this.Tree[i].children[j].children.length ; k++) {\n                for (let l = 0; l <this.Tree[i].children[j].children[k].children.length ; l++) {\n                  if(this.Tree[i].children[j].children[k].children[l].id===child2.id){\n                    //把获取到的内容commit到state的Tree中\n                    this.$store.commit('saveTreeJumpScene',{\n                      i:i,\n                      j:j,\n                      k:k,\n                      l:l,\n                      result:result3\n                    });\n                    //更改state里面的热点说明\n                    this.$store.commit('savehotTarget',{\n                      k:k,\n                      result:result3\n                    });\n                    //把修改后的热点变回原来的蓝色热点\n                    this.$store.commit('showInactiveJumpSpot');\n                  }\n                }\n              }\n            }\n          }\n        },\n        saveTreeUploadPicture:function(child2){\n          let result4 = child2.label;\n          //判断ID的值，若相同则代表获得了Tree中的相应节点\n          for (let i = 0; i <this.Tree.length; i++) {\n            for (let j = 0; j <this.Tree[i].children.length ; j++) {\n              for (let k = 0; k <this.Tree[i].children[j].children.length ; k++) {\n                for (let l = 0; l <this.Tree[i].children[j].children[k].children.length ; l++) {\n                  if(this.Tree[i].children[j].children[k].children[l].id===child2.id){\n                    //把获取到的内容commit到state的Tree中\n                    this.$store.commit('saveTreeUploadPicture',{\n                      i:i,\n                      j:j,\n                      k:k,\n                      l:l,\n                      result:result4\n                    });\n                    //更改state里面的热点说明\n                    this.$store.commit('savehotImage',{\n                      k:k,\n                      result:result4\n                    });\n                    //把修改后的热点变回原来的图像热点\n                    this.$store.commit('showInactiveImageSpot');\n                  }\n                }\n              }\n            }\n          }\n        },\n        saveSelectHotType(value){\n          this.$store.commit('saveSelectHotType',value);\n        },\n        saveSelectUploadPicture(value1){\n          this.$store.commit('saveSelectUploadPicture',value1);\n        },\n        saveSelectJumpScene(value2){\n          this.$store.commit('saveSelectJumpScene',value2);\n        },\n        saveInputHotIntroduction(){\n          this.$store.commit('saveInputHotIntroduction',this.$refs.input3.$refs.input.value);\n        },\n        saveInputHotUrl(){\n          this.$store.commit('saveInputHotUrl',this.$refs.input4.$refs.input.value);\n        },\n        //热点管理的热点删除\n        newDeleteHotSpot(child1,index1) {\n          //把Tree中的热点信息移除\n          if(child1.children[0].pid===4){\n            this.$store.commit('deleteJumpHotSpot',{scene:this.Scene,index:index1});\n          }\n          if(child1.children[0].pid===6){\n            this.$store.commit('deleteImageHotSpot',{scene:this.Scene,index:index1});\n          }\n          if(child1.children[0].pid===7){\n            this.$store.commit('deleteUrlHotSpot',{scene:this.Scene,index:index1});\n          }\n          //把场景的热点进行删除\n          this.$store.commit('newDeleteHotSpot',{\n            position:child1.children[0].position,\n            pid:child1.children[0].pid\n          });\n        },\n        //获取点击三角标的事件，从而获得相应的场景信息，并进行比较，判断是否expand(有三个下拉按钮所以分别对应每一个expand)\n        expand(e) {\n          if(this.expandicon!==e.target.parentNode.parentNode.querySelector(\".custom-tree-node span\").innerText){\n            this.expandicon = e.target.parentNode.parentNode.querySelector(\".custom-tree-node span\").innerText;\n          }else{\n            this.expandicon =-1;\n          }\n        },\n        expand1(e){\n          if(this.expandicon1!==e.target.parentNode.parentNode.querySelector(\".custom-tree-node span\").innerText){\n            this.expandicon1 = e.target.parentNode.parentNode.querySelector(\".custom-tree-node span\").innerText;\n          }else{\n            this.expandicon1 =-1;\n          }\n        },\n        expand2(e){\n          if(this.expandicon2!==e.target.parentNode.parentNode.querySelector(\".custom-tree-node span\").innerText){\n            this.expandicon2 = e.target.parentNode.parentNode.querySelector(\".custom-tree-node span\").innerText;\n          }else{\n            this.expandicon2 =-1;\n          }\n        },\n        //保证点击热点管理的场景时获得相对应的场景\n        newChangeImgFile(item){\n          for (let i = 0; i <this.Tree.length ; i++) {\n            if(item.label===this.Tree[i].label){\n              let title = this.$store.state.test.fileUrlArr[i].fileName;\n              let src = this.$store.state.test.fileUrlArr[i].fileUrl;\n              this.$store.commit('saveimgFile',{'fileName':title,'fileUrl':[src]});\n            }\n          }\n        },\n        //保证点击热点管理的场景时获得相对应的场景\n        activeHotSpot(child1){\n          if(child1.children[0].pid===4){\n            this.$store.commit('showActiveJumpSpot',child1);\n          }\n          if(child1.children[0].pid===6){\n            this.$store.commit('showActiveImageSpot',child1);\n          }\n          if(child1.children[0].pid===7){\n            this.$store.commit('showActiveUrlSpot',child1);\n          }\n        },\n        //热点管理的场景删除\n        deleteScene(item,index) {\n          this.$store.commit('deleteScene',index);\n        },\n        changeImgFile(event){\n          let src=event.target.getAttribute('src');\n          let title=event.target.getAttribute('title');\n          this.$store.commit('saveimgFile',{'fileName':title,'fileUrl':[src]});\n        },\n        //全景图上传成功后的回调函数\n        panoUploadSuccess (response, file, fileList) {\n            console.log('上传全景文件', response);\n            //上传成功后再次请求后端，查询这个viewNo下的所有全景图返回回来\n            let that=this;\n            that.$ajax({\n                url:'/web/file/1/'+that.$store.state.test.viewNo,\n                method:'get',\n                params:{\n                    summary:1\n                },\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n                }\n            }).then(function (response) {\n                //将返回的文件名和路径保存进state中\n                let file=response.data.data;\n                //console.log(file);\n                let arr=[];\n                for(let i of file){\n                    let obj={};\n                    obj.fileName=i.name;\n                    obj.fileUrl='http://172.28.211.16:8010/'+i.url;\n                    arr.push(obj);\n                }\n                that.$store.commit('saveFileUrlArr',arr);\n            }).catch(function (error) {\n                console.log(error);\n            });\n\n        },\n        imgUploadSuccess (response, file, fileList) {\n            console.log('上传图片文件', response);\n            //这里上传图片后要更新state.hotSpotsImgs\n            //上传成功后再次请求后端，查询这个viewNo下的所有贴图返回回来\n            let that=this;\n            that.$ajax({\n                url:'/web/file/1/'+that.$store.state.test.viewNo,\n                method:'get',\n                params:{\n                  summary:2\n                },\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n                }\n            }).then(function (response) {\n                //将返回的文件名和路径保存进state中\n                let file=response.data.data;\n                console.log('已上传的贴图',file);\n                let arr=[];\n                let tempArr=[];\n                for(let i of file){\n                    let obj={};\n                    obj.key=i.name;\n                    obj.value=i.name;\n                    // obj.fileUrl='http://172.28.211.16:8010/'+i.url;\n                    arr.push(obj);\n                    let obj2={};\n                    obj2.fileName=i.name;\n                    obj2.fileUrl=i.url;\n                    tempArr.push(obj2);\n                }\n                that.$store.commit('saveHotSpotsImgs',arr);\n                that.$store.commit('saveTietu',tempArr);\n            }).catch(function (error) {\n                console.log(error);\n            });\n        },\n        // 上传错误\n        uploadError (response, file, fileList) {\n            alert('上传失败，请重试！');\n        },\n        //删除之前提示\n        beforeRemove(file, fileList) {\n            return this.$confirm(`确定移除 ${ file.name }？`);\n        },\n        //删除全景图后执行的函数\n        panoHandleRemove(file, fileList) {\n            //删除文件后更新state.fileUrlArr\n            let fileName=file.name;\n            let fileUrlArr=this.$store.state.test.fileUrlArr;\n            for(let i=0,len=fileUrlArr.length;i<len;i++){\n                if(fileUrlArr[i].fileName==fileName){\n                    fileUrlArr.splice(i,1);\n                }\n            }\n            this.$store.commit('saveFileUrlArr',fileUrlArr);\n        },\n        imgHandleRemove(file, fileList) {\n          //删除上传的图片文件后更新state.hotSpotsImgs,暂时未实现\n          let fileName=file.name;\n          let hotSpotsImg=this.$store.state.test.hotSpotsImg;\n          for(let i=0,len=hotSpotsImg.length;i<len;i++){\n              if(hotSpotsImg[i].value==fileName){\n                  hotSpotsImg.splice(i,1);\n              }\n          }\n          this.$store.commit('saveFileUrlArr',hotSpotsImg);\n\n        },\n        saveJumpHotSpot(){\n          //如果保存的内容不为空，才能点击确定\n          if(this.$store.state.test.selectJumpScene&&this.$store.state.test.inputHotIntroduction){\n            //点击热点，获得其相应的TempLocation，判断与已有的热点是否相同，相同则修改不相同则Push到state数组中\n            this.value2='';//清空select框中的值避免受到影响\n            let flag = false;\n            let index = -1;\n            for (let i = 0; i < this.$store.state.test.jumpHotSpots.length ; i++) {\n              if(Math.round(this.$store.state.test.jumpHotSpots[i].position[0])===Math.round(this.$store.state.test.tempLocation.location[0])&&Math.round(this.$store.state.test.jumpHotSpots[i].position[1])===Math.round(this.$store.state.test.tempLocation.location[1])&&Math.round(this.$store.state.test.jumpHotSpots[i].position[2])===Math.round(this.$store.state.test.tempLocation.location[2])){\n                flag=true;\n                index=i;\n              }\n            }\n            if(flag){\n              //把修改的热点信息保存到state中\n              this.$store.commit('changeJumpHotSpot',{index:index,hotTarget:this.$store.state.test.selectJumpScene,hotIntroduction:this.$store.state.test.inputHotIntroduction});\n              //把修改的热点信息保存到state的Tree中\n              this.$store.commit('changeTreeJumpHotSpot',{scene:this.Scene,index:index,hotTarget:this.$store.state.test.selectJumpScene,hotIntroduction:this.$store.state.test.inputHotIntroduction});\n            }else{\n              //把新增的热点信息保存到state中\n              this.$store.commit('saveJumpHotSpot',{hotTarget:this.$store.state.test.selectJumpScene,hotIntroduction:this.$store.state.test.inputHotIntroduction});\n              //把新增的热点信息保存到Tree中\n              this.$store.commit('saveTreeJumpHotSpot',{scene:this.Scene,hotTarget:this.$store.state.test.selectJumpScene,hotIntroduction:this.$store.state.test.inputHotIntroduction});\n            }\n            this.$store.commit('hideHotSpot');\n          }else {\n            alert(\"请添加跳转场景和者热点说明！\");\n          }\n        },\n        saveUrlHotSpot(){\n          //如果未改变热点类型，则只需要判断添加热点还是消除热点\n          if(this.$store.state.test.selectHotType==='URL热点'){\n            //如果保存的内容不为空，才能点击确定\n            if(this.$store.state.test.inputHotUrl&&this.$store.state.test.selectHotType) {\n              //点击热点，获得其相应的TempLocation，判断与已有的热点是否相同，相同则修改不相同则Push到state数组中\n              this.value1 = '';\n              this.value = '';//清空select框中的值避免受到影响\n              let flag = false;\n              let index = -1;\n              for (let i = 0; i < this.$store.state.test.urlHotSpots.length; i++) {\n                if (Math.round(this.$store.state.test.urlHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[0].y) === Math.round(this.$store.state.test.tempLocation.location[0].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[0].z) === Math.round(this.$store.state.test.tempLocation.location[0].z)) {\n                  if (Math.round(this.$store.state.test.urlHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[1].y) === Math.round(this.$store.state.test.tempLocation.location[1].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[1].z) === Math.round(this.$store.state.test.tempLocation.location[1].z)) {\n                    if (Math.round(this.$store.state.test.urlHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[2].y) === Math.round(this.$store.state.test.tempLocation.location[2].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[2].z) === Math.round(this.$store.state.test.tempLocation.location[2].z)) {\n                      if (Math.round(this.$store.state.test.urlHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[3].y) === Math.round(this.$store.state.test.tempLocation.location[3].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[3].z) === Math.round(this.$store.state.test.tempLocation.location[3].z)) {\n                        flag = true;\n                        index = i;\n                      }\n                    }\n                  }\n                }\n              }\n              if (flag) {\n                this.$store.commit('changeUrlHotSpot', {index: index, hotUrl: this.$store.state.test.inputHotUrl});\n                this.$store.commit('changeTreeUrlHotSpot', {\n                  scene: this.Scene,\n                  index: index,\n                  hotUrl: this.$store.state.test.inputHotUrl\n                });\n              } else {\n                this.$store.commit('saveUrlHotSpot', {hotUrl: this.$store.state.test.inputHotUrl});\n                this.$store.commit('saveTreeUrlHotSpot', {scene: this.Scene, hotUrl: this.$store.state.test.inputHotUrl});\n              }\n              this.$store.commit('hideHotSpot');\n            }else {\n              alert(\"请确定热点类型和跳转链接！\");\n            }\n          }\n          //如果改变热点类型，则需要把之前的URL热点删掉，并且把新增的图像热点添加进去(通过selectHotType无法判断)\n\n          // if(this.$store.state.test.selectHotType==='图像热点'){\n          //     //如果保存的内容不为空，才能点击确定\n          //     if(this.$store.state.test.selectUploadPicture&&this.$store.state.test.selectHotType) {\n          //       //如果改变热点类型，则需要把之前的URL热点删掉\n          //       this.value1 = '';\n          //       this.value = '';//清空select框中的值避免受到影响\n          //       let flag = false;\n          //       let index = -1;\n          //       for (let i = 0; i < this.$store.state.test.urlHotSpots.length; i++) {\n          //         if (Math.round(this.$store.state.test.urlHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[0].y) === Math.round(this.$store.state.test.tempLocation.location[0].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[0].z) === Math.round(this.$store.state.test.tempLocation.location[0].z)) {\n          //           if (Math.round(this.$store.state.test.urlHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[1].y) === Math.round(this.$store.state.test.tempLocation.location[1].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[1].z) === Math.round(this.$store.state.test.tempLocation.location[1].z)) {\n          //             if (Math.round(this.$store.state.test.urlHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[2].y) === Math.round(this.$store.state.test.tempLocation.location[2].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[2].z) === Math.round(this.$store.state.test.tempLocation.location[2].z)) {\n          //               if (Math.round(this.$store.state.test.urlHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) && Math.round(this.$store.state.test.urlHotSpots[i].position[3].y) === Math.round(this.$store.state.test.tempLocation.location[3].y) && Math.round(this.$store.state.test.urlHotSpots[i].position[3].z) === Math.round(this.$store.state.test.tempLocation.location[3].z)) {\n          //                 flag = true;\n          //                 index = i;\n          //               }\n          //             }\n          //           }\n          //         }\n          //       }\n          //       //把Tree中的热点信息移除\n          //       this.$store.commit('deleteUrlHotSpot', {scene: this.Scene, index: index});\n          //       //把场景的热点进行删除\n          //       this.$store.commit('newDeleteHotSpot', {\n          //         position: this.$store.state.test.tempLocation.location,\n          //         pid: 7\n          //       });\n          //       //并且把新增的图像热点添加进去\n          //       this.$store.commit('saveImageHotSpot', {hotImage: this.$store.state.test.selectUploadPicture});\n          //       this.$store.commit('saveTreeImageHotSpot', {scene: this.Scene, hotImage: this.$store.state.test.selectUploadPicture});\n          //       this.$store.commit('hideHotSpot');\n          //     }else {\n          //       alert(\"请确定热点类型和已上传图片！\");\n          //     }\n          //   }\n        },\n        saveImageHotSpot(){\n          //如果未改变热点类型，则只需要判断添加热点还是消除热点\n          if(this.$store.state.test.selectHotType==='图像热点'){\n            //如果保存的内容不为空，才能点击确定\n            if(this.$store.state.test.selectUploadPicture&&this.$store.state.test.selectHotType){\n              //点击热点，获得其相应的TempLocation，判断与已有的热点是否相同，相同则修改不相同则Push到state数组中\n              this.value1='';this.value='';//清空select框中的值避免受到影响\n              let flag = false;\n              let index = -1;\n              for (let i = 0; i < this.$store.state.test.imageHotSpots.length; i++) {\n                if (Math.round(this.$store.state.test.imageHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[0].y) === Math.round(this.$store.state.test.tempLocation.location[0].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[0].z) === Math.round(this.$store.state.test.tempLocation.location[0].z)) {\n                  if (Math.round(this.$store.state.test.imageHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[1].y) === Math.round(this.$store.state.test.tempLocation.location[1].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[1].z) === Math.round(this.$store.state.test.tempLocation.location[1].z)) {\n                    if (Math.round(this.$store.state.test.imageHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[2].y) === Math.round(this.$store.state.test.tempLocation.location[2].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[2].z) === Math.round(this.$store.state.test.tempLocation.location[2].z)) {\n                      if (Math.round(this.$store.state.test.imageHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[3].y) === Math.round(this.$store.state.test.tempLocation.location[3].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[3].z) === Math.round(this.$store.state.test.tempLocation.location[3].z)) {\n                        flag=true;\n                        index=i;\n                      }\n                    }\n                  }\n                }\n              }\n              if(flag){\n                this.$store.commit('changeImageHotSpot',{index:index,hotImage:this.$store.state.test.selectUploadPicture});\n                this.$store.commit('changeTreeImageHotSpot',{scene:this.Scene,index:index,hotImage:this.$store.state.test.selectUploadPicture});\n              }else{\n                this.$store.commit('saveImageHotSpot',{hotImage:this.$store.state.test.selectUploadPicture});\n                this.$store.commit('saveTreeImageHotSpot',{scene:this.Scene,hotImage:this.$store.state.test.selectUploadPicture});\n              }\n              this.$store.commit('hideHotSpot');\n            }else {\n              alert(\"请确定热点类型和已上传图片！\");\n            }\n          }\n          //如果改变热点类型，则需要把之前的URL热点删掉，并且把新增的图像热点添加进去(通过selectHotType无法判断)\n\n          // if(this.$store.state.test.selectHotType==='URL热点'){\n          //   if(this.$store.state.test.inputHotUrl&&this.$store.state.test.selectHotType){\n          //     //如果改变热点类型，则需要把之前的图像热点删掉\n          //     this.value1='';this.value='';//清空select框中的值避免受到影响\n          //     let flag = false;\n          //     let index = -1;\n          //     for (let i = 0; i < this.$store.state.test.imageHotSpots.length; i++) {\n          //       if (Math.round(this.$store.state.test.imageHotSpots[i].position[0].x) === Math.round(this.$store.state.test.tempLocation.location[0].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[0].y) === Math.round(this.$store.state.test.tempLocation.location[0].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[0].z) === Math.round(this.$store.state.test.tempLocation.location[0].z)) {\n          //         if (Math.round(this.$store.state.test.imageHotSpots[i].position[1].x) === Math.round(this.$store.state.test.tempLocation.location[1].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[1].y) === Math.round(this.$store.state.test.tempLocation.location[1].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[1].z) === Math.round(this.$store.state.test.tempLocation.location[1].z)) {\n          //           if (Math.round(this.$store.state.test.imageHotSpots[i].position[2].x) === Math.round(this.$store.state.test.tempLocation.location[2].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[2].y) === Math.round(this.$store.state.test.tempLocation.location[2].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[2].z) === Math.round(this.$store.state.test.tempLocation.location[2].z)) {\n          //             if (Math.round(this.$store.state.test.imageHotSpots[i].position[3].x) === Math.round(this.$store.state.test.tempLocation.location[3].x) && Math.round(this.$store.state.test.imageHotSpots[i].position[3].y) === Math.round(this.$store.state.test.tempLocation.location[3].y) && Math.round(this.$store.state.test.imageHotSpots[i].position[3].z) === Math.round(this.$store.state.test.tempLocation.location[3].z)) {\n          //               flag=true;\n          //               index=i;\n          //             }\n          //           }\n          //         }\n          //       }\n          //     }\n          //     //把Tree中的热点信息移除\n          //     this.$store.commit('deleteImageHotSpot',{scene:this.Scene,index:index});\n          //     //把场景的热点进行删除\n          //     this.$store.commit('newDeleteHotSpot',{\n          //       position:this.$store.state.test.tempLocation.location,\n          //       pid:6\n          //     });\n          //     //并且把新增的URL热点添加进去\n          //     this.$store.commit('saveUrlHotSpot',{hotUrl:this.$store.state.test.inputHotUrl});\n          //     this.$store.commit('saveTreeUrlHotSpot',{scene:this.Scene,hotUrl:this.$store.state.test.inputHotUrl});\n          //     this.$store.commit('hideHotSpot');\n          //   }else {\n          //     alert(\"请确定热点类型和跳转链接！\");\n          //   }\n          // }\n\n        },\n        //将新建项目的输入框参数传给后台，返回一个表示项目的id==>viewNo\n        // sendProject(){\n        //     let that=this;\n        //     this.$ajax({\n        //         url:'/web/spaceview/',\n        //         method: 'post',\n        //         data: {\n        //             shortName: that.shortName,\n        //             address: that.address,\n        //             longitude:that.longitude,\n        //             latitude:that.latitude,\n        //             info:that.info,\n        //             createUserNo:that.createUserNo,\n        //             companyNo:that.companyNo,\n        //             _token:that.token,\n        //             viewType:0,\n        //             status:1\n        //         },\n        //         transformRequest: [function (data) {\n        //             // Do whatever you want to transform the data\n        //             let ret = ''\n        //             for (let it in data) {\n        //                 ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n        //             }\n        //             return ret\n        //         }],\n        //         headers: {\n        //             'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        //         }\n        //     }).then(function (response) {\n        //             let viewNo=response.data.data;\n        //             that.$store.commit('saveViewNo',{viewNo:viewNo});\n        //             console.log(viewNo);\n        //\n        //     }).catch(function (error) {\n        //             console.log(error);\n        //     });\n        // }\n      },\n      data() {\n        return {\n            defaultTarget:'',\n            // hotTarget:'',\n            //hotIntroduction:'',\n            // hotSpotsImg:'',\n            // hotUrl:'',\n            // hotSpotsType:'',\n            hotSpotsTypes:[{'key':'URL热点','value':'URL热点'},{'key':'图像热点','value':'图像热点'}],\n            // shortName:'',\n            // address:'',\n            // longitude:'',\n            // latitude:'',\n            // info:'',\n            //这里暂时写死\n            createUserNo:\"84d2a1ed-d26e-4772-a296-ce8c111132d4\",\n            companyNo:\"84d2a1ed-d26e-4772-a296-ce8c111132d4\",\n            token:\"4KD8DLL84D2A1ED-D26E-4772-A296-CE8C111132D4\",\n\n            //这个是什么没看懂\n          pickerOptions0: {\n            disabledDate(time) {\n              return time.getTime() < Date.now() - 8.64e7;\n            }\n          },\n\n          hotSpotsImgs:[{'key':'tianyu01.jpg','value':'tianyu01.jpg','label':'tianyu01.jpg'},{'key':'tianyu02.jpg','value':'tianyu02.jpg','label':'tianyu02.jpg'}],//选择上传图片\n          //定义select选中值,选择器需要value值\n          value: '',\n          value1:'',\n          value2:'',\n          expandicon:-1,expandicon1:-1,expandicon2:-1,//是否展开\n          //用于添加场景的表单弹出框\n          dialogFormVisible: false,//用于弹出框\n          formLabelWidth: '120px',\n\n          // 水平平移倍率的选择\n          optionsX: [{\n            value: '1',\n            label: '×1'\n          }, {\n            value: '10',\n            label: '×10'\n          }, {\n            value: '100',\n            label: '×100'\n          }],\n          Xvalue:1,//将change函数的选中值传递给status,默认是1\n          valueX:'1',//默认选中\n          // 垂直平移倍率的选择\n          optionsY: [{\n            value: '1',\n            label: '×1'\n          }, {\n            value: '10',\n            label: '×10'\n          }, {\n            value: '100',\n            label: '×100'\n          }],\n          Yvalue:1,//将change函数的选中值传递给status,默认是1\n          valueY:'1',//默认选中\n          // 旋转倍率的选择\n          optionsR: [{\n            value: '1',\n            label: '×1°'\n          }, {\n            value: '10',\n            label: '×10°'\n          }],\n          Rvalue:1,//将change函数的选中值传递给status,默认是1\n          valueR:'1',//默认选中\n          // 放缩倍率的选择\n          optionsS: [{\n            value: '0.1',\n            label: '0.1'\n          }, {\n            value: '0.5',\n            label: '0.5'\n          }],\n          Svalue:0.1,//将change函数的选中值传递给status,默认是1\n          valueS:'0.1',//默认选中\n\n        }\n      },\n    }\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n    .sidelogo{\n        height:50px;\n        line-height:50px;\n        padding:0 10px 0 10px;\n    }\n    .sidelogotxt{\n        font-size:1.2rem;\n        font-weight:bold;\n    }\n    .sidetitle{\n        padding:10px 0 10px 0;\n        color:#999;\n        font-size:1rem;\n        font-weight:bold;\n    }\n    .el-menu {\n        min-height: 100%;\n    }\n    .sideItem{\n        border-bottom:1px dashed #ccc;\n        padding-bottom: 10px;\n    }\n    .el-form-item{\n        margin-bottom:10px;\n    }\n    .el-checkbox{margin-left:0;\n    }\n    .el-checkbox__label{font-weight:normal;\n    }\n    .el-date-editor.el-input{\n        width: 100%;\n    }\n\n    /*平移输入框样式*/\n    .transfrom{\n      overflow: hidden;\n      position: relative;\n      width: 248px;\n      margin-top: 10px;\n    }\n    .up,.down{\n      border:0;\n      cursor: pointer;\n      display: inline-block;\n      color:#BFCBD9;\n      background-color: #fff;\n      /*outline: none;*/\n      height: 12px;\n      padding: 0;\n    }\n    .down{\n      position: absolute;\n      top: 8px;\n      right:5px;\n    }\n    .up{\n      position: absolute;\n      top: 8px;\n      right:35px;\n    }\n    #txtNumberX,#txtNumberY,#txtNumberSS,#txtNumberRR{\n      width:100px;\n    }\n    #txtNumberR,#txtNumberS {\n      height:30px;width:100px;float:left;display: block;border-radius:4px;\n      border: 1px solid #bfcbd9;outline:none;box-sizing: border-box;\n      padding:3px 10px 3px 10px;vertical-align:middle; color:#97BBE0; font-size:14px;\n    }\n    label {\n      font-weight:700;\n      color:#48576A;\n      font-size:14px;\n      float: left;\n      line-height: 30px;\n      box-sizing: border-box;\n      width: 80px;\n      height:30px;\n      text-align:center;\n    }\n    input:disabled {\n      background-color: #f5f7fa;\n      border-color: #e4e7ed;\n      color: #c0c4cc;\n      cursor: not-allowed;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/layout/Sidebar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-menu',{attrs:{\"mode\":\"vertical\",\"default-active\":_vm.$route.path}},[_c('div',{staticClass:\"sidelogo\"},[_c('span',[_c('i',{staticClass:\"el-icon-setting\"})]),_vm._v(\" \"),_c('span',{staticClass:\"sidelogotxt\"},[_vm._v(\"  全景编辑\")])]),_vm._v(\" \"),_c('el-tabs',{attrs:{\"type\":\"border-card\"}},[_c('el-button',{staticStyle:{\"width\":\"266px\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogFormVisible = true}}},[_vm._v(\"\\n        添加场景\"),_c('i',{staticClass:\"el-icon-plus\"})]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"全景图片:\",\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',[_c('el-form-item',{attrs:{\"label\":\"上传\",\"label-width\":_vm.formLabelWidth}},[_c('el-upload',{staticClass:\"upload-panorama1\",attrs:{\"action\":_vm.ajaxUrl1,\"on-remove\":_vm.panoHandleRemove,\"before-remove\":_vm.beforeRemove,\"onError\":_vm.uploadError,\"onSuccess\":_vm.panoUploadSuccess}},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"请上传全景照片\")])],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型\",\"label-width\":_vm.formLabelWidth}},[_c('el-select',{attrs:{\"size\":\"small\"},model:{value:(_vm.imgType),callback:function ($$v) {_vm.imgType=$$v},expression:\"imgType\"}},[_c('el-option',{attrs:{\"label\":\"Auto\",\"value\":\"Auto\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"Equirectangular\",\"value\":\"Equirectangular\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"Cube Faces\",\"value\":\"Cube Faces\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"Cylindrical\",\"value\":\"Cylindrical\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"Flat\",\"value\":\"Flat\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"文件名\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\",\"id\":\"image\",\"disabled\":true},model:{value:(_vm.fileName),callback:function ($$v) {_vm.fileName=$$v},expression:\"fileName\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('div'),_vm._v(\" \"),_c('div'),_vm._v(\" \"),_c('div'),_vm._v(\" \"),_c('el-form',{attrs:{\"label-position\":\"left\",\"label-width\":\"100px\"}},[_c('div',{staticClass:\"sideItem\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.$store.state.test.isImgHotSpot),expression:\"this.$store.state.test.isImgHotSpot\"}]},[_c('div',{staticClass:\"sidetitle\"},[_vm._v(\"热点类型:\")]),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"热点类型\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"clearable\":\"\",\"placeholder\":_vm.hotSpotsType?_vm.hotSpotsType:'请选择热点类型'},on:{\"change\":function($event){_vm.saveSelectHotType(_vm.value)}},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.hotSpotsTypes),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.hotSpotsType==='URL热点'),expression:\"this.hotSpotsType==='URL热点'\"}]},[_c('el-form-item',{attrs:{\"label\":\"跳转链接\"}},[_c('el-input',{ref:\"input4\",attrs:{\"value\":_vm.hotUrl,\"clearable\":\"\",\"placeholder\":\"确认后点击确定\"},on:{\"blur\":function($event){$event.preventDefault();_vm.saveInputHotUrl()}}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveUrlHotSpot}},[_vm._v(\"确定\")])],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.hotSpotsType==='图像热点'),expression:\"this.hotSpotsType==='图像热点'\"}]},[_c('el-form-item',{attrs:{\"label\":\"已上传图片\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"clearable\":\"\",\"placeholder\":_vm.hotSpotsImg?_vm.hotSpotsImg:'请选择已上传图片'},on:{\"change\":function($event){_vm.saveSelectUploadPicture(_vm.value1)}},model:{value:(_vm.value1),callback:function ($$v) {_vm.value1=$$v},expression:\"value1\"}},_vm._l((this.$store.state.test.hotSpotsImgs),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"图片上传\"}},[_c('el-upload',{staticClass:\"upload-panorama1\",attrs:{\"action\":_vm.ajaxUrl2,\"on-remove\":_vm.imgHandleRemove,\"before-remove\":_vm.beforeRemove,\"onError\":_vm.uploadError,\"onSuccess\":_vm.imgUploadSuccess}},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"请上传热点图片\")])],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveImageHotSpot}},[_vm._v(\"确定\")])],1)],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.$store.state.test.isJumpHotSpot),expression:\"this.$store.state.test.isJumpHotSpot\"}]},[_c('div',{staticClass:\"sidetitle\"},[_vm._v(\"跳转热点:\")]),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"目标场景\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"clearable\":\"\",\"placeholder\":_vm.hotTarget?_vm.hotTarget:'请选择要跳转的场景'},on:{\"change\":function($event){_vm.saveSelectJumpScene(_vm.value2)}},model:{value:(_vm.value2),callback:function ($$v) {_vm.value2=$$v},expression:\"value2\"}},_vm._l((_vm.targetOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"场景说明\"}},[_c('el-input',{ref:\"input3\",attrs:{\"value\":_vm.hotIntroduction,\"clearable\":\"\",\"placeholder\":\"确认后点击确定\"},on:{\"blur\":function($event){$event.preventDefault();_vm.saveInputHotIntroduction()}}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveJumpHotSpot}},[_vm._v(\"确定\")])],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.$store.state.test.isVideoHotSpot),expression:\"this.$store.state.test.isVideoHotSpot\"}]},[_c('div',{staticClass:\"sidetitle\"},[_vm._v(\"热点类型:\")]),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"上传视频类型\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"clearable\":\"\",\"placeholder\":_vm.hotSpotsType?_vm.hotSpotsType:'请选择视频类型'},on:{\"change\":function($event){_vm.saveSelectHotType(_vm.value)}},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.hotSpotsTypes),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1),_vm._v(\" \"),_c('div',{staticClass:\"transfrom\"},[_c('label',[_vm._v(\"水平平移：\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"id\":\"txtNumberX\"},on:{\"change\":function($event){_vm.selectGetX(_vm.valueX)}},model:{value:(_vm.valueX),callback:function ($$v) {_vm.valueX=$$v},expression:\"valueX\"}},_vm._l((_vm.optionsX),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})})),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-up up\",on:{\"click\":function($event){$event.stopPropagation();_vm.addTransformX()}}}),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-down down\",on:{\"click\":function($event){$event.stopPropagation();_vm.removeTransformX()}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"transfrom\"},[_c('label',[_vm._v(\"竖直平移：\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"id\":\"txtNumberY\"},on:{\"change\":function($event){_vm.selectGetY(_vm.valueY)}},model:{value:(_vm.valueY),callback:function ($$v) {_vm.valueY=$$v},expression:\"valueY\"}},_vm._l((_vm.optionsY),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})})),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-up up\",on:{\"click\":function($event){$event.stopPropagation();_vm.addTransformY()}}}),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-down down\",on:{\"click\":function($event){$event.stopPropagation();_vm.removeTransformY()}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"transfrom\"},[_c('label',[_vm._v(\"旋转：\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"id\":\"txtNumberRR\"},on:{\"change\":function($event){_vm.selectGetR(_vm.valueR)}},model:{value:(_vm.valueR),callback:function ($$v) {_vm.valueR=$$v},expression:\"valueR\"}},_vm._l((_vm.optionsR),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})})),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-up up\",on:{\"click\":function($event){$event.stopPropagation();_vm.addRotate()}}}),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-down down\",on:{\"click\":function($event){$event.stopPropagation();_vm.removeRotate()}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"transfrom\"},[_c('label',[_vm._v(\"放缩：\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"id\":\"txtNumberSS\"},on:{\"change\":function($event){_vm.selectGetS(_vm.valueS)}},model:{value:(_vm.valueS),callback:function ($$v) {_vm.valueS=$$v},expression:\"valueS\"}},_vm._l((_vm.optionsS),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})})),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-up up\",on:{\"click\":function($event){$event.stopPropagation();_vm.addScale()}}}),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-arrow-down down\",on:{\"click\":function($event){$event.stopPropagation();_vm.removeScale()}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"transfrom\"},[_c('label',[_vm._v(\"旋转角度：\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.VideoRotate),expression:\"VideoRotate\"}],attrs:{\"type\":\"text\",\"id\":\"txtNumberR\",\"disabled\":true},domProps:{\"value\":(_vm.VideoRotate)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.VideoRotate=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"transfrom\"},[_c('label',[_vm._v(\"放缩倍数：\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.VideoScale),expression:\"VideoScale\"}],attrs:{\"type\":\"text\",\"id\":\"txtNumberS\",\"disabled\":true},domProps:{\"value\":(_vm.VideoScale)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.VideoScale=$event.target.value}}})]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.hotSpotsType==='URL热点'),expression:\"this.hotSpotsType==='URL热点'\"}]},[_c('el-form-item',{attrs:{\"label\":\"视频链接\"}},[_c('el-input',{ref:\"input4\",attrs:{\"value\":_vm.hotUrl,\"clearable\":\"\",\"placeholder\":\"确认后点击确定\"},on:{\"blur\":function($event){$event.preventDefault();_vm.saveInputHotUrl()}}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveUrlHotSpot}},[_vm._v(\"确定\")])],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.hotSpotsType==='图像热点'),expression:\"this.hotSpotsType==='图像热点'\"}]},[_c('el-form-item',{attrs:{\"label\":\"本地视频\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"clearable\":\"\",\"placeholder\":_vm.hotSpotsImg?_vm.hotSpotsImg:'请选择已上传视频'},on:{\"change\":function($event){_vm.saveSelectUploadPicture(_vm.value1)}},model:{value:(_vm.value1),callback:function ($$v) {_vm.value1=$$v},expression:\"value1\"}},_vm._l((this.$store.state.test.hotSpotsImgs),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"视频上传\"}},[_c('el-upload',{staticClass:\"upload-panorama1\",attrs:{\"action\":_vm.ajaxUrl2,\"on-remove\":_vm.imgHandleRemove,\"before-remove\":_vm.beforeRemove,\"onError\":_vm.uploadError,\"onSuccess\":_vm.imgUploadSuccess}},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"请上传相关视频\")])],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){}}},[_vm._v(\"确定\")])],1)],1)],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"tree\"},[_c('div',{staticClass:\"el-tree\"},_vm._l((_vm.Tree),function(item,index){return _c('div',{staticClass:\"el-tree-node\"},[_c('div',{staticClass:\"el-tree-node__content\",staticStyle:{\"padding-left\":\"0px\"}},[_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.expand($event)}}},[(_vm.expandicon===item.label)?_c('span',{staticClass:\"el-tree-node__expand-icon expanded\"}):_c('span',{staticClass:\"el-tree-node__expand-icon \"})]),_vm._v(\" \"),_c('span',{staticClass:\"custom-tree-node\"},[_c('span',[_vm._v(_vm._s(item.label))]),_vm._v(\" \"),_c('span',[_c('i',{staticClass:\"el-icon-search\",on:{\"click\":function($event){$event.stopPropagation();_vm.newChangeImgFile(item)}}}),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-delete\",on:{\"click\":function($event){$event.stopPropagation();_vm.deleteScene(item,index)}}})])])]),_vm._v(\" \"),(_vm.expandicon===item.label)?_c('div',[_c('div',{staticClass:\"el-tree-node__children\",staticStyle:{\"display\":\"block\"}},_vm._l((_vm.Tree[index].children),function(child,childindex){return _c('div',{staticClass:\"el-tree-node\"},[_c('div',{staticClass:\"el-tree-node__content\",staticStyle:{\"padding-left\":\"16px\"}},[_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.expand1($event)}}},[(_vm.expandicon1===child.label)?_c('span',{staticClass:\"el-tree-node__expand-icon expanded\"}):_c('span',{staticClass:\"el-tree-node__expand-icon\"})]),_vm._v(\" \"),_c('span',{staticClass:\"custom-tree-node\"},[_c('span',[_vm._v(_vm._s(child.label))]),_vm._v(\" \"),_c('span',[_c('i',{staticClass:\"el-icon-plus\",on:{\"click\":function($event){$event.stopPropagation();_vm.drawHotspot(child)}}})])])]),_vm._v(\" \"),(_vm.expandicon1===child.label)?_c('div',[_c('div',{staticClass:\"el-tree-node__children\",staticStyle:{\"display\":\"block\"}},_vm._l((child.children),function(child1,index1){return _c('div',{staticClass:\"el-tree-node\"},[_c('div',{staticClass:\"el-tree-node__content\",staticStyle:{\"padding-left\":\"32px\"},on:{\"click\":function($event){$event.stopPropagation();_vm.activeHotSpot(child1)}}},[_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.expand2($event)}}},[(_vm.expandicon2===child1.label)?_c('span',{staticClass:\"el-tree-node__expand-icon expanded\"}):_c('span',{staticClass:\"el-tree-node__expand-icon\"})]),_vm._v(\" \"),_c('span',{staticClass:\"custom-tree-node\"},[_c('span',[_vm._v(_vm._s(child1.label))]),_vm._v(\" \"),_c('span',[_c('i',{staticClass:\"el-icon-delete\",on:{\"click\":function($event){$event.stopPropagation();_vm.newDeleteHotSpot(child1,index1)}}})])])]),_vm._v(\" \"),_c('div',[(_vm.expandicon2===child1.label)?_c('div',[_c('div',{staticClass:\"el-tree-node__children\",staticStyle:{\"display\":\"block\"}},_vm._l((child1.children),function(child2){return _c('div',{staticClass:\"el-tree-node\"},[_c('div',{staticClass:\"el-tree-node__content\",staticStyle:{\"padding-left\":\"48px\"}},[_c('span',{staticClass:\"el-tree-node__expand-icon is-leaf\"}),_vm._v(\" \"),_c('span',{staticClass:\"custom-tree-node\"},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(child2.pid===4),expression:\"child2.pid===4\"}]},[_vm._v(\"\\n                                    跳转场景：\\n                                    \"),[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(child2.label),expression:\"child2.label\"}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(child2, \"label\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){_vm.saveTreeJumpScene(child2)}]}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(_vm._s(child2.label))]),_vm._v(\" \"),_vm._l((_vm.targetOptions),function(targetItem){return _c('option',{domProps:{\"value\":targetItem.value}},[_vm._v(\"\\n                                         \"+_vm._s(targetItem.value)+\"\\n                                       \")])})],2)]],2),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(child2.pid===5),expression:\"child2.pid===5\"}]},[_vm._v(\"\\n                                热点说明：\"),_c('input',{ref:\"input1\",refInFor:true,domProps:{\"value\":child2.label},on:{\"blur\":function($event){$event.preventDefault();_vm.saveTreeHotIntroduction(child2)}}})]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(child2.pid===6),expression:\"child2.pid===6\"}]},[_vm._v(\"\\n                                    已上传图片：\\n                                    \"),[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(child2.label),expression:\"child2.label\"}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(child2, \"label\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){_vm.saveTreeUploadPicture(child2)}]}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(_vm._s(child2.label))]),_vm._v(\" \"),_vm._l((_vm.hotSpotsImgs),function(item){return _c('option',{domProps:{\"value\":item.value}},[_vm._v(\"\\n                                      \"+_vm._s(item.value)+\"\\n                                    \")])})],2)]],2),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(child2.pid===7),expression:\"child2.pid===7\"}]},[_vm._v(\"\\n                                跳转链接：\"),_c('input',{ref:\"input2\",refInFor:true,domProps:{\"value\":child2.label},on:{\"blur\":function($event){$event.preventDefault();_vm.saveTreeHotUrl(child2)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"el-tree-node__children\",staticStyle:{\"display\":\"none\"}})])}))]):_c('div',[_c('div',{staticClass:\"el-tree-node__children\",staticStyle:{\"display\":\"none\"}})])])])}))]):_c('div',[_c('div',{staticClass:\"el-tree-node__children\",staticStyle:{\"display\":\"none\"}})])])}))]):_c('div',[_c('div',{staticClass:\"el-tree-node__children\",staticStyle:{\"display\":\"none\"}})])])}))]),_vm._v(\" \"),_c('el-form',{attrs:{\"label-position\":\"left\",\"label-width\":\"100px\"}},[_c('div',{staticClass:\"sideItem\"},[_c('div',{staticClass:\"sidetitle\"},[_vm._v(\"场景预览:\")]),_vm._v(\" \"),_c('el-form',{attrs:{\"label-position\":\"left\",\"label-width\":\"150px\"}},[_c('div',{staticClass:\"sideItem\"},[_c('ul',{staticStyle:{\"padding\":\"0\"}},[_c('img',{attrs:{\"src\":_vm.imgFile.fileUrl,\"title\":_vm.imgFile.fileName,\"width\":\"270px\",\"height\":\"135px\"}})])])])],1)]),_vm._v(\" \"),_c('div')],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7df9d509\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/layout/Sidebar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7df9d509\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Sidebar.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Sidebar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Sidebar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7df9d509\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Sidebar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7df9d509\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/layout/Sidebar.vue\n// module id = null\n// module chunks = ","\r\n<template>\r\n  <editor class=\"app-main\" style=\"min-height:100%\"></editor>\r\n</template>\r\n\r\n<script>\r\nimport editor from '../editor/index.vue';\r\nexport default {\r\n  name:'AppMain',\r\n  components:{\r\n    editor\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/layout/AppMain.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('editor',{staticClass:\"app-main\",staticStyle:{\"min-height\":\"100%\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-73c24249\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/layout/AppMain.vue\n// module id = null\n// module chunks = ","<template>\n    <div class=\"app-wrapper\" :class=\"{hideSidebar:!sidebar.opened}\">\n        <div class=\"sidebar-wrapper\">\n            <Sidebar class=\"sidebar-container\"/>\n        </div>\n        <!--<div class=\"navbar-container\"><Navbar/></div>-->\n        <div class=\"main-container\">\n            <Navbar/>\n            <App-main/>\n        </div>\n    </div>\n</template>\n\n<script>\n    // import { Navbar, Sidebar, AppMain } from 'views/layout';\n    import Navbar from './Navbar';\n    import Sidebar from './Sidebar';\n    import AppMain from './AppMain.vue';\n\n\n    export default {\n      name: 'layout',\n      components: {\n        Navbar,\n        Sidebar,\n        AppMain\n      },\n      computed: {\n        sidebar() {\n           return this.$store.state.app.sidebar;\n        }\n      }\n    }\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n    @import \"src/styles/mixin.scss\";\n\n    .app-wrapper {\n        @include clearfix;\n        position: relative;\n        height: 100%;\n        width: 100%;\n        &.hideSidebar {\n            .sidebar-wrapper {\n                transform: translate(-260px, 0);\n                .sidebar-container {\n                    transform: translate(258px, 0);\n                }\n                &:hover {\n                    transform: translate(0, 0);\n                    .sidebar-container {\n                        transform: translate(0, 0);\n                    }\n                }\n            }\n            .main-container{\n                margin-left: 40px;\n            }\n        }\n        .sidebar-wrapper {\n            width: 300px;\n            position: fixed;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            z-index: 1001;\n            overflow-x: hidden;\n            transition: all .28s ease-out;\n            @include scrollBar;\n        }\n        .sidebar-container {\n            transition: all .28s ease-out;\n        }\n        .main-container {\n            position: fixed;\n            min-height: 100%;\n            transition: all .28s ease-out;\n            margin-left: 300px;\n        }\n        /*.navbar-container {*/\n           /*min-height: 100%;*/\n           /*transition: all .28s ease-out;*/\n           /*margin-left: 0px;*/\n         /*}*/\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/layout/Layout.vue","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AppMain.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AppMain.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73c24249\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./AppMain.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/layout/AppMain.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-wrapper\",class:{hideSidebar:!_vm.sidebar.opened}},[_c('div',{staticClass:\"sidebar-wrapper\"},[_c('Sidebar',{staticClass:\"sidebar-container\"})],1),_vm._v(\" \"),_c('div',{staticClass:\"main-container\"},[_c('Navbar'),_vm._v(\" \"),_c('App-main')],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-20c043af\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/layout/Layout.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-20c043af\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Layout.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Layout.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Layout.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-20c043af\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Layout.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-20c043af\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/layout/Layout.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\r\nimport Router from 'vue-router';\r\n\r\n/* layout */\r\nimport Layout from '../components/layout/Layout';\r\n\r\n\r\n\r\n/* dashboard */\r\nconst editor = () => import('../components/editor/index');\r\n\r\n\r\n\r\nVue.use(Router);\r\n\r\n /**\r\n  * icon : the icon show in the sidebar\r\n  * hidden : if hidden:true will not show in the sidebar\r\n  * redirect : if redirect:noredirect will not redirct in the levelbar\r\n  * noDropdown : if noDropdown:true will not has submenu\r\n  * meta : { role: ['admin'] }  will control the page role\r\n  **/\r\n\r\n // path和component.  path 指路径，component 指的是组件\r\nexport const constantRouterMap = [\r\n  {\r\n    path: '/editor',\r\n    component: Layout,\r\n    redirect: '/editor/index',\r\n    hidden: true,\r\n    icon: 'xinrenzhinan',\r\n    noDropdown: true,\r\n    children: [{ path: 'index', component: editor, name: '编辑器' }]\r\n  }\r\n\r\n\r\n]\r\n\r\nexport default new Router({\r\n  // mode: 'history', //后端支持可开\r\n  scrollBehavior: () => ({ y: 0 }),\r\n  routes: constantRouterMap\r\n});\r\n\r\n// export const asyncRouterMap = [\r\n//   {\r\n//     path: '/permission',\r\n//     component: Layout,\r\n//     redirect: '/permission/index',\r\n//     name: '权限测试',\r\n//     icon: 'quanxian',\r\n//     meta: { role: ['admin'] },\r\n//     noDropdown: true,\r\n//     children: [{ path: 'index', component: Permission, name: '权限测试页', meta: { role: ['admin'] } }]\r\n//   },\r\n//   {\r\n//     path: '/components',\r\n//     component: Layout,\r\n//     redirect: '/components/index',\r\n//     name: '组件',\r\n//     icon: 'zujian',\r\n//     children: [\r\n//       { path: 'index', component: componentsIndex, name: '介绍 ' },\r\n//       { path: 'tinymce', component: Tinymce, name: '富文本编辑器' },\r\n//       { path: 'markdown', component: Markdown, name: 'Markdown' },\r\n//       { path: 'jsoneditor', component: JsonEditor, name: 'JSON编辑器' },\r\n//       { path: 'dndlist', component: DndList, name: '列表拖拽' },\r\n//       { path: 'splitpane', component: SplitPane, name: 'SplitPane' },\r\n//       { path: 'avatarupload', component: AvatarUpload, name: '头像上传' },\r\n//       { path: 'dropzone', component: Dropzone, name: 'Dropzone' },\r\n//       { path: 'sticky', component: Sticky, name: 'Sticky' },\r\n//       { path: 'countto', component: CountTo, name: 'CountTo' },\r\n//       { path: 'mixin', component: Mixin, name: '小组件' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     path: '/charts',\r\n//     component: Layout,\r\n//     redirect: '/charts/index',\r\n//     name: '图表',\r\n//     icon: 'tubiaoleixingzhengchang',\r\n//     children: [\r\n//       { path: 'index', component: chartIndex, name: '介绍' },\r\n//       { path: 'keyboard', component: KeyboardChart, name: '键盘图表' },\r\n//       { path: 'keyboard2', component: KeyboardChart2, name: '键盘图表2' },\r\n//       { path: 'line', component: LineMarker, name: '折线图' },\r\n//       { path: 'mixchart', component: MixChart, name: '混合图表' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     path: '/errorpage',\r\n//     component: Layout,\r\n//     redirect: 'noredirect',\r\n//     name: '错误页面',\r\n//     icon: '404',\r\n//     children: [\r\n//       { path: '401', component: Err401, name: '401' },\r\n//       { path: '404', component: Err404, name: '404' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     path: '/errlog',\r\n//     component: Layout,\r\n//     redirect: 'noredirect',\r\n//     name: 'errlog',\r\n//     icon: 'bug',\r\n//     noDropdown: true,\r\n//     children: [{ path: 'log', component: ErrorLog, name: '错误日志' }]\r\n//   },\r\n//   {\r\n//     path: '/excel',\r\n//     component: Layout,\r\n//     redirect: 'noredirect',\r\n//     name: 'excel',\r\n//     icon: 'EXCEL',\r\n//     noDropdown: true,\r\n//     children: [{ path: 'download', component: ExcelDownload, name: '导出excel' }]\r\n//   },\r\n//   {\r\n//     path: '/theme',\r\n//     component: Layout,\r\n//     redirect: 'noredirect',\r\n//     name: 'theme',\r\n//     icon: 'theme',\r\n//     noDropdown: true,\r\n//     children: [{ path: 'index', component: Theme, name: '换肤' }]\r\n//   },\r\n//   {\r\n//     path: '/example',\r\n//     component: Layout,\r\n//     redirect: 'noredirect',\r\n//     name: '综合实例',\r\n//     icon: 'zonghe',\r\n//     children: [\r\n//       {\r\n//         path: '/table',\r\n//         component: TableLayout,\r\n//         redirect: '/table/table',\r\n//         name: 'table',\r\n//         children: [\r\n//           { path: 'dynamictable', component: DynamicTable, name: '动态table' },\r\n//           { path: 'dragtable', component: DragTable, name: '拖拽table' },\r\n//           { path: 'inline_edit_table', component: InlineEditTable, name: 'table内编辑' },\r\n//           { path: 'table', component: Table, name: '综合table' }\r\n//         ]\r\n//       },\r\n//       { path: 'form/edit', component: Form, name: '编辑form', meta: { isEdit: true } },\r\n//       { path: 'form/create', component: Form, name: '创建form' }\r\n//     ]\r\n//   },\r\n//   { path: '*', redirect: '/404', hidden: true }\r\n// ];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport * as THREE from 'three';\nimport Vue from 'vue'\nimport App from './App'\nimport store from './store';\nimport router from './router';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-default/index.css';\nimport './assets/custom-theme/index.css'; // 换肤版本element-ui css https://github.com/PanJiaChen/custom-element-theme\nimport 'normalize.css/normalize.css';// normalize.css 样式格式化\nimport './styles/index.scss'; // 全局自定义的css样式\n//引入axios\nimport axios from \"axios\";\nVue.prototype.$ajax = axios;\n\nVue.config.productionTip = false\n\nVue.use(ElementUI);\nVue.use(THREE);\n\n/* eslint-disable no-new */\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app');\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template>\n    <div id=\"container\" class=\"panoramaContent\">\n      <!--<video controls=\"controls\" height=\"300px\" preload=\"metadata\" id=\"video\"-->\n             <!--style=\"display: block; position: absolute; left: 15px; top: 75px;\">-->\n        <!--<source src=\"../../../static/movies/example.mp4\" type=\"video/mp4\">-->\n      <!--</video>-->\n    </div>\n</template>\n\n<script>\nimport $ from 'jquery'\nlet scene = \"\";\nlet camera = \"\";\nlet renderer = \"\";\nlet isUserInteracting = false;\nlet lon = 0;\nlet lat = 0;\nlet onPointerDownPointerX = \"\";\nlet onPointerDownLon = \"\";\nlet onPointerDownPointerY = \"\";\nlet onPointerDownLat = \"\";\nlet phi = 0;\nlet theta = 0;\nlet xPositionArr = [];\nlet yPositionArr = [];\nlet zPositionArr = [];\nlet startV;\nlet mesh;\nlet arr = [];\nlet uuid;//四变形面片的uuid\nexport default {\n  name: \"equirectangular\",\n  computed: {\n    imgUrl() {\n      let fileUrl = this.$store.state.test.imgFile.fileUrl;\n      return fileUrl;\n    },\n    isSubmit() {\n      let isSubmit = this.$store.state.test.isSubmit;\n      return isSubmit;\n    },\n    //取得跳转热点信息\n    drawedHotspots() {\n      let sum = this.$store.state.test.sum;\n      for (let i = 0; i < sum.length; i++) {\n        let temp = sum[i].imgFile.fileUrl;\n        console.log(temp);\n        console.log(this.imgUrl);\n        if (temp[0] == this.imgUrl[0]) {\n          return sum[i].jumpHotSpots;\n        }\n      }\n      return [];\n    },\n    //取得图片热点信息,需要改\n    drawedImgHotSpots() {\n      let sum = this.$store.state.test.sum;\n      for (let i = 0; i < sum.length; i++) {\n        let temp = sum[i].imgFile.fileUrl;\n        if (temp[0] == this.imgUrl[0]) {\n          return sum[i].urlHotSpots.concat(sum[i].imageHotSpots);\n        }\n      }\n      return [];\n    },\n    //获得删除热点的状态信息\n    newIsDeleteHotSpot() {\n      let newIsDeleteHotSpot = this.$store.state.test.newIsDeleteHotSpot;\n      return newIsDeleteHotSpot;\n    },\n    activeJumpHotSpot() {\n      return this.$store.state.test.activeJumpHotSpot;\n    },\n    inactiveJumpHotSpot() {\n      return this.$store.state.test.inactiveJumpHotSpot;\n    },\n    activeImageHotSpot() {\n      return this.$store.state.test.activeImageHotSpot;\n    },\n    inactiveImageHotSpot() {\n      return this.$store.state.test.inactiveImageHotSpot;\n    },\n    activeUrlHotSpot() {\n      return this.$store.state.test.activeUrlHotSpot;\n    },\n    inactiveUrlHotSpot() {\n      return this.$store.state.test.inactiveUrlHotSpot;\n    },\n    sceneDelete(){\n      return this.$store.state.test.sceneDelete;\n    },\n\n    //视频热点的参数\n    transformX() {\n        return this.$store.state.test.isVideoTransformX;\n    },\n    transformY() {\n      return this.$store.state.test.isVideoTransformY;\n    },\n    rotate() {\n      return this.$store.state.test.isVideoRotate;\n    },\n    scale() {\n      return this.$store.state.test.isVideoScale;\n    },\n  },\n  watch: {\n    imgUrl(newvalue) {\n      document.getElementById(\"container\").innerHTML = \"\";\n      //改变了场景后将state.target和state.hotSpots清空\n      this.$store.commit(\"clearHotSpots\");\n      this.init(newvalue);\n      this.animate();\n    },\n    //找出所有的热点，注意这里的热点位置信息需要转换(转换关系1.25倍)\n    isSubmit() {\n      let children = scene.children;\n      let imgHotSpots = [];\n      let sprites = [];\n      let hotUrl = this.$store.state.test.hotUrl;\n      let m = 0;\n      for (let i = 0, len = children.length; i < len; i++) {\n        if (children[i].type.toLowerCase() === \"sprite\") {\n          let panAndTilt = this.calculatePanandTilt(\n            children[i].position.x * 1.25,\n            children[i].position.y * 1.25,\n            children[i].position.z * 1.25\n          );\n          sprites.push({\n            panAndTilt: panAndTilt,\n            position: [\n              children[i].position.x * 1.25,\n              children[i].position.y * 1.25,\n              children[i].position.z * 1.25\n            ]\n          });\n        }\n        if (children[i].material.type.toLowerCase() === \"meshnormalmaterial\") {\n          //计算四个点的panandTilt\n          let polyhotspot = [];\n          for (\n            //vertices代表构成了几何体的顶点\n            let j = 0, len = children[i].geometry.vertices.length;\n            j < len;\n            j++\n          ) {\n            polyhotspot.push(\n              this.calculatePanandTilt(\n                children[i].geometry.vertices[j].x,\n                children[i].geometry.vertices[j].y,\n                children[i].geometry.vertices[j].z\n              )\n            );\n          }\n          //这里的target是用户上传的图片热点图片路径，暂时先写死images/temp.png\n          //imgHotSpots.push({'panAndTilt':polyhotspot,'position':children[i].geometry.vertices,'target':null,'hotUrl':hotUrl[m++]});\n          imgHotSpots.push({\n            panAndTilt: polyhotspot,\n            position: children[i].geometry.vertices//vertices代表构成了几何体的顶点\n          });\n        }\n      }\n      //提交到state中\n      this.$store.dispatch(\"hotSpots\", {sprites: sprites});\n      this.$store.dispatch(\"imgHotSpots\", {imgHotSpots: imgHotSpots});\n    },\n\n    //监听删除热点信息的改变并执行函数\n    newIsDeleteHotSpot() {\n      //热点管理删除图像热点\n      if (this.$store.state.test.newIsDeleteHotSpot) {\n        //如果是跳转热点则将其删除\n        if (this.$store.state.test.pid === 4) {\n          this.deleteJumpHotSpot(this.$store.state.test);\n        }\n        //如果是图像热点则将其删除\n        if (this.$store.state.test.pid === 6 || this.$store.state.test.pid === 7) {\n          this.deleteImageHotSpot(this.$store.state.test);\n        }\n      }\n    },\n    //点击热点管理的跳转热点区域框则变为新的热点\n    activeJumpHotSpot() {\n      //当前场景下遍历该类型热点，判断是否拥有active属性\n      for (let i = 0; i < this.$store.state.test.jumpHotSpots.length; i++) {\n        if (this.$store.state.test.jumpHotSpots[i].hasOwnProperty(\"active\")) {\n          //删除旧的热点(红)\n          this.deleteJumpHotSpot(this.$store.state.test.jumpHotSpots[i]);\n          //绘制新热点(蓝)\n          this.drawJumpHotSpot(this.$store.state.test.jumpHotSpots[i].position,\"static/textures/hotspot.svg\");\n          delete this.$store.state.test.jumpHotSpots[i].active;\n        }\n      }\n      for (let i = 0; i < this.$store.state.test.jumpHotSpots.length; i++) {\n      if (Math.round(this.$store.state.test.jumpHotSpots[i].position[0]) ===\n        Math.round(this.$store.state.test.activePost.children[0].position[0]) &&\n        Math.round(this.$store.state.test.jumpHotSpots[i].position[1]) ===\n        Math.round(this.$store.state.test.activePost.children[0].position[1]) &&\n        Math.round(this.$store.state.test.jumpHotSpots[i].position[2]) ===\n        Math.round(this.$store.state.test.activePost.children[0].position[2])) {\n        this.$store.state.test.jumpHotSpots[i].active = true;\n        //删除旧的热点(蓝)\n        this.deleteJumpHotSpot(this.$store.state.test.jumpHotSpots[i]);\n        //绘制新热点(红)\n        this.drawJumpHotSpot(this.$store.state.test.activePost.children[0].position,\"static/textures/Clickhotspot.svg\");\n      }\n    }\n    },\n    //修改热点管理的跳转信息则变会原来的热点\n    inactiveJumpHotSpot(){\n      //当前场景下遍历该类型热点，判断是否拥有active属性\n      for (let i = 0; i < this.$store.state.test.jumpHotSpots.length; i++) {\n        if (this.$store.state.test.jumpHotSpots[i].hasOwnProperty(\"active\")) {\n          //删除旧的热点(红)\n          //console.log(scene);\n          this.deleteJumpHotSpot(this.$store.state.test.jumpHotSpots[i]);\n          //绘制新热点(蓝)\n          this.drawJumpHotSpot(this.$store.state.test.jumpHotSpots[i].position,\"static/textures/hotspot.svg\");\n          //删除添加的active属性\n          delete this.$store.state.test.jumpHotSpots[i].active;\n        }\n      }\n    },\n    //点击热点管理的图像热点区域框则变为新的热点\n    activeImageHotSpot() {\n      //当前场景下遍历该类型热点，判断是否拥有active属性\n      for (let i = 0; i < this.$store.state.test.imageHotSpots.length; i++) {\n        if (this.$store.state.test.imageHotSpots[i].hasOwnProperty(\"active\")) {\n          //删除旧的图像热点(Lambert)\n          this.deleteImageHotSpot(this.$store.state.test.imageHotSpots[i]);\n          //绘制点击后的新热点(normal)\n          this.drawImageHotSpot(this.$store.state.test.imageHotSpots[i].position);\n          delete this.$store.state.test.imageHotSpots[i].active;\n        }\n      }\n      for (let i = 0; i < this.$store.state.test.imageHotSpots.length; i++) {\n        if (Math.round(this.$store.state.test.imageHotSpots[i].position[0].x) ===\n          Math.round(this.$store.state.test.activePost.children[0].position[0].x) &&\n          Math.round(this.$store.state.test.imageHotSpots[i].position[1].x) ===\n          Math.round(this.$store.state.test.activePost.children[0].position[1].x) &&\n          Math.round(this.$store.state.test.imageHotSpots[i].position[2].x) ===\n          Math.round(this.$store.state.test.activePost.children[0].position[2].x) &&\n          Math.round(this.$store.state.test.imageHotSpots[i].position[3].x) ===\n          Math.round(this.$store.state.test.activePost.children[0].position[3].x)) {\n          this.$store.state.test.imageHotSpots[i].active = true;\n          //删除旧的热点(normal)\n          this.deleteImageHotSpot(this.$store.state.test.imageHotSpots[i]);\n          //绘制点击后的新热点(Lambert)\n          this.drawNewImageHotSpot(this.$store.state.test.imageHotSpots[i].position);\n          }\n        }\n    },\n    //修改热点管理的图像热点信息则变为新的热点\n    inactiveImageHotSpot(){\n      //当前场景下遍历该类型热点，判断是否拥有active属性\n      for (let i = 0; i < this.$store.state.test.imageHotSpots.length; i++) {\n        if (this.$store.state.test.imageHotSpots[i].hasOwnProperty(\"active\")) {\n          //删除旧的热点(Lambert)\n          this.deleteImageHotSpot(this.$store.state.test.imageHotSpots[i]);\n          //绘制点击后的新热点(normal)\n          this.drawImageHotSpot(this.$store.state.test.imageHotSpots[i].position);\n          delete this.$store.state.test.imageHotSpots[i].active;\n        }\n      }\n    },\n    //点击热点管理的Url热点区域框则变为新的热点\n    activeUrlHotSpot(){\n      //当前场景下遍历该类型热点，判断是否拥有active属性\n      for (let i = 0; i < this.$store.state.test.urlHotSpots.length; i++) {\n        if (this.$store.state.test.urlHotSpots[i].hasOwnProperty(\"active\")) {\n          //删除旧的图像热点(Lambert)\n          this.deleteImageHotSpot(this.$store.state.test.urlHotSpots[i]);\n          //绘制点击后的新热点(normal)\n          this.drawImageHotSpot(this.$store.state.test.urlHotSpots[i].position);\n          delete this.$store.state.test.urlHotSpots[i].active;\n        }\n      }\n      for (let i = 0; i < this.$store.state.test.urlHotSpots.length; i++) {\n        if (Math.round(this.$store.state.test.urlHotSpots[i].position[0].x) ===\n          Math.round(this.$store.state.test.activePost.children[0].position[0].x) &&\n          Math.round(this.$store.state.test.urlHotSpots[i].position[1].x) ===\n          Math.round(this.$store.state.test.activePost.children[0].position[1].x) &&\n          Math.round(this.$store.state.test.urlHotSpots[i].position[2].x) ===\n          Math.round(this.$store.state.test.activePost.children[0].position[2].x)){\n          this.$store.state.test.urlHotSpots[i].active = true;\n          //删除旧的热点(normal)\n          this.deleteImageHotSpot(this.$store.state.test.urlHotSpots[i]);\n          //绘制点击后的新热点(Lambert)\n          this.drawNewImageHotSpot(this.$store.state.test.urlHotSpots[i].position);\n        }\n      }\n    },\n    //修改热点管理的Url热点信息则变为新的热点\n    inactiveUrlHotSpot() {\n      //当前场景下遍历该类型热点，判断是否拥有active属性\n      for (let i = 0; i < this.$store.state.test.urlHotSpots.length; i++) {\n        if (this.$store.state.test.urlHotSpots[i].hasOwnProperty(\"active\")) {\n          //删除旧的图像热点(Lambert)\n          this.deleteImageHotSpot(this.$store.state.test.urlHotSpots[i]);\n          //绘制点击后的新热点(normal)\n          this.drawImageHotSpot(this.$store.state.test.urlHotSpots[i].position);\n          delete this.$store.state.test.urlHotSpots[i].active;\n        }\n      }\n    },\n    //删除场景需要把arr的内容也删除\n    sceneDelete(){\n      this.$store.commit(\"saveimgFile\",{fileUrl:[],fileName:''});\n    },\n\n    //监听视频热点的平移旋转和放缩\n    transformX(){\n      //把之前的四边形热点删除\n      for (let i = 0; i < scene.children.length ; i++) {\n        if(scene.children[i].uuid===uuid){\n          scene.children.splice(i, 1);\n        }\n      }\n      //绘制平移之后新的热点\n      //this.drawVideoHotSpot(this.$store.state.test.oldselected);\n\n      //demo\n      this.newDrawVideoHotSpotX(this.$store.state.test.oldselected,this.$store.state.test.valueX);\n    },\n    transformY(){\n      //把之前的四边形热点删除\n      for (let i = 0; i < scene.children.length ; i++) {\n        if(scene.children[i].uuid===uuid){\n          scene.children.splice(i, 1);\n        }\n      }\n      //绘制平移之后新的热点\n      this.newDrawVideoHotSpotY(this.$store.state.test.oldselected,this.$store.state.test.valueY);\n    },\n    rotate(){\n      //把之前的四边形热点删除\n      for (let i = 0; i < scene.children.length ; i++) {\n        if(scene.children[i].uuid===uuid){\n          scene.children.splice(i, 1);\n        }\n      }\n\n      //绘制旋转之后新的热点\n      //this.drawRotateVideoHotSpot(this.$store.state.test.oldselected,this.$store.state.test.videoRotate);\n      this.newDrawVideoHotSpotR(this.$store.state.test.oldselected,this.$store.state.test.valueR);\n    },\n    scale(){\n      //把之前的四边形热点删除\n      for (let i = 0; i < scene.children.length ; i++) {\n        if(scene.children[i].uuid===uuid){\n          scene.children.splice(i, 1);\n        }\n      }\n      //绘制旋转之后新的热点\n      this.drawScaleVideoHotSpot(this.$store.state.test.oldselected,this.$store.state.test.videoScale);\n    }\n  },\n  mounted() {\n    //获取xml的方法\n    this.readXMl();\n    this.init(this.imgUrl);\n    this.animate();\n  },\n\n  methods: {\n    readXMl: function (){\n      //把xml文件传进来\n      //var arr = [];\n      $.ajax({\n        url: \"static/Test.xml\",\n        dataType: 'xml',\n        type: 'GET',\n        timeout: 2000,\n        async:false,\n        error: function(err)\n        {\n          alert(\"加载XML文件出错！\");\n          // console.log(err);\n        },\n        success: function(xml)\n        {\n          var panorama = $(xml).find(\"panorama\");\n          var len = $(xml).find(\"panorama\").length;\n          for (let i = 0; i <len; i++) {\n            let obj={\n              panorama:[],\n              input:[],\n              polystyle:[],\n              hotspot:[],\n              polyhotspot:{\n                urlHotSpots:[],\n                imageHotSpots:[]\n              },\n              fileArr:[],\n\n            };\n            let obj3={\n              fileName:[],\n              fileUrl:[]\n            };\n            obj.panorama=panorama.eq(i).attr(\"id\");\n            obj3.fileName=panorama.eq(i).find(\"input\").attr(\"fileName\");\n            obj3.fileUrl=panorama.eq(i).find(\"input\").attr(\"fileUrl\");\n            obj.fileArr.push(obj3);\n            obj.input=panorama.eq(i).find(\"input\").attr(\"leveltileurl\");\n            obj.polystyle=panorama.eq(i).find(\"polystyle\").attr(\"mode\");\n            let len1 = panorama.eq(i).find(\"hotspot\").length;//跳转热点的个数\n            let hotspot = panorama.eq(i).find(\"hotspot\");\n            let polyhotspot = panorama.eq(i).find(\"polyhotspot\");\n            let len2 = polyhotspot.length;//图像热点的个数\n\n            for (let j = 0; j <len1 ; j++) {\n              let obj1={\n                tilt:[],\n                url:[],\n                id:[],\n                position:[],\n                panAndTilt:[]\n              };\n\n              obj1.panAndTilt[0]=hotspot.eq(j).attr(\"pan\");\n              obj1.panAndTilt[1]=hotspot.eq(j).attr(\"tilt\");\n              obj1.url=hotspot.eq(j).attr(\"url\");\n              obj1.title=hotspot.eq(j).attr(\"title\");\n              obj1.id=hotspot.eq(j).attr(\"id\");\n              obj1.position[0]=hotspot.eq(j).attr(\"jumpHotSpotsx\");\n              obj1.position[1]=hotspot.eq(j).attr(\"jumpHotSpotsy\");\n              obj1.position[2]=hotspot.eq(j).attr(\"jumpHotSpotsz\");\n\n              obj.hotspot.push(obj1);\n            }\n            for (let j = 0; j <len2 ; j++) {\n\n              if(polyhotspot.eq(j).attr(\"id\")===\"hpimage\"){\n                let obj1={\n                  position:[],\n                  target:[],\n                  panAndTilt:[],\n                };\n\n                obj1.target=polyhotspot.eq(j).attr(\"target\");\n                let vertex=polyhotspot.eq(j).find(\"vertex\");\n                for (let k = 0; k <vertex.length; k++) {\n                  obj1.panAndTilt[k]=new Array(2);\n                  obj1.position[k]={\n                    x:[],\n                    y:[],\n                    z:[]\n                  };\n                  obj1.panAndTilt[k][0]=vertex.eq(k).attr(\"pan\");\n                  obj1.panAndTilt[k][1]=vertex.eq(k).attr(\"tilt\");\n                  obj1.position[k].x=vertex.eq(k).attr(\"imageHotSpotsx\");\n                  obj1.position[k].y=vertex.eq(k).attr(\"imageHotSpotsy\");\n                  obj1.position[k].z=vertex.eq(k).attr(\"imageHotSpotsz\");\n                }\n\n                obj.polyhotspot.imageHotSpots.push(obj1);\n              }else{\n                let obj1={\n                  position:[],\n                  id:[],\n                  url:[],\n                  panAndTilt:[]\n                };\n\n                obj1.id=polyhotspot.eq(j).attr(\"id\");\n                obj1.url=polyhotspot.eq(j).attr(\"url\");\n                let vertex=polyhotspot.eq(j).find(\"vertex\");\n                for (let k = 0; k <vertex.length; k++) {\n                  obj1.panAndTilt[k]=new Array(2);\n                  obj1.position[k]={\n                    x:[],\n                    y:[],\n                    z:[]\n                  };\n                  obj1.panAndTilt[k][0]=vertex.eq(k).attr(\"pan\");\n                  obj1.panAndTilt[k][1]=vertex.eq(k).attr(\"tilt\");\n                  obj1.position[k].x=vertex.eq(k).attr(\"urlHotSpotsx\");\n                  obj1.position[k].y=vertex.eq(k).attr(\"urlHotSpotsy\");\n                  obj1.position[k].z=vertex.eq(k).attr(\"urlHotSpotsz\");\n                }\n\n                obj.polyhotspot.urlHotSpots.push(obj1);\n              }\n            }\n            arr.push(obj);\n          }\n        }\n      });\n      //把热点信息提交给status,必须保证在status中没有该场景信息才添加\n      let state = this.$store.state.test;\n      for (let i = 0; i < arr.length; i++) {\n        state.fileUrlArr.push(arr[i].fileArr[0]);\n      }\n    },\n    init: function (imgurl) {\n      if (imgurl.length > 1) {\n        alert(\n          \"抱歉，一张图请选择panorama1，六张图请选择panorama6且只支持cubeFaces\"\n        );\n        return;\n      }\n      let container = \"\";\n      container = document.getElementById(\"container\");\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(\n        75,\n        (window.innerWidth - 340) / (window.innerHeight - 90),\n        1,\n        1100\n      );\n      camera.target = new THREE.Vector3(0, 0, 0);\n      const geometry = new THREE.SphereGeometry(500, 60, 40);\n      geometry.scale(-1, 1, 1);\n      // const material = new THREE.MeshBasicMaterial({\n      //     map: new THREE.TextureLoader().load('http://172.28.211.16:8010/M00/01/03/rBzTEFsg8myAFSMyAEFP4gt3Z0E13.jpeg')\n      // });\n      // mesh = new THREE.Mesh(geometry, material);\n      // scene.add(mesh);\n\n      //防止跨域用canvas作为纹理\n      let canvas = document.createElement(\"canvas\");\n      canvas.style.backgroundColor = \"rgba(255,255,255,0)\";\n      let context = canvas.getContext(\"2d\");\n      let img = new Image();\n      img.src = imgurl[0];\n\n      // img.src='http://172.28.211.16:8010/M00/02/03/rBzTEFu9U7KAGMh7AB9vhFs03DM33.jpeg';\n      // img.crossOrigin = \"Anonymous\";\n\n      // img.src='http://172.28.211.16:8010/M00/01/03/rBzTEFsg8myAFSMyAEFP4gt3Z0E13.jpeg';\n      // img.src='';      //绘制全景图\n      img.onload = function () {\n        canvas.width = this.width;\n        canvas.height = this.height;\n        context.drawImage(img, 0, 0, this.width, this.height);\n        let texture = new THREE.Texture();\n        texture.image = canvas;\n        texture.needsUpdate = true;//开启纹理更新\n        texture.minFilter = THREE.LinearFilter;//minFilter属性：指定纹理如何缩小\n        let material = new THREE.MeshBasicMaterial({\n          map: texture,\n          transparent: false\n        });\n        mesh = new THREE.Mesh(geometry, material);\n        scene.add(mesh);\n      };\n\n      //画已经保存的热点\n      this.drawJumpHotSpots(this.drawedHotspots,\"static/textures/hotspot.svg\");\n      //画已经保存的图片热点\n      this.drawImageHotSpots(this.drawedImgHotSpots);\n\n      //判断xml字符串中的场景与目前所在场景相同的是哪一个\n      let count = -1;\n      let state = this.$store.state.test;\n      for (let i = 0; i <arr.length; i++) {\n        if(arr[i].fileArr[0].fileUrl===state.imgFile.fileUrl[0]){\n          count = i;\n        }\n      }\n\n      if(count !== -1){\n        //把相同场景中的热点信息commit给state\n        let  len = arr[count].hotspot.length;\n\n        for (let j = 0; j <len ; j++) {\n          let obj={};\n          obj.hotTarget=arr[count].hotspot[j].url.replace(\"{\",\"\").replace(\"}\",\"\").replace('node', \"场景\");\n          obj.hotIntroduction=arr[count].hotspot[j].title.replace(\"{\",\"\").replace(\"}\",\"\");\n          obj.position=arr[count].hotspot[j].position;\n          obj.panAndTilt=arr[count].hotspot[j].panAndTilt;\n          state.jumpHotSpots.push(obj);\n        }\n        let len2 = arr[count].polyhotspot.imageHotSpots.length;\n        let len3 = arr[count].polyhotspot.urlHotSpots.length;\n        for (let j = 0; j < len3; j++) {\n          let obj={};\n          let reg2 = /([^/]+)$/;\n          obj.hotUrl=arr[count].polyhotspot.urlHotSpots[j].url.match(reg2)[1];\n          obj.position=arr[count].polyhotspot.urlHotSpots[j].position;\n          obj.panAndTilt=arr[count].polyhotspot.urlHotSpots[j].panAndTilt;\n          state.urlHotSpots.push(obj);\n        }\n        for (let j = 0; j < len2; j++) {\n          let obj={};\n          let reg2 = /([^/]+)$/;\n          obj.hotImage=arr[count].polyhotspot.imageHotSpots[j].target.match(reg2)[1];\n          obj.position=arr[count].polyhotspot.imageHotSpots[j].position;\n          obj.panAndTilt=arr[count].polyhotspot.imageHotSpots[j].panAndTilt;\n          state.imageHotSpots.push(obj);\n        }\n\n        //当xml字符串中有场景则把场景中的热点信息进行绘制，必须判断xml字符串中的场景与目前所在场景相同才绘制热点\n        //绘制xml字符串中的跳转热点\n        this.drawJumpHotSpots(arr[count].hotspot,\"static/textures/hotspot.svg\");\n        //绘制xml字符串中的图像热点\n        this.drawImageHotSpots(arr[count].polyhotspot.imageHotSpots);\n        this.drawImageHotSpots(arr[count].polyhotspot.urlHotSpots);\n      }\n\n      this.$store.commit('addArr', arr);\n\n      renderer = new THREE.WebGLRenderer();\n      // renderer=new THREE.CanvasRenderer();\n\n      renderer.setPixelRatio(window.devicePixelRatio);\n      //确保区域大小\n      renderer.setSize(window.innerWidth - 340, window.innerHeight - 90);\n      container.appendChild(renderer.domElement);\n      // 当鼠标指针移动到元素上方，并按下鼠标按键（左、右键均可）\n      document\n        .getElementsByTagName(\"canvas\")[0]\n        .addEventListener(\"mousedown\", this.onDocumentMouseDown, false);\n      document\n        .getElementsByTagName(\"canvas\")[0]\n        .addEventListener(\"mousemove\", this.onDocumentMouseMove, false);\n      document\n        .getElementsByTagName(\"canvas\")[0]\n        .addEventListener(\"mouseup\", this.onDocumentMouseUp, false);\n      document\n        .getElementsByTagName(\"canvas\")[0]\n        .addEventListener(\"wheel\", this.onDocumentMouseWheel, false);//wheel鼠标滚轮\n\n      document.getElementsByTagName(\"canvas\")[0].addEventListener(\n        \"dragover\",\n        event => {\n          event.preventDefault();\n          event.dataTransfer.dropEffect = \"copy\";\n        },\n        false\n      );\n      document.getElementsByTagName(\"canvas\")[0].addEventListener(\n        \"dragenter\",\n        () => {\n          document.body.style.opacity = 0.5;\n        },\n        false\n      );\n      document.getElementsByTagName(\"canvas\")[0].addEventListener(\n        \"dragleave\",\n        () => {\n          document.body.style.opacity = 1;\n        },\n        false\n      );\n      window.addEventListener(\"resize\", this.onWindowResize, false);\n    },\n    //由于前面-340，-90这里的效果没有测试，随着页面框变化而变化\n    onWindowResize() {\n      camera.aspect = (window.innerWidth - 340) / (window.innerHeight - 90);\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth - 340, window.innerHeight - 90);\n    },\n    onDocumentMouseDown: function (event) {\n      //首先确保imgType是auto，否则添加点击事件\n      if (\n        this.$store.state.test.imgType === \"Auto\" ||\n        this.$store.state.test.imgType === \"Equirectangular\"\n      ) {\n        event.preventDefault();\n        let vector = new THREE.Vector3(); //三维坐标对象\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((event.clientX - 320) / (window.innerWidth - 340)) * 2 - 1,\n          -((event.clientY - 70) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        let intersects = raycaster.intersectObjects(scene.children);\n        //如果绘制热点属于激活状态\n        if (this.$store.state.test.isHotspot) {\n          if (intersects.length > 0) {\n            var selected = intersects[0]; //取第一个物体\n            startV = selected.point;\n            xPositionArr.push(selected.point.x);\n            yPositionArr.push(selected.point.y);\n            zPositionArr.push(selected.point.z);\n          }\n          if (xPositionArr.length == 3) {\n            document.getElementById(\"container\").style.cursor = \"default\";\n            this.$store.dispatch(\"isHotspot\");\n            let xAverage =\n              (xPositionArr[0] + xPositionArr[1] + xPositionArr[2]) / 3;\n            let yAverage =\n              (yPositionArr[0] + yPositionArr[1] + yPositionArr[2]) / 3;\n            let zAverage =\n              (zPositionArr[0] + zPositionArr[1] + zPositionArr[2]) / 3;\n            let canvas = document.createElement(\"canvas\");\n            canvas.style.backgroundColor = \"rgba(255,255,255,0)\";\n            let context = canvas.getContext(\"2d\");\n            canvas.width = 128;\n            canvas.height = 128;\n            let img = new Image();\n            //这里发布的时候会出现http://localhost:8083/web/dist/static/textures/hotspot.svg\n            img.src = \"static/textures/hotspot.svg\";\n            //发布用\n            //img.src = 'textures/hotspot.svg';\n            img.onload = function () {\n              context.drawImage(img, 0, 0);\n              let texture = new THREE.Texture(canvas);\n              texture.needsUpdate = true;\n              texture.minFilter = THREE.LinearFilter;\n              var spriteMaterial = new THREE.SpriteMaterial({\n                map: texture,\n                transparent: false\n              });\n              var sprite = new THREE.Sprite(spriteMaterial);\n              sprite.scale.set(30, 30, 30);\n              let rate = 0.8;\n              var endV = new THREE.Vector3(\n                xAverage * rate,\n                yAverage * rate,\n                zAverage * rate\n              );\n              sprite.position.copy(endV);\n              scene.add(sprite);\n              //that.$store.commit('showJumpHotSpot');\n            };\n\n            xPositionArr = [];\n            yPositionArr = [];\n            zPositionArr = [];\n          }\n          //移除热点\n        }else {\n          if (intersects.length > 0) {\n            const target = intersects[0];\n            //console.log(intersects[0])\n            try {\n              if (target.object && target.object.type.length > 0) {\n                if (target.object.type.toLowerCase() == \"sprite\") {\n                  if (this.$store.state.test.isDeleteHotSpot) {\n                    scene.remove(target.object);\n                    this.$store.commit(\"deletedHotSpot\");\n                    this.$store.commit(\"hideHotSpot\");\n                  } else {\n                    let location = target.object.position;\n                    let panAndTilt = this.calculatePanandTilt(\n                      location.x * 1.25,\n                      location.y * 1.25,\n                      location.z * 1.25\n                    );\n                    this.$store.commit(\"showJumpHotSpot\");\n                    this.$store.commit(\"saveTempLocation\", {\n                      location: [\n                        location.x * 1.25,\n                        location.y * 1.25,\n                        location.z * 1.25\n                      ],\n                      panAndTilt: panAndTilt,\n                      ID:\"JumpHotSpot\",\n                    });\n\n                  }\n                }\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        }\n        //如果绘制imageHotspot热点\n        if (this.$store.state.test.isImageHotspot) {\n          if (intersects.length > 0) {\n            var selected = intersects[0]; //取第一个物体\n            startV = selected.point;\n            xPositionArr.push(selected.point.x);\n            //console.log(\"x坐标:\" + xPositionArr);\n            yPositionArr.push(selected.point.y);\n            //console.log(\"y坐标:\" + yPositionArr);\n            zPositionArr.push(selected.point.z);\n            //console.log(\"z坐标:\" + zPositionArr);\n          }\n          //画点\n          if (xPositionArr.length == 1) {\n            let geom = new THREE.Geometry();\n            let material = new THREE.PointsMaterial({\n              color: 0x0000ff,\n              size: 10\n            });\n            geom.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[0],\n                yPositionArr[0],\n                zPositionArr[0]\n              )\n            );\n            let point = new THREE.Points(geom, material);\n            scene.add(point);\n          }\n          //画线\n          if (xPositionArr.length == 2) {\n            //粒子\n            let geom = new THREE.Geometry();\n            let material = new THREE.ParticleBasicMaterial({\n              color: 0x0000ff,\n              size: 10\n            });\n            //geom.vertices.push(new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]));\n            geom.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[1],\n                yPositionArr[1],\n                zPositionArr[1]\n              )\n            );\n            let point = new THREE.Points(geom, material);\n            scene.add(point);\n            //线\n            let line = new THREE.Geometry();\n            line.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[0],\n                yPositionArr[0],\n                zPositionArr[0]\n              )\n            );\n            line.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[1],\n                yPositionArr[1],\n                zPositionArr[1]\n              )\n            );\n            let mesh = new THREE.Line(line, material, THREE.LineSegments);\n            scene.add(mesh);\n          }\n          //画三角形\n          if (xPositionArr.length == 3) {\n            //粒子\n            let geom = new THREE.Geometry();\n            let material = new THREE.ParticleBasicMaterial({\n              color: 0x0000ff,\n              size: 10\n            });\n            //geom.vertices.push(new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]));\n            geom.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[2],\n                yPositionArr[2],\n                zPositionArr[2]\n              )\n            );\n            let point = new THREE.Points(geom, material);\n            scene.add(point);\n            //线\n            let line1 = new THREE.Geometry();\n            line1.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[1],\n                yPositionArr[1],\n                zPositionArr[1]\n              )\n            );\n            line1.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[2],\n                yPositionArr[2],\n                zPositionArr[2]\n              )\n            );\n            let mesh1 = new THREE.Line(line1, material, THREE.LineSegments);\n            scene.add(mesh1);\n            let line2 = new THREE.Geometry();\n            line2.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[2],\n                yPositionArr[2],\n                zPositionArr[2]\n              )\n            );\n            line2.vertices.push(\n              new THREE.Vector3(\n                xPositionArr[0],\n                yPositionArr[0],\n                zPositionArr[0]\n              )\n            );\n            let mesh2 = new THREE.Line(line2, material, THREE.LineSegments);\n            scene.add(mesh2);\n          }\n          if (xPositionArr.length === 4) {\n            document.getElementById(\"container\").style.cursor = \"default\";\n            this.$store.dispatch(\"isImageHotspot\");\n            //将之前的点和线删除\n            let children = scene.children;\n            for (let i = 0; i < children.length; i++) {\n              if (\n                children[i].type.toLowerCase() === \"points\" ||\n                children[i].type.toLowerCase() === \"line\"\n              ) {\n                scene.remove(children[i]);\n                i--;\n              }\n            }\n\n            var v1 = new THREE.Vector3(\n              xPositionArr[0],\n              yPositionArr[0],\n              zPositionArr[0]\n            );\n            var v2 = new THREE.Vector3(\n              xPositionArr[1],\n              yPositionArr[1],\n              zPositionArr[1]\n            );\n            var v3 = new THREE.Vector3(\n              xPositionArr[2],\n              yPositionArr[2],\n              zPositionArr[2]\n            );\n            var v4 = new THREE.Vector3(\n              xPositionArr[3],\n              yPositionArr[3],\n              zPositionArr[3]\n            );\n            //画三角面片\n            var geom = new THREE.Geometry();\n            geom.vertices.push(v1);\n            geom.vertices.push(v2);\n            geom.vertices.push(v3);\n            geom.vertices.push(v4);\n\n            let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n            let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n            let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n            let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n            let d01 =\n              (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n              (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n              (p1[2] - p0[2]) * (p1[2] - p0[2]);\n            let d02 =\n              (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n              (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n              (p2[2] - p0[2]) * (p2[2] - p0[2]);\n            let d03 =\n              (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n              (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n              (p3[2] - p0[2]) * (p3[2] - p0[2]);\n            let max = Math.max(d01, d02, d03);\n            let normal = geom.computeFaceNormals();\n\n\n            let panAndTilt = this.calculatePanandTilt((p0[0]+p1[0]+p2[0]+p3[0])/4,(p0[1]+p1[1]+p2[1]+p3[1])/4,(p0[2]+p1[2]+p2[2]+p3[2])/4);\n            console.log(panAndTilt);\n\n            function angleCalculation(a,b,c) {\n              //把a三维向量复制给vn\n              let vn = a.clone();\n              //求得vn和b的叉乘\n              vn.cross( b );\n              //将vn单位化\n              vn.normalize();\n              //把vn和c两个向量相乘\n              let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n              //用向量乘积除以对应向量的模得到夹角\n              return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n            }\n\n            if (max === d01) {\n\n              let angle=angleCalculation(v1,v2,v3);\n              if(angle>0){\n                //2在下方\n                geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n                geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n              }else{\n                //2在上方\n                geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n                geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n              }\n            }\n            if (max === d02) {\n\n              let angle=angleCalculation(v1,v3,v2);\n              if(angle>0){\n                //1在下方\n                geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n                geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n              }else{\n                //1在上方\n                geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n                geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n              }\n            }\n            if (max === d03) {\n\n              let angle=angleCalculation(v1,v4,v2);\n              if(angle>0){\n                //1在下方\n                geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n                geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n              }else{\n                //1在上方\n                geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n                geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n              }\n            }\n\n            let material = new THREE.MeshNormalMaterial({flatShading: true});\n            //let material = new THREE.MeshBasicMaterial({color:0x0000ff});\n            material.transparent = true;\n            material.opacity = 0.8;\n            let object = new THREE.Mesh(geom, material);\n\n\n            scene.add(object);\n\n            xPositionArr = [];\n            yPositionArr = [];\n            zPositionArr = [];\n          }\n          //移除热点\n        } else {\n          if (intersects.length > 0) {\n            const target = intersects[0];\n            try {\n              if (target.object && target.object.type.length > 0) {\n                if (target.object.material.type.toLowerCase() === \"meshnormalmaterial\") {\n                  if (this.$store.state.test.isDeleteHotSpot) {\n                    console.log(target.object);\n                    scene.remove(target.object);\n                    this.$store.commit(\"deletedHotSpot\");\n                    this.$store.commit(\"hideHotSpot\");\n                  } else {\n                    let location = target.object.geometry.vertices;\n                    let arr = [];\n                    for (let j = 0, len = location.length; j < len; j++) {\n                      arr.push(\n                        this.calculatePanandTilt(\n                          location[j].x,\n                          location[j].y,\n                          location[j].z\n                        )\n                      );\n                    }\n                    this.$store.commit(\"showImgHotSpot\");\n                    this.$store.commit(\"saveTempLocation\", {\n                      location: location,\n                      panAndTilt: arr,\n                      ID:\"ImgHotSpot\"\n                    });\n                  }\n                }\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        }\n        //如果绘制视频热点\n        if (this.$store.state.test.isVideoHotspot) {\n\n          //   if (intersects.length > 0) {\n        //   let selected = intersects[0];\n        //   console.log(selected);\n        //   console.log(selected.point);\n        //\n        //   let vec2 = selected.point.project(camera);\n        //   console.log(vec2);\n        //   var screenCoord = {};\n        //   screenCoord.x = (0.5 + vec2.x / 2) * (window.innerWidth - 340);\n        //   screenCoord.y = (0.5 - vec2.y / 2) * (window.innerHeight - 90);\n        //   console.log(screenCoord);\n        //   var standardVector  = new THREE.Vector3(screenCoord.x, screenCoord.y, 0.5);\n        //   console.log(standardVector.unproject(camera));\n        //\n        //\n        //   console.log(event.clientX + \",\" + event.clientY);\n        //   let halfWidth = (window.innerWidth - 340)/ 2;\n        //   let halfHeight = (window.innerHeight - 90)/ 2;\n        //   let left=vec2.x * halfWidth + halfWidth;\n        //   let top=-vec2.y * halfHeight + halfHeight;\n        //   console.log(left + \",\" + top);\n        // }\n\n          if (intersects.length > 0) {\n            let selected = intersects[0]; //取第一个物体\n            this.$store.dispatch(\"isVideoHotspot\");\n            //保存点击的中心点的屏幕二维坐标\n            let oldselected = {\n              client:[event.clientX,event.clientY],\n              select:[selected.point.x,selected.point.y,selected.point.z],\n              vector:{},\n            };\n\n            //把世界坐标保存\n            let vector = new THREE.Vector3();\n            vector.set(\n              ((oldselected.client[0] - 320) / (window.innerWidth - 340)) * 2 - 1,\n              -((oldselected.client[1] - 70) / (window.innerHeight - 90)) * 2 + 1,\n              0.5\n            );\n            vector.unproject(camera);\n            //console.log(camera.position);//打印出来是{0，0，0}\n\n            oldselected.vector = vector.clone();\n            // console.log(oldselected.client);\n            console.log(oldselected);\n            console.log(oldselected.vector);\n\n            this.drawVideoHotSpot(oldselected);\n\n            intersects = {};\n            this.$store.commit(\"saveOldSelected\",oldselected);\n          }\n\n        } else {\n          if (intersects.length > 0) {\n            const target = intersects[0];\n            try {\n              if (target.object && target.object.type.length > 0) {\n                if (target.object.material.type.toLowerCase() === \"meshlambertmaterial\") {\n                  if (this.$store.state.test.isDeleteHotSpot) {\n                    console.log(target.object);\n                    scene.remove(target.object);\n                    this.$store.commit(\"deletedHotSpot\");\n                    this.$store.commit(\"hideHotSpot\");\n                  } else {\n                    let location = target.object.geometry.vertices;\n                    let arr = [];\n                    for (let j = 0, len = location.length; j < len; j++) {\n                      arr.push(\n                        this.calculatePanandTilt(\n                          location[j].x,\n                          location[j].y,\n                          location[j].z\n                        )\n                      );\n                    }\n                    this.$store.commit(\"showVideoHotSpot\");\n                    this.$store.commit(\"saveTempLocation\", {\n                      location: location,\n                      panAndTilt: arr,\n                      ID:\"VideoHotSpot\"\n                    });\n                  }\n                }\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        }\n\n      }\n\n      isUserInteracting = true;\n      onPointerDownPointerX = event.clientX;\n      onPointerDownPointerY = event.clientY;\n      onPointerDownLon = lon;\n      onPointerDownLat = lat;\n    },\n\n    onDocumentMouseMove(event) {\n        if (isUserInteracting === true) {\n          lon = (onPointerDownPointerX - event.clientX) * 0.1 + onPointerDownLon;\n          lat = (event.clientY - onPointerDownPointerY) * 0.1 + onPointerDownLat;\n        }\n    },\n    onDocumentMouseUp() {\n      isUserInteracting = false;\n      // camera.fov += event.deltaY * 0.05;\n    },\n    onDocumentMouseWheel(event) {\n\n      var fov = camera.fov + event.deltaY * 0.05;\n      camera.fov = THREE.Math.clamp( fov, 10, 75 );\n      camera.updateProjectionMatrix();\n      let star = camera.fov;\n      console.log(\"star\"+star);\n      console.log(window.innerWidth +\",\"+ window.innerHeight);\n      // camera.fov += event.deltaY * 0.05;\n      // if (camera.fov >= 10 && camera.fov <= 110) {\n      //   camera.updateProjectionMatrix();//projectionMatrix — 投影变换矩阵\n      // }\n    },\n    animate() {\n      if (this.imgUrl.length > 1) {\n        return;\n      }\n      this.update();\n      requestAnimationFrame(this.animate);\n    },\n    update() {\n      //控制自动旋转速度\n      if (isUserInteracting === false) {\n        lon += 0;\n      }\n      lat = Math.max(-85, Math.min(85, lat));\n      phi = THREE.Math.degToRad(90 - lat);\n      theta = THREE.Math.degToRad(lon);//degToRad()方法返回与参数degrees所表示的角度相等的弧度值\n      camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n    camera.target.y = 500 * Math.cos(phi);\n    camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n    camera.lookAt(camera.target);\n    renderer.render(scene, camera);\n    },\n    //将x,y,z转化为pan和tilt\n    calculatePanandTilt(xAverage, yAverage, zAverage) {\n      let pan = 0;\n      let tilt = 0;\n      //计算出配置文件中热点的位置\n      if (-xAverage > 0 && zAverage <= 0) {//第三象限\n        pan = (Math.atan(zAverage / -xAverage) * 180) / Math.PI;\n      }\n      if (-xAverage < 0 && zAverage < 0) {//第四象限\n        pan = (Math.atan(zAverage / -xAverage) * 180) / Math.PI - 180;\n      }\n      if (-xAverage > 0 && zAverage >= 0) {//第二象限\n        pan = (Math.atan(zAverage / -xAverage) * 180) / Math.PI;\n      }\n      if (-xAverage < 0 && zAverage > 0) {//第一象限\n        pan = 180 + (Math.atan(zAverage / -xAverage) * 180) / Math.PI;\n      }\n      tilt = (Math.asin(yAverage / 500) * 180) / Math.PI;\n      return [pan, tilt];\n    },\n    //绘制多个跳转热点\n    drawJumpHotSpots(variable,newsrc){\n      for (let i = 0, len = variable.length; i < len; i++) {\n        let position = variable[i].position;\n        let canvas = document.createElement(\"canvas\");\n        canvas.style.backgroundColor = \"rgba(255,255,255,0)\";\n        let context = canvas.getContext(\"2d\");\n        canvas.width = 128;\n        canvas.height = 128;\n        let img = new Image();\n        //这里发布的时候会出现http://localhost:8083/web/dist/static/textures/hotspot.svg\n        img.src = newsrc;\n        //publish\n        //img.src = 'textures/hotspot.svg';\n        img.onload = function() {\n          context.drawImage(img, 0, 0);\n          let texture = new THREE.Texture(canvas);\n          texture.needsUpdate = true;\n          texture.minFilter = THREE.LinearFilter;\n          var spriteMaterial = new THREE.SpriteMaterial({\n            map: texture,\n            transparent: false\n          });\n          var sprite = new THREE.Sprite(spriteMaterial);\n          sprite.scale.set(30, 30, 30);\n          let rate = 0.8;\n          var endV = new THREE.Vector3(\n            position[0] * rate,\n            position[1] * rate,\n            position[2] * rate\n          );\n          sprite.position.copy(endV);\n          scene.add(sprite);\n        };\n      }\n    },\n    //绘制单个跳转热点\n    drawJumpHotSpot(variablePosition,newsrc){\n        let position = variablePosition;\n        let canvas = document.createElement(\"canvas\");\n        canvas.style.backgroundColor = \"rgba(255,255,255,0)\";\n        let context = canvas.getContext(\"2d\");\n        canvas.width = 128;\n        canvas.height = 128;\n        let img = new Image();\n        //这里发布的时候会出现http://localhost:8083/web/dist/static/textures/hotspot.svg\n        img.src = newsrc;\n        //publish\n        //img.src = 'textures/hotspot.svg';\n        img.onload = function() {\n          context.drawImage(img, 0, 0);\n          let texture = new THREE.Texture(canvas);\n          texture.needsUpdate = true;\n          texture.minFilter = THREE.LinearFilter;\n          var spriteMaterial = new THREE.SpriteMaterial({\n            map: texture,\n            transparent: false\n          });\n          var sprite = new THREE.Sprite(spriteMaterial);\n          sprite.scale.set(30, 30, 30);\n          let rate = 0.8;\n          var endV = new THREE.Vector3(\n            position[0] * rate,\n            position[1] * rate,\n            position[2] * rate\n          );\n          sprite.position.copy(endV);\n          scene.add(sprite);\n        };\n    },\n    //绘制多个图像热点(Normal)\n    drawImageHotSpots(variable){\n      for (let j = 0, len = variable.length; j < len; j++) {\n        let position = variable[j].position;\n        let v1 = new THREE.Vector3(position[0].x, position[0].y, position[0].z);\n        let v2 = new THREE.Vector3(position[1].x, position[1].y, position[1].z);\n        let v3 = new THREE.Vector3(position[2].x, position[2].y, position[2].z);\n        let v4 = new THREE.Vector3(position[3].x, position[3].y, position[3].z);\n        //画三角面片\n        let geom = new THREE.Geometry();\n        geom.vertices.push(v1);\n        geom.vertices.push(v2);\n        geom.vertices.push(v3);\n        geom.vertices.push(v4);\n\n        let p0 = [position[0].x, position[0].y, position[0].z];\n        let p1 = [position[1].x, position[1].y, position[1].z];\n        let p2 = [position[2].x, position[2].y, position[2].z];\n        let p3 = [position[3].x, position[3].y, position[3].z];\n        let d01 =\n          (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n          (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n          (p1[2] - p0[2]) * (p1[2] - p0[2]);\n        let d02 =\n          (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n          (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n          (p2[2] - p0[2]) * (p2[2] - p0[2]);\n        let d03 =\n          (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n          (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n          (p3[2] - p0[2]) * (p3[2] - p0[2]);\n        let max = Math.max(d01, d02, d03);\n        let normal = geom.computeFaceNormals();\n\n        function angleCalculation(a,b,c) {\n          //把a三维向量复制给vn\n          let vn = a.clone();\n          //求得vn和b的叉乘\n          vn.cross( b );\n          //将vn单位化\n          vn.normalize();\n          //把vn和c两个向量相乘\n          let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n          //用向量乘积除以对应向量的模得到夹角\n          return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n        }\n\n        if (max === d01) {\n\n          let angle=angleCalculation(v1,v2,v3);\n          if(angle>0){\n            //2在下方\n            geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n            geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n          }else{\n            //2在上方\n            geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n            geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n          }\n\n        }\n        if (max === d02) {\n\n          let angle=angleCalculation(v1,v3,v2);\n          if(angle>0){\n            //1在下方\n            geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n            geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n          }else{\n            //1在上方\n            geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n            geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n          }\n\n        }\n        if (max === d03) {\n\n          let angle=angleCalculation(v1,v4,v2);\n          if(angle>0){\n            //1在下方\n            geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n            geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n          }else{\n            //1在上方\n            geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n            geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n          }\n\n        }\n\n        geom.computeFaceNormals();\n        let material = new THREE.MeshNormalMaterial({ flatShading: true });\n        material.transparent = true;\n        material.opacity = 0.4;\n        let object = new THREE.Mesh(geom, material);\n        scene.add(object);\n      }\n    },\n    //绘制单个图像热点(Normal)\n    drawImageHotSpot(variablePosition){\n      let position = variablePosition;\n      let v1 = new THREE.Vector3(position[0].x, position[0].y, position[0].z);\n      let v2 = new THREE.Vector3(position[1].x, position[1].y, position[1].z);\n      let v3 = new THREE.Vector3(position[2].x, position[2].y, position[2].z);\n      let v4 = new THREE.Vector3(position[3].x, position[3].y, position[3].z);\n      //画三角面片\n      let geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [position[0].x, position[0].y, position[0].z];\n      let p1 = [position[1].x, position[1].y, position[1].z];\n      let p2 = [position[2].x, position[2].y, position[2].z];\n      let p3 = [position[3].x, position[3].y, position[3].z];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n\n      }\n\n      geom.computeFaceNormals();\n\n      let material = new THREE.MeshNormalMaterial({ flatShading: true });\n      material.transparent = true;\n      material.opacity = 0.4;\n      let object = new THREE.Mesh(geom, material);\n      scene.add(object);\n    },\n    //绘制单个图像热点(Lambert)\n    drawNewImageHotSpot(variablePosition){\n      let position = variablePosition;\n      let v1 = new THREE.Vector3(position[0].x, position[0].y, position[0].z);\n      let v2 = new THREE.Vector3(position[1].x, position[1].y, position[1].z);\n      let v3 = new THREE.Vector3(position[2].x, position[2].y, position[2].z);\n      let v4 = new THREE.Vector3(position[3].x, position[3].y, position[3].z);\n      //画三角面片\n      let geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [position[0].x, position[0].y, position[0].z];\n      let p1 = [position[1].x, position[1].y, position[1].z];\n      let p2 = [position[2].x, position[2].y, position[2].z];\n      let p3 = [position[3].x, position[3].y, position[3].z];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n\n      }\n\n      geom.computeFaceNormals();\n\n      let material = new THREE.MeshLambertMaterial({color:0x0000ff});\n      material.transparent = true;\n      material.opacity = 0.4;\n      let object = new THREE.Mesh(geom, material);\n      scene.add(object);\n    },\n    //删除跳转热点\n    deleteJumpHotSpot(pattern){\n      for (let j = 0; j < scene.children.length; j++) {\n        if (scene.children[j].type.toLowerCase() === \"sprite\") {\n          if (Math.round(scene.children[j].position.x * 1.25) === Math.round(pattern.position[0]) &&\n            Math.round(scene.children[j].position.y * 1.25) === Math.round(pattern.position[1]) &&\n            Math.round(scene.children[j].position.z * 1.25) === Math.round(pattern.position[2])) {\n            scene.children.splice(j, 1);\n            this.$store.commit(\"deletedHotSpot\");\n            this.$store.commit(\"hideHotSpot\");\n          }\n        }\n      }\n    },\n    //删除图像热点\n    deleteImageHotSpot(pattern) {\n      for (let j = 0; j < scene.children.length; j++) {\n        if (scene.children[j].type.toLowerCase() === \"mesh\") {\n          if (Math.round(scene.children[j].geometry.vertices[0].x)===Math.round(pattern.position[0].x) &&\n            Math.round(scene.children[j].geometry.vertices[1].x)===Math.round(pattern.position[1].x) &&\n            Math.round(scene.children[j].geometry.vertices[2].x)===Math.round(pattern.position[2].x) &&\n            Math.round(scene.children[j].geometry.vertices[3].x)===Math.round(pattern.position[3].x)){\n            scene.children.splice(j, 1);\n            this.$store.commit(\"deletedHotSpot\");\n            this.$store.commit(\"hideHotSpot\");\n          }\n        }\n      }\n    },\n    //绘制新的videoHotspot热点\n    drawVideoHotSpot(oldselected){\n\n      let selected = {};\n      let that = this;\n\n      selected = select(160,120);\n      //console.log(selected);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(-160,-120);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(-160,120);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(160,-120);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n\n      //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四变形\n      function select(height,width) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((oldselected.client[0] - 320 + height) / (window.innerWidth - 340)) * 2 - 1,\n          -((oldselected.client[1] - 70 + width) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        //标准设备坐标vector\n        //console.log(vector);\n        that.$store.commit(\"saveVideoGroup\",vector);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        //球体上的坐标\n        //console.log(selectPoint);\n\n        return selectPoint;\n      }\n\n\n\n      var v1 = new THREE.Vector3(\n        xPositionArr[0],\n        yPositionArr[0],\n        zPositionArr[0]\n      );\n      var v2 = new THREE.Vector3(\n        xPositionArr[1],\n        yPositionArr[1],\n        zPositionArr[1]\n      );\n      var v3 = new THREE.Vector3(\n        xPositionArr[2],\n        yPositionArr[2],\n        zPositionArr[2]\n      );\n      var v4 = new THREE.Vector3(\n        xPositionArr[3],\n        yPositionArr[3],\n        zPositionArr[3]\n      );\n      //画三角面片\n      var geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n      let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n      let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n      let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n      }\n\n      let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n      material.transparent = true;\n      material.opacity = 0.8;\n      let object = new THREE.Mesh(geom, material);\n      console.log(\"old:\");\n      console.log(object);\n      uuid = object.uuid;\n\n      scene.add(object);\n\n      xPositionArr = [];\n      yPositionArr = [];\n      zPositionArr = [];\n    },\n    //绘制旋转之后的videoHotspot热点\n    drawRotateVideoHotSpot(oldselected,theta){\n\n      let selected = {};\n\n      let rotatex1 = 200*Math.cos(Math.atan(3/4)+theta/180*Math.PI);//160\n      let rotatey1 = 200*Math.sin(Math.atan(3/4)+theta/180*Math.PI);//120\n      let rotatex2 = 200*Math.cos((Math.PI-Math.atan(3/4))+theta/180*Math.PI);//160\n      let rotatey2 = 200*Math.sin((Math.PI-Math.atan(3/4))+theta/180*Math.PI);//120\n      let rotatex3 = 200*Math.cos((Math.PI+Math.atan(3/4))+theta/180*Math.PI);//160\n      let rotatey3 = 200*Math.sin((Math.PI+Math.atan(3/4))+theta/180*Math.PI);//120\n      let rotatex4 = 200*Math.cos(-Math.atan(3/4)+theta/180*Math.PI);//160\n      let rotatey4 = 200*Math.sin(-Math.atan(3/4)+theta/180*Math.PI);//120\n\n      selected = select(rotatex1,rotatey1);\n      //console.log(selected);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(rotatex3,rotatey3);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(rotatex2,rotatey2);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(rotatex4,rotatey4);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n\n      //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四变形\n      function select(height,width) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((oldselected.client[0] - 320 + height) / (window.innerWidth - 340)) * 2 - 1,\n          -((oldselected.client[1] - 70 + width) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n        return selectPoint;\n      }\n\n      var v1 = new THREE.Vector3(\n        xPositionArr[0],\n        yPositionArr[0],\n        zPositionArr[0]\n      );\n      var v2 = new THREE.Vector3(\n        xPositionArr[1],\n        yPositionArr[1],\n        zPositionArr[1]\n      );\n      var v3 = new THREE.Vector3(\n        xPositionArr[2],\n        yPositionArr[2],\n        zPositionArr[2]\n      );\n      var v4 = new THREE.Vector3(\n        xPositionArr[3],\n        yPositionArr[3],\n        zPositionArr[3]\n      );\n      //画三角面片\n      var geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n      let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n      let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n      let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n      }\n\n      let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n      material.transparent = true;\n      material.opacity = 0.8;\n      let object = new THREE.Mesh(geom, material);\n      uuid = object.uuid;\n\n      scene.add(object);\n\n      xPositionArr = [];\n      yPositionArr = [];\n      zPositionArr = [];\n    },\n    //绘制缩放的videoHotspot热点\n    drawScaleVideoHotSpot(oldselected,scale){\n\n      let selected = {};\n\n      selected = select(160*scale,120*scale);\n      // console.log(selected);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(-160*scale,-120*scale);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(-160*scale,120*scale);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      selected = select(160*scale,-120*scale);\n      xPositionArr.push(selected.point.x);\n      yPositionArr.push(selected.point.y);\n      zPositionArr.push(selected.point.z);\n      // console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n\n      //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四变形\n      function select(height,width) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((oldselected.client[0] - 320 + height) / (window.innerWidth - 340)) * 2 - 1,\n          -((oldselected.client[1] - 70 + width) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n        return selectPoint;\n      }\n\n\n\n      var v1 = new THREE.Vector3(\n        xPositionArr[0],\n        yPositionArr[0],\n        zPositionArr[0]\n      );\n      var v2 = new THREE.Vector3(\n        xPositionArr[1],\n        yPositionArr[1],\n        zPositionArr[1]\n      );\n      var v3 = new THREE.Vector3(\n        xPositionArr[2],\n        yPositionArr[2],\n        zPositionArr[2]\n      );\n      var v4 = new THREE.Vector3(\n        xPositionArr[3],\n        yPositionArr[3],\n        zPositionArr[3]\n      );\n      //画三角面片\n      var geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n      let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n      let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n      let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n      }\n\n      let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n      material.transparent = true;\n      material.opacity = 0.8;\n      let object = new THREE.Mesh(geom, material);\n      uuid = object.uuid;\n\n      scene.add(object);\n\n      xPositionArr = [];\n      yPositionArr = [];\n      zPositionArr = [];\n    },\n\n    //屏幕二维坐标转为世界系坐标\n    deviceCoordinates(screen) {\n      let vector = new THREE.Vector3();\n      vector.set(\n        //注意：这里是根据render的size来确定的\n        ((screen.x - 320) / (window.innerWidth - 340)) * 2 - 1,\n        -((screen.y - 70) / (window.innerHeight - 90)) * 2 + 1,\n        0.5\n      );\n      //console.log(((oldselected.client[0] - 320) / (window.innerWidth - 340)) * 2 - 1);\n      //console.log(-((oldselected.client[1] - 70) / (window.innerHeight - 90)) * 2 + 1);\n      vector.unproject(camera);\n      //世界系坐标vector\n      //console.log(vector);\n      return vector;\n    },\n    //世界系坐标转为屏幕二维坐标\n    screenCoordinates(vector){\n      vector.project(camera);\n      let screen ={x:0,y:0};\n      screen.x = Math.round(((vector.x + 1) / 2)* (window.innerWidth - 340) + 320);\n      screen.y = Math.round((-1) * ((vector.y - 1) / 2) * (window.innerHeight - 90) + 70);\n      // console.log(vector);\n      // console.log(\"x:\"+Math.round(((vector.x + 1) / 2)* (window.innerWidth - 340) + 320));\n      // console.log(\"y:\"+Math.round((-1) * ((vector.y - 1) / 2) * (window.innerHeight - 90) + 70));\n      return screen;\n    },\n\n\n    //能够实现鼠标拖拽或者放缩不更改热点形状\n\n    //     newDrawVideoHotSpot(){\n    //       let selected = {};\n    //       let that = this;\n    //       let selectArray = [];\n    //\n    //       console.log(that.$store.state.test.videoGroup);\n    //\n    //       if(that.$store.state.test.videoGroup.length === 4){\n    //         for (let i = 0; i < 4; i++) {\n    //           selectArray.push(that.screenCoordinates(that.$store.state.test.videoGroup[i]));\n    //         }\n    //       }\n    //       console.log(selectArray);\n    //\n    //       for (let i = 0; i < 4; i++) {\n    //         selected = select(selectArray[i]);\n    //         //console.log(selected);\n    //         xPositionArr.push(selected.point.x);\n    //         yPositionArr.push(selected.point.y);\n    //         zPositionArr.push(selected.point.z);\n    //         //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n    //       }\n    //\n    //       //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四变形\n    //       function select(array) {\n    //         let vector = new THREE.Vector3();\n    //         vector.set(\n    //           //注意：这里是根据render的size来确定的\n    //           ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n    //           -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n    //           0.5\n    //         );\n    //         vector.unproject(camera);\n    //\n    //         //标准设备坐标vector\n    //         //console.log(vector);\n    //\n    //         let raycaster = new THREE.Raycaster(\n    //           camera.position,\n    //           vector.sub(camera.position).normalize()//初始化\n    //         );\n    //         raycaster.set(camera.position,vector.sub(camera.position).normalize());\n    //         let intersects = raycaster.intersectObjects(scene.children);\n    //\n    //         let selectPoint = intersects[0];\n    //\n    //         //球体上的坐标\n    //         //console.log(selectPoint);\n    //\n    //         return selectPoint;\n    //       }\n    //\n    //\n    //\n    //       var v1 = new THREE.Vector3(\n    //         xPositionArr[0],\n    //         yPositionArr[0],\n    //         zPositionArr[0]\n    //       );\n    //       var v2 = new THREE.Vector3(\n    //         xPositionArr[1],\n    //         yPositionArr[1],\n    //         zPositionArr[1]\n    //       );\n    //       var v3 = new THREE.Vector3(\n    //         xPositionArr[2],\n    //         yPositionArr[2],\n    //         zPositionArr[2]\n    //       );\n    //       var v4 = new THREE.Vector3(\n    //         xPositionArr[3],\n    //         yPositionArr[3],\n    //         zPositionArr[3]\n    //       );\n    //       //画三角面片\n    //       var geom = new THREE.Geometry();\n    //       geom.vertices.push(v1);\n    //       geom.vertices.push(v2);\n    //       geom.vertices.push(v3);\n    //       geom.vertices.push(v4);\n    //\n    //       let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n    //       let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n    //       let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n    //       let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n    //       let d01 =\n    //         (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n    //         (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n    //         (p1[2] - p0[2]) * (p1[2] - p0[2]);\n    //       let d02 =\n    //         (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n    //         (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n    //         (p2[2] - p0[2]) * (p2[2] - p0[2]);\n    //       let d03 =\n    //         (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n    //         (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n    //         (p3[2] - p0[2]) * (p3[2] - p0[2]);\n    //       let max = Math.max(d01, d02, d03);\n    //       let normal = geom.computeFaceNormals();\n    //\n    //       function angleCalculation(a,b,c) {\n    //         //把a三维向量复制给vn\n    //         let vn = a.clone();\n    //         //求得vn和b的叉乘\n    //         vn.cross( b );\n    //         //将vn单位化\n    //         vn.normalize();\n    //         //把vn和c两个向量相乘\n    //         let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n    //         //用向量乘积除以对应向量的模得到夹角\n    //         return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n    //       }\n    //\n    //       if (max === d01) {\n    //\n    //         let angle=angleCalculation(v1,v2,v3);\n    //         if(angle>0){\n    //           //2在下方\n    //           geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n    //           geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n    //         }else{\n    //           //2在上方\n    //           geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n    //           geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n    //         }\n    //       }\n    //       if (max === d02) {\n    //\n    //         let angle=angleCalculation(v1,v3,v2);\n    //         if(angle>0){\n    //           //1在下方\n    //           geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n    //           geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n    //         }else{\n    //           //1在上方\n    //           geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n    //           geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n    //         }\n    //       }\n    //       if (max === d03) {\n    //\n    //         let angle=angleCalculation(v1,v4,v2);\n    //         if(angle>0){\n    //           //1在下方\n    //           geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n    //           geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n    //         }else{\n    //           //1在上方\n    //           geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n    //           geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n    //         }\n    //       }\n    //\n    //       let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n    //       material.transparent = true;\n    //       material.opacity = 0.8;\n    //       let object = new THREE.Mesh(geom, material);\n    //       console.log(\"new:\");\n    //       console.log(object);\n    //       uuid = object.uuid;\n    //\n    //       scene.add(object);\n    //\n    //       xPositionArr = [];\n    //       yPositionArr = [];\n    //       zPositionArr = [];\n    // },\n\n    //需要实现鼠标拖拽或者放缩之后能更改热点的平移位置,旋转以及缩放\n    newDrawVideoHotSpotX(oldselected,params){\n      console.log(params);\n      let selected = {};\n      let that = this;\n      let selectArray = [];\n\n      console.log(that.$store.state.test.videoGroup);\n      //将保存的三维世界坐标数组转为二维屏幕坐标数组\n      if(that.$store.state.test.videoGroup.length === 4){\n        for (let i = 0; i < 4; i++) {\n          selectArray.push(that.screenCoordinates(that.$store.state.test.videoGroup[i]));\n        }\n      }\n      console.log(selectArray);\n\n      //进行平移操作(这是平移1个单位)\n      for (let i = 0; i < 4; i++) {\n        selectArray[i].x += params;\n      }\n      //将三维世界坐标数组清空\n      this.$store.commit(\"emptyVideoGroup\");\n      //用新的二维坐标数组进行重新计算并绘制\n      for (let i = 0; i < 4; i++) {\n        selected = select(selectArray[i]);\n        console.log(selected);\n        xPositionArr.push(selected.point.x);\n        yPositionArr.push(selected.point.y);\n        zPositionArr.push(selected.point.z);\n        //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      }\n\n      //把中心点的向量带入转换函数变为屏幕二维坐标，并加上平移量\n      let client = this.screenCoordinates(oldselected.vector);\n      //把中心点进行平移\n      client.x += params;\n      //把屏幕坐标变换为三维世界坐标并更新\n      let worldDevice = this.deviceCoordinates(client);\n      this.$store.commit(\"saveOldselectedVector\",worldDevice.clone());\n      //把屏幕坐标转换为球上的交叉点坐标，不过与select不同，这个不需要commit\n      let world = newselect(client);\n      let worldArray = [world.point.x,world.point.y,world.point.z];\n      //再把三维球坐标更新即可\n      this.$store.commit(\"saveOldselectedSelect\",worldArray);\n\n\n      function newselect(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        return selectPoint;\n      }\n      //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四边形\n      function select(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        //标准设备坐标vector\n        //console.log(vector);\n        that.$store.commit(\"saveVideoGroup\",vector);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        //球体上的坐标\n        //console.log(selectPoint);\n\n        return selectPoint;\n      }\n\n      var v1 = new THREE.Vector3(\n        xPositionArr[0],\n        yPositionArr[0],\n        zPositionArr[0]\n      );\n      var v2 = new THREE.Vector3(\n        xPositionArr[1],\n        yPositionArr[1],\n        zPositionArr[1]\n      );\n      var v3 = new THREE.Vector3(\n        xPositionArr[2],\n        yPositionArr[2],\n        zPositionArr[2]\n      );\n      var v4 = new THREE.Vector3(\n        xPositionArr[3],\n        yPositionArr[3],\n        zPositionArr[3]\n      );\n      //画三角面片\n      var geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n      let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n      let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n      let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n      }\n\n      let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n      material.transparent = true;\n      material.opacity = 0.8;\n      let object = new THREE.Mesh(geom, material);\n      console.log(\"new:\");\n      console.log(object);\n      uuid = object.uuid;\n\n      scene.add(object);\n\n      xPositionArr = [];\n      yPositionArr = [];\n      zPositionArr = [];\n    },\n    newDrawVideoHotSpotY(oldselected,params){\n      console.log(params);\n      let selected = {};\n      let that = this;\n      let selectArray = [];\n\n      console.log(that.$store.state.test.videoGroup);\n      //将保存的三维世界坐标数组转为二维屏幕坐标数组\n      if(that.$store.state.test.videoGroup.length === 4){\n        for (let i = 0; i < 4; i++) {\n          selectArray.push(that.screenCoordinates(that.$store.state.test.videoGroup[i]));\n        }\n      }\n      console.log(selectArray);\n\n      //进行平移操作(这是平移1个单位)\n      for (let i = 0; i < 4; i++) {\n        selectArray[i].y += params;\n      }\n      //将三维世界坐标数组清空\n      this.$store.commit(\"emptyVideoGroup\");\n      //用新的二维坐标数组进行重新计算并绘制\n      for (let i = 0; i < 4; i++) {\n        selected = select(selectArray[i]);\n        console.log(selected);\n        xPositionArr.push(selected.point.x);\n        yPositionArr.push(selected.point.y);\n        zPositionArr.push(selected.point.z);\n        //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      }\n\n      //把中心点的向量带入转换函数变为屏幕二维坐标，并加上平移量\n      let client = this.screenCoordinates(oldselected.vector);\n      //把中心点进行平移\n      client.y += params;\n      //把屏幕坐标变换为三维世界坐标并更新\n      let worldDevice = this.deviceCoordinates(client);\n      this.$store.commit(\"saveOldselectedVector\",worldDevice.clone());\n      //把屏幕坐标转换为球上的交叉点坐标，不过与select不同，这个不需要commit\n      let world = newselect(client);\n      let worldArray = [world.point.x,world.point.y,world.point.z];\n      //再把三维球坐标更新即可\n      this.$store.commit(\"saveOldselectedSelect\",worldArray);\n\n\n      function newselect(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        return selectPoint;\n      }\n      //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四边形\n      function select(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        //标准设备坐标vector\n        //console.log(vector);\n        that.$store.commit(\"saveVideoGroup\",vector);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        //球体上的坐标\n        //console.log(selectPoint);\n\n        return selectPoint;\n      }\n\n      var v1 = new THREE.Vector3(\n        xPositionArr[0],\n        yPositionArr[0],\n        zPositionArr[0]\n      );\n      var v2 = new THREE.Vector3(\n        xPositionArr[1],\n        yPositionArr[1],\n        zPositionArr[1]\n      );\n      var v3 = new THREE.Vector3(\n        xPositionArr[2],\n        yPositionArr[2],\n        zPositionArr[2]\n      );\n      var v4 = new THREE.Vector3(\n        xPositionArr[3],\n        yPositionArr[3],\n        zPositionArr[3]\n      );\n      //画三角面片\n      var geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n      let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n      let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n      let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n      }\n\n      let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n      material.transparent = true;\n      material.opacity = 0.8;\n      let object = new THREE.Mesh(geom, material);\n      console.log(\"new:\");\n      console.log(object);\n      uuid = object.uuid;\n\n      scene.add(object);\n\n      xPositionArr = [];\n      yPositionArr = [];\n      zPositionArr = [];\n    },\n    newDrawVideoHotSpotR(oldselected,theta){\n      let selected = {};\n      let that = this;\n      let selectArray = [];\n\n      //将保存的三维世界坐标数组转为二维屏幕坐标数组\n      if(that.$store.state.test.videoGroup.length === 4){\n        for (let i = 0; i < 4; i++) {\n          selectArray.push(that.screenCoordinates(that.$store.state.test.videoGroup[i]));\n        }\n      }\n      console.log(selectArray);\n\n      //把中心点的向量带入转换函数变为屏幕二维坐标\n      let client = this.screenCoordinates(oldselected.vector);\n      //把中心点进行平移\n      console.log(client);\n      //把屏幕坐标变换为三维世界坐标并更新\n      let worldDevice = this.deviceCoordinates(client);\n      this.$store.commit(\"saveOldselectedVector\",worldDevice.clone());\n      //把屏幕坐标转换为球上的交叉点坐标，不过与select不同，这个不需要commit\n      let world = newselect(client);\n      let worldArray = [world.point.x,world.point.y,world.point.z];\n      //再把三维球坐标更新即可\n      this.$store.commit(\"saveOldselectedSelect\",worldArray);\n\n      //进行旋转操作,200存在问题\n      let newselectArray = [];\n      for (let i = 0; i < selectArray.length; i++) {\n        let obj = {};\n        obj.x = selectArray[i].x - client.x;\n        obj.y = selectArray[i].y - client.y;\n        newselectArray.push(obj);\n      }\n      console.log(newselectArray);\n\n      // let distance = [];\n      // let thetaArray = [];\n      // for (let i = 0; i < selectArray.length; i++) {\n      //   distance[i] = Math.pow((Math.pow((client.x-selectArray[i].x),2)+Math.pow((client.y-selectArray[i].y),2)),1/2);\n      //   thetaArray[i] = (selectArray[i].x-client.x)/(selectArray[i].y-client.y);\n      //   console.log(distance[i]+\"\"+thetaArray[i]);\n      //   console.log(selectArray[i]);\n      //   selectArray[i].x = client.x + distance[i]*Math.cos(Math.atan(thetaArray[i])+theta/180*Math.PI);\n      //   selectArray[i].y = client.y + distance[i]*Math.sin(Math.atan(thetaArray[i])+theta/180*Math.PI);\n      //   console.log(selectArray[i]);\n      // }\n\n      // selectArray[0].x += 200*Math.cos(Math.atan(3/4)+theta/180*Math.PI);//160\n      // selectArray[0].y += 200*Math.sin(Math.atan(3/4)+theta/180*Math.PI);//120\n      // selectArray[1].x += 200*Math.cos((Math.PI-Math.atan(3/4))+theta/180*Math.PI);//160\n      // selectArray[1].y += 200*Math.sin((Math.PI-Math.atan(3/4))+theta/180*Math.PI);//120\n      // selectArray[2].x += 200*Math.cos((Math.PI+Math.atan(3/4))+theta/180*Math.PI);//160\n      // selectArray[2].y += 200*Math.sin((Math.PI+Math.atan(3/4))+theta/180*Math.PI);//120\n      // selectArray[3].x += 200*Math.cos(-Math.atan(3/4)+theta/180*Math.PI);//160\n      // selectArray[3].y += 200*Math.sin(-Math.atan(3/4)+theta/180*Math.PI);//120\n\n      console.log(selectArray);\n\n      //将三维世界坐标数组清空\n      this.$store.commit(\"emptyVideoGroup\");\n      //用新的二维坐标数组进行重新计算并绘制\n      for (let i = 0; i < 4; i++) {\n        selected = select(selectArray[i]);\n        //console.log(selected);\n        xPositionArr.push(selected.point.x);\n        yPositionArr.push(selected.point.y);\n        zPositionArr.push(selected.point.z);\n        //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      }\n\n      function newselect(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        return selectPoint;\n      }\n      //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四边形\n      function select(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        //标准设备坐标vector\n        //console.log(vector);\n        that.$store.commit(\"saveVideoGroup\",vector);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        //球体上的坐标\n        //console.log(selectPoint);\n\n        return selectPoint;\n      }\n\n      var v1 = new THREE.Vector3(\n        xPositionArr[0],\n        yPositionArr[0],\n        zPositionArr[0]\n      );\n      var v2 = new THREE.Vector3(\n        xPositionArr[1],\n        yPositionArr[1],\n        zPositionArr[1]\n      );\n      var v3 = new THREE.Vector3(\n        xPositionArr[2],\n        yPositionArr[2],\n        zPositionArr[2]\n      );\n      var v4 = new THREE.Vector3(\n        xPositionArr[3],\n        yPositionArr[3],\n        zPositionArr[3]\n      );\n      //画三角面片\n      var geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n      let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n      let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n      let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n      }\n\n      let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n      material.transparent = true;\n      material.opacity = 0.8;\n      let object = new THREE.Mesh(geom, material);\n      console.log(\"new:\");\n      console.log(object);\n      uuid = object.uuid;\n\n      scene.add(object);\n\n      xPositionArr = [];\n      yPositionArr = [];\n      zPositionArr = [];\n    },\n    newDrawVideoHotSpotS(oldselected,params){\n      console.log(params);\n      let selected = {};\n      let that = this;\n      let selectArray = [];\n\n      console.log(that.$store.state.test.videoGroup);\n      //将保存的三维世界坐标数组转为二维屏幕坐标数组\n      if(that.$store.state.test.videoGroup.length === 4){\n        for (let i = 0; i < 4; i++) {\n          selectArray.push(that.screenCoordinates(that.$store.state.test.videoGroup[i]));\n        }\n      }\n      console.log(selectArray);\n\n      //进行平移操作(这是平移1个单位)\n      for (let i = 0; i < 4; i++) {\n        selectArray[i].y += params;\n      }\n      //将三维世界坐标数组清空\n      this.$store.commit(\"emptyVideoGroup\");\n      //用新的二维坐标数组进行重新计算并绘制\n      for (let i = 0; i < 4; i++) {\n        selected = select(selectArray[i]);\n        console.log(selected);\n        xPositionArr.push(selected.point.x);\n        yPositionArr.push(selected.point.y);\n        zPositionArr.push(selected.point.z);\n        //console.log(selected.point.x + \",\" + selected.point.y + \",\" + selected.point.z);\n      }\n\n      //把中心点的向量带入转换函数变为屏幕二维坐标，并加上平移量\n      let client = this.screenCoordinates(oldselected.vector);\n      //把中心点进行平移\n      client.y += params;\n      //把屏幕坐标变换为三维世界坐标并更新\n      let worldDevice = this.deviceCoordinates(client);\n      this.$store.commit(\"saveOldselectedVector\",worldDevice.clone());\n      //把屏幕坐标转换为球上的交叉点坐标，不过与select不同，这个不需要commit\n      let world = newselect(client);\n      let worldArray = [world.point.x,world.point.y,world.point.z];\n      //再把三维球坐标更新即可\n      this.$store.commit(\"saveOldselectedSelect\",worldArray);\n\n\n      function newselect(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        return selectPoint;\n      }\n      //视频像素大小对应为屏幕的像素大小，传入屏幕二维坐标更新射线就可以获得对应的四边形\n      function select(array) {\n        let vector = new THREE.Vector3();\n        vector.set(\n          //注意：这里是根据render的size来确定的\n          ((array.x - 320 ) / (window.innerWidth - 340)) * 2 - 1,\n          -((array.y - 70 ) / (window.innerHeight - 90)) * 2 + 1,\n          0.5\n        );\n        vector.unproject(camera);\n\n        //标准设备坐标vector\n        //console.log(vector);\n        that.$store.commit(\"saveVideoGroup\",vector);\n\n        let raycaster = new THREE.Raycaster(\n          camera.position,\n          vector.sub(camera.position).normalize()//初始化\n        );\n        raycaster.set(camera.position,vector.sub(camera.position).normalize());\n        let intersects = raycaster.intersectObjects(scene.children);\n\n        let selectPoint = intersects[0];\n\n        //球体上的坐标\n        //console.log(selectPoint);\n\n        return selectPoint;\n      }\n\n      var v1 = new THREE.Vector3(\n        xPositionArr[0],\n        yPositionArr[0],\n        zPositionArr[0]\n      );\n      var v2 = new THREE.Vector3(\n        xPositionArr[1],\n        yPositionArr[1],\n        zPositionArr[1]\n      );\n      var v3 = new THREE.Vector3(\n        xPositionArr[2],\n        yPositionArr[2],\n        zPositionArr[2]\n      );\n      var v4 = new THREE.Vector3(\n        xPositionArr[3],\n        yPositionArr[3],\n        zPositionArr[3]\n      );\n      //画三角面片\n      var geom = new THREE.Geometry();\n      geom.vertices.push(v1);\n      geom.vertices.push(v2);\n      geom.vertices.push(v3);\n      geom.vertices.push(v4);\n\n      let p0 = [xPositionArr[0], yPositionArr[0], zPositionArr[0]];\n      let p1 = [xPositionArr[1], yPositionArr[1], zPositionArr[1]];\n      let p2 = [xPositionArr[2], yPositionArr[2], zPositionArr[2]];\n      let p3 = [xPositionArr[3], yPositionArr[3], zPositionArr[3]];\n      let d01 =\n        (p1[0] - p0[0]) * (p1[0] - p0[0]) +\n        (p1[1] - p0[1]) * (p1[1] - p0[1]) +\n        (p1[2] - p0[2]) * (p1[2] - p0[2]);\n      let d02 =\n        (p2[0] - p0[0]) * (p2[0] - p0[0]) +\n        (p2[1] - p0[1]) * (p2[1] - p0[1]) +\n        (p2[2] - p0[2]) * (p2[2] - p0[2]);\n      let d03 =\n        (p3[0] - p0[0]) * (p3[0] - p0[0]) +\n        (p3[1] - p0[1]) * (p3[1] - p0[1]) +\n        (p3[2] - p0[2]) * (p3[2] - p0[2]);\n      let max = Math.max(d01, d02, d03);\n      let normal = geom.computeFaceNormals();\n\n      function angleCalculation(a,b,c) {\n        //把a三维向量复制给vn\n        let vn = a.clone();\n        //求得vn和b的叉乘\n        vn.cross( b );\n        //将vn单位化\n        vn.normalize();\n        //把vn和c两个向量相乘\n        let vn2= vn.x*c.x+vn.y*c.y+vn.z*c.z;\n        //用向量乘积除以对应向量的模得到夹角\n        return (vn2/(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)));\n      }\n\n      if (max === d01) {\n\n        let angle=angleCalculation(v1,v2,v3);\n        if(angle>0){\n          //2在下方\n          geom.faces.push(new THREE.Face3(0, 2, 1, normal));\n          geom.faces.push(new THREE.Face3(1, 3, 0, normal));\n        }else{\n          //2在上方\n          geom.faces.push(new THREE.Face3(1, 2, 0, normal));\n          geom.faces.push(new THREE.Face3(0, 3, 1, normal));\n        }\n      }\n      if (max === d02) {\n\n        let angle=angleCalculation(v1,v3,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 3, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 3, 2, normal));\n          geom.faces.push(new THREE.Face3(2, 1, 0, normal));\n        }\n      }\n      if (max === d03) {\n\n        let angle=angleCalculation(v1,v4,v2);\n        if(angle>0){\n          //1在下方\n          geom.faces.push(new THREE.Face3(0, 1, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 2, 0, normal));\n        }else{\n          //1在上方\n          geom.faces.push(new THREE.Face3(0, 2, 3, normal));\n          geom.faces.push(new THREE.Face3(3, 1, 0, normal));\n        }\n      }\n\n      let material = new THREE.MeshLambertMaterial({color:0xFFFFFF});\n      material.transparent = true;\n      material.opacity = 0.8;\n      let object = new THREE.Mesh(geom, material);\n      console.log(\"new:\");\n      console.log(object);\n      uuid = object.uuid;\n\n      scene.add(object);\n\n      xPositionArr = [];\n      yPositionArr = [];\n      zPositionArr = [];\n    },\n\n  }\n};\n</script>\n\n<style scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/editor/Equirectangular.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panoramaContent\",attrs:{\"id\":\"container\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1e265579\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/editor/Equirectangular.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1e265579\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Equirectangular.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Equirectangular.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Equirectangular.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1e265579\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Equirectangular.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1e265579\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/editor/Equirectangular.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div id=\"container\" class=\"panoramaContent\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    let scene = '';\r\n    let camera = '';\r\n    let renderer = '';\r\n    let controls='';\r\n    let xPositionArr=[];\r\n    let yPositionArr=[];\r\n    let zPositionArr=[];\r\n    let tempXPositonArr=[];\r\n    let tempYPositonArr=[];\r\n    let tempZPositonArr=[];\r\n\r\n\r\n    //用于6张图的情况\r\n    var texture_placeholder,\r\n        isUserInteracting = false,\r\n        onPointerDownPointerX = 0, onPointerDownPointerY = 0,\r\n        lon =0, onPointerDownLon = 0,\r\n        lat = 0, onPointerDownLat = 0,\r\n        phi = 0, theta = 0,\r\n        target = new THREE.Vector3();\r\n    export default {\r\n        name: \"cube-faces\",\r\n        computed: {\r\n            imgUrl() {\r\n                // let fileUrl=this.$store.state.test.imgFile.fileUrl;\r\n                //为了方便调试，先将路径写死\r\n                let fileUrl=this.$store.state.test.imgFile.tempfileUrl;\r\n                return fileUrl;\r\n            },\r\n            isSubmit(){\r\n                let isSubmit=this.$store.state.test.isSubmit;\r\n                return isSubmit;\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            imgUrl(newvalue) {\r\n                document.getElementById('container').innerHTML=\"\";\r\n                    this.init(newvalue);\r\n                    this.animate();\r\n\r\n\r\n            },\r\n            isSubmit(){\r\n                let children=scene.children;\r\n                let sprites=[];\r\n                for(let i=0,len=children.length;i<len;i++){\r\n                    if(children[i].type.toLowerCase()==='sprite'){\r\n                        sprites.push(children[i].addition);\r\n                        sprites.push(children[i]);\r\n                    }\r\n                }\r\n                //提交到state中\r\n                this.$store.dispatch('hotSpots',{sprites:sprites});\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init(this.imgUrl);\r\n            this.animate();\r\n        },\r\n        methods: {\r\n            init(imgurl) {\r\n                if(imgurl.length===1) {\r\n                    var container = document.getElementById('container');\r\n                    renderer = new THREE.WebGLRenderer();\r\n                    renderer.setPixelRatio(window.devicePixelRatio);\r\n                    renderer.setSize(window.innerWidth, window.innerHeight);\r\n                    container.appendChild(renderer.domElement);\r\n                    scene = new THREE.Scene();\r\n                    camera = new THREE.PerspectiveCamera(90, (window.innerWidth-340) / (window.innerHeight-90), 0.1, 100);\r\n                    camera.position.z = 0.01;\r\n                    controls = new THREE.OrbitControls(camera, renderer.domElement);\r\n                    controls.enableZoom = false;\r\n                    controls.enablePan = false;\r\n                    controls.enableDamping = true;\r\n                    controls.rotateSpeed = -0.25;\r\n                    var textures = this.getTexturesFromAtlasFile(imgurl[0], 6);\r\n                    console.log(textures);\r\n                    var materials = [];\r\n                    for (var i = 0; i < 6; i++) {\r\n                        materials.push(new THREE.MeshBasicMaterial({map: textures[i]}));\r\n                    }\r\n                    var skyBox = new THREE.Mesh(new THREE.CubeGeometry(1, 1, 1), materials);\r\n                    skyBox.geometry.scale(1, 1, -1);\r\n                    scene.add(skyBox);\r\n\r\n                    window.addEventListener('resize', this.onWindowResize, false);\r\n                }else if(imgurl.length===6){\r\n                    var container, mesh;\r\n                    container = document.getElementById( 'container' );\r\n                    camera = new THREE.PerspectiveCamera( 75, (window.innerWidth-340) / (window.innerHeight-90), 1, 1100 );\r\n                    scene = new THREE.Scene();\r\n                    texture_placeholder = document.createElement( 'canvas' );\r\n                    texture_placeholder.width = 128;\r\n                    texture_placeholder.height = 128;\r\n                    var context = texture_placeholder.getContext( '2d' );\r\n                    context.fillStyle = 'rgb( 200, 200, 200 )';\r\n                    context.fillRect( 0, 0, texture_placeholder.width, texture_placeholder.height );\r\n                    var materials = [\r\n                        this.loadTexture( imgurl[0] ), // right px. 正x\r\n                        this.loadTexture( imgurl[1] ), // left nx,  负x\r\n                        this.loadTexture( imgurl[2] ), // top  py,\r\n                        this.loadTexture( imgurl[3] ), // bottom ny,\r\n                        this.loadTexture( imgurl[4] ), // front  pz,\r\n                        this.loadTexture( imgurl[5] )  // back nz\r\n                    ];\r\n                    var geometry = new THREE.BoxGeometry( 300, 300, 300, 7, 7, 7 );\r\n                    geometry.scale( - 1, 1, 1 );\r\n                    mesh = new THREE.Mesh( geometry, materials );\r\n                    scene.add( mesh );\r\n                    //添加一个球体\r\n                    var geometry2=new THREE.SphereGeometry(500,30,20);\r\n                    geometry2.scale(-1,1,1);\r\n                    var material2=new THREE.MeshBasicMaterial({color:0xffffff});\r\n                    var ball=new THREE.Mesh(geometry2,material2);\r\n                    ball.material.transparent=true;\r\n                    ball.material.opacity=0.0;\r\n                    scene.add(ball);\r\n                    renderer = new THREE.CanvasRenderer();\r\n                    renderer.setPixelRatio( window.devicePixelRatio );\r\n                    renderer.setSize( window.innerWidth-340, window.innerHeight-90 );\r\n                    container.appendChild( renderer.domElement );\r\n                    document.addEventListener( 'mousedown', this.onDocumentMouseDown, false );\r\n                    document.addEventListener( 'mousemove', this.onDocumentMouseMove, false );\r\n                    document.addEventListener( 'mouseup', this.onDocumentMouseUp, false );\r\n                    document.addEventListener( 'wheel', this.onDocumentMouseWheel, false );\r\n                    window.addEventListener( 'resize', this.onWindowResize, false );\r\n                }\r\n\r\n\r\n            },\r\n            getTexturesFromAtlasFile:function(atlasImgUrl, tilesNum){\r\n                var textures = [];\r\n                for ( var i = 0; i < tilesNum; i ++ ) {\r\n                    textures[ i ] = new THREE.Texture();\r\n                }\r\n                var imageObj = new Image();\r\n                imageObj.onload = function() {\r\n                    var canvas, context;\r\n                    var tileWidth = imageObj.height;\r\n                    for ( var i = 0; i < textures.length; i ++ ) {\r\n                        canvas = document.createElement( 'canvas' );\r\n                        context = canvas.getContext( '2d' );\r\n                        canvas.height = tileWidth;\r\n                        canvas.width = tileWidth;\r\n                        context.drawImage( imageObj, tileWidth * i, 0, tileWidth, tileWidth, 0, 0, tileWidth, tileWidth );\r\n                        textures[ i ].image = canvas\r\n                        textures[ i ].needsUpdate = true;\r\n                    }\r\n                };\r\n                imageObj.src = atlasImgUrl;\r\n                return textures;\r\n            },\r\n            onWindowResize() {\r\n                camera.aspect = (window.innerWidth-340) / (window.innerHeight-90);\r\n                camera.updateProjectionMatrix();\r\n                renderer.setSize((window.innerWidth-340), (window.innerHeight-90));\r\n            },\r\n            animate() {\r\n                if(this.imgUrl.length===1){\r\n                    requestAnimationFrame(this.animate);\r\n                    controls.update(); // required when damping is enabled\r\n                    renderer.render( scene, camera );\r\n                }else if(this.imgUrl.length===6){\r\n                    this.update();\r\n                    requestAnimationFrame( this.animate );\r\n\r\n                }\r\n\r\n            },\r\n            loadTexture( path ) {\r\n                var texture = new THREE.Texture( texture_placeholder );\r\n                var material = new THREE.MeshBasicMaterial( { map: texture, overdraw: 0.5 } );\r\n                var image = new Image();\r\n                image.onload = function () {\r\n                    texture.image = this;\r\n                    texture.needsUpdate = true;\r\n                };\r\n                image.src = path;\r\n                return material;\r\n            },\r\n            onDocumentMouseDown( event ) {\r\n                if(this.$store.state.test.imgType==='Cube Faces'){\r\n                    event.preventDefault();\r\n                    let vector = new THREE.Vector3();//三维坐标对象\r\n                    vector.set(\r\n                        //注意：这里是根据render的size来确定的\r\n                        ((event.clientX - 320) / (window.innerWidth - 340)) * 2 - 1,\r\n                        -((event.clientY - 70) / (window.innerHeight - 90)) * 2 + 1,\r\n                        0.5);\r\n                    vector.unproject(camera);\r\n                    let raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\r\n                    let intersects = raycaster.intersectObjects(scene.children);\r\n                    //如果绘制热点属于激活状态\r\n                    if (this.$store.state.test.isHotspot) {\r\n                        if (intersects.length > 0) {\r\n                            var selected2=intersects[1];//取第二个物体球\r\n                            tempXPositonArr.push(Number(selected2.point.x));\r\n                            tempYPositonArr.push(Number(selected2.point.y));\r\n                            tempZPositonArr.push(Number(selected2.point.z));\r\n                            var selected = intersects[0];\r\n                            xPositionArr.push(selected.point.x);\r\n                            yPositionArr.push(selected.point.y);\r\n                            zPositionArr.push(selected.point.z);\r\n\r\n\r\n                        }\r\n                        if (xPositionArr.length == 3) {\r\n                            document.getElementById('container').style.cursor = 'default';\r\n                            this.$store.dispatch('isHotspot');\r\n                            let xAverage = (xPositionArr[0] + xPositionArr[1] + xPositionArr[2]) / 3;\r\n                            let yAverage = (yPositionArr[0] + yPositionArr[1] + yPositionArr[2]) / 3;\r\n                            let zAverage = (zPositionArr[0] + zPositionArr[1] + zPositionArr[2]) / 3;\r\n                            let z=(tempZPositonArr[0] + tempZPositonArr[1] + tempZPositonArr[2]) / 3;\r\n                            let y=(tempYPositonArr[0]+tempYPositonArr[1]+tempYPositonArr[2])/3;\r\n                            let x=(tempXPositonArr[0] + tempXPositonArr[1] + tempXPositonArr[2]) / 3;\r\n                            let canvas = document.createElement('canvas');\r\n                            canvas.style.backgroundColor='rgba(255,255,255,0)';\r\n                            let context = canvas.getContext('2d');\r\n                            canvas.width = 128;\r\n                            canvas.height = 128;\r\n                            var img = new Image();\r\n                            img.src = 'static/textures/hotspot.svg';\r\n                            var that=this;\r\n                            img.onload=function () {\r\n                                context.drawImage(img,0,0);\r\n                                let texture = new THREE.Texture(canvas);\r\n                                texture.needsUpdate = true;\r\n                                texture.minFilter = THREE.LinearFilter;\r\n                                var spriteMaterial = new THREE.SpriteMaterial({\r\n                                    map: texture,\r\n                                    transparent: false\r\n                                });\r\n                                var sprite = new THREE.Sprite(spriteMaterial);\r\n                                sprite.scale.set(18, 18, 18);\r\n                                let rate = 0.8;\r\n                                var endV=new THREE.Vector3(xAverage*rate,yAverage*rate,zAverage*rate);\r\n                                sprite.position.copy(endV);\r\n                                //利用球的pan和tilt来求，注意这里传参需要改变,将pan和tilt写到sprite的属性中\r\n                                sprite.addition=that.calculatePanandTilt(-z,y,x);\r\n                                //console.log(sprite.addition);\r\n                                scene.add(sprite);\r\n\r\n                            }\r\n                            tempXPositonArr=[];\r\n                            tempYPositonArr=[];\r\n                            tempZPositonArr=[];\r\n                            xPositionArr = [];\r\n                            yPositionArr = [];\r\n                            zPositionArr = [];\r\n                        }\r\n                        //移除热点\r\n                    }else{\r\n                        if(intersects.length>0){\r\n                            const target = intersects[0];\r\n                            //console.log(intersects[0])\r\n                            try {\r\n                                if(target.object&&target.object.type.length>0){\r\n                                    if(target.object.type.toLowerCase()==\"sprite\"){\r\n                                        scene.remove(target.object);\r\n                                        //console.log(scene.children);\r\n                                    }\r\n                                }\r\n                            }catch(e){\r\n                                console.log(e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                isUserInteracting = true;\r\n                onPointerDownPointerX = event.clientX;\r\n                onPointerDownPointerY = event.clientY;\r\n                onPointerDownLon = lon;\r\n                onPointerDownLat = lat;\r\n            },\r\n            onDocumentMouseMove( event ) {\r\n                if ( isUserInteracting === true ) {\r\n                    lon = ( onPointerDownPointerX - event.clientX ) * 0.1 + onPointerDownLon;\r\n                    lat = ( event.clientY - onPointerDownPointerY ) * 0.1 + onPointerDownLat;\r\n                }\r\n            },\r\n            onDocumentMouseUp( event ) {\r\n                isUserInteracting = false;\r\n            },\r\n            onDocumentMouseWheel( event ) {\r\n                var fov = camera.fov + event.deltaY * 0.05;\r\n                camera.fov = THREE.Math.clamp( fov, 10, 75 );\r\n                camera.updateProjectionMatrix();\r\n            },\r\n            update() {\r\n                if ( isUserInteracting === false ) {\r\n                    lon += 0;\r\n                }\r\n                lat = Math.max( - 85, Math.min( 85, lat ) );\r\n                phi = THREE.Math.degToRad( 90 - lat );\r\n                theta = THREE.Math.degToRad( lon );\r\n                target.x = 500 * Math.sin( phi ) * Math.cos( theta );\r\n                target.y = 500 * Math.cos( phi );\r\n                target.z = 500 * Math.sin( phi ) * Math.sin( theta );\r\n                camera.lookAt( target );\r\n                renderer.render( scene, camera );\r\n            },\r\n            calculatePanandTilt(xAverage,yAverage,zAverage){\r\n                let pan = 0;\r\n                let tilt = 0;\r\n                //计算出配置文件中热点的位置\r\n                if ((-xAverage) > 0 && zAverage <= 0) {\r\n                    pan = Math.atan(zAverage / (-xAverage)) * 180 / Math.PI;\r\n                }\r\n                if ((-xAverage) < 0 && zAverage < 0) {\r\n                    pan = Math.atan(zAverage / (-xAverage)) * 180 / Math.PI - 180;\r\n                }\r\n                if ((-xAverage) > 0 && zAverage >= 0) {\r\n                    pan = Math.atan(zAverage / (-xAverage)) * 180 / Math.PI;\r\n                }\r\n                if ((-xAverage) < 0 && zAverage > 0) {\r\n                    pan = 180 + Math.atan(zAverage / (-xAverage)) * 180 / Math.PI;\r\n                }\r\n                tilt = Math.asin(yAverage / 500) * 180 / Math.PI;\r\n                // console.log('pan: ' + pan);\r\n                // console.log('tilt: ' + tilt);\r\n                return [pan,tilt];\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/editor/CubeFaces.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panoramaContent\",attrs:{\"id\":\"container\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2988a35c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/editor/CubeFaces.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2988a35c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CubeFaces.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CubeFaces.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CubeFaces.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2988a35c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CubeFaces.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2988a35c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/editor/CubeFaces.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div id=\"container\" class=\"panoramaContent\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    let scene = '';\r\n    let camera = '';\r\n    let renderer = '';\r\n    let isUserInteracting = false;\r\n    let lon = 0;\r\n    let lat = 0;\r\n    let onPointerDownPointerX = '';\r\n    let onPointerDownLon = '';\r\n    let onPointerDownPointerY = '';\r\n    let onPointerDownLat = '';\r\n    let phi = 0;\r\n    let theta = 0;\r\n    let xPositionArr=[];\r\n    let yPositionArr=[];\r\n    let zPositionArr=[];\r\n    export default {\r\n        name: \"cylindrical\",\r\n        computed: {\r\n            imgUrl() {\r\n                let fileUrl = this.$store.state.test.imgFile.fileUrl;\r\n                return fileUrl;\r\n            },\r\n            isSubmit() {\r\n                let isSubmit = this.$store.state.test.isSubmit;\r\n                return isSubmit;\r\n            },\r\n            drawedHotspots() {\r\n                let sum = this.$store.state.test.sum;\r\n                for (let i = 0; i < sum.length; i++) {\r\n                    let temp = sum[i].imgFile.fileUrl;\r\n                    if (temp[0] == this.imgUrl) {\r\n                        return sum[i].hotSpots;\r\n                    }\r\n                }\r\n                return [];\r\n            },\r\n            drawedImgHotSpots() {\r\n                let sum = this.$store.state.test.sum;\r\n                for (let i = 0; i < sum.length; i++) {\r\n                    let temp = sum[i].imgFile.fileUrl;\r\n                    if (temp[0] == this.imgUrl) {\r\n                        return sum[i].imgHotSpots;\r\n                    }\r\n                }\r\n                return [];\r\n            }\r\n        },\r\n        watch: {\r\n            imgUrl(newvalue) {\r\n                document.getElementById('container').innerHTML=\"\";\r\n                this.$store.commit('clearTarget');\r\n                this.$store.commit('clearHotSpots');\r\n                this.$store.commit('clearHotUrl');\r\n                this.$store.commit('clearImgHotSpots');\r\n                this.init(newvalue);\r\n                this.animate();\r\n            },\r\n            //确认提交按钮后触发的事件逻辑,找出所有的热点，注意这里的热点位置信息需要转换(转换关系1.25倍)\r\n            isSubmit(){\r\n                let children=scene.children;\r\n                let imgHotSpots=[];\r\n                let sprites=[];\r\n                let target=this.$store.state.test.target;\r\n                let hotUrl=this.$store.state.test.hotUrl;\r\n                let k=0;\r\n                let m=0;\r\n                for(let i=0,len=children.length;i<len;i++){\r\n                    if(children[i].type.toLowerCase()==='sprite'){\r\n                        let panAndTilt=this.calculatePanandTilt(children[i].position.x*1.25,children[i].position.y*1.25,children[i].position.z*1.25);\r\n                        sprites.push({'panAndTilt':panAndTilt,'position':[children[i].position.x*1.25,children[i].position.y*1.25,children[i].position.z*1.25],'target':target[k++]});\r\n                    }\r\n                    if(children[i].material.type.toLowerCase()==='meshnormalmaterial'){\r\n                        //计算四个点的panandTilt\r\n                        let polyhotspot=[];\r\n                        for(let j=0,len=children[i].geometry.vertices.length;j<len;j++){\r\n                            polyhotspot.push(this.calculatePanandTilt(children[i].geometry.vertices[j].x,children[i].geometry.vertices[j].y,children[i].geometry.vertices[j].z));\r\n                        }\r\n                        //这里的target是用户上传的图片热点图片路径，暂时先写死images/temp.png\r\n                        imgHotSpots.push({'panAndTilt':polyhotspot,'position':children[i].geometry.vertices,'target':null,'hotUrl':hotUrl[m++]});\r\n\r\n                    }\r\n\r\n                }\r\n                //提交到state中\r\n                this.$store.dispatch('hotSpots',{sprites:sprites});\r\n                this.$store.dispatch('imgHotSpots',{imgHotSpots:imgHotSpots});\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init(this.imgUrl);\r\n            this.animate();\r\n        },\r\n\r\n        methods: {\r\n            init(imgurl) {\r\n                if (imgurl.length > 1) {\r\n                    alert(\"抱歉，一张图请选择panorama1，六张图请选择panorama6且只支持cubeFaces\");\r\n                    return;\r\n                }\r\n                let container = '';\r\n                let mesh = '';\r\n                container = document.getElementById('container');\r\n                scene = new THREE.Scene();\r\n                camera = new THREE.PerspectiveCamera(75, (window.innerWidth - 340) / (window.innerHeight - 90), 1, 1100);\r\n                camera.target = new THREE.Vector3(0, 0, 0);\r\n                const geometry = new THREE.CylinderGeometry(500, 500, 500 * Math.PI, 60, 40);\r\n                geometry.scale(-1, 1, 1);\r\n                const material = new THREE.MeshBasicMaterial({\r\n                    map: new THREE.TextureLoader().load(imgurl[0])\r\n                });\r\n                mesh = new THREE.Mesh(geometry, material);\r\n                scene.add(mesh);\r\n\r\n                let draw=this.drawedHotspots;\r\n                for(let i=0,len=draw.length;i<len;i++){\r\n                    let position=draw[i].position;\r\n                    let canvas = document.createElement('canvas');\r\n                    canvas.style.backgroundColor='rgba(255,255,255,0)';\r\n                    let context = canvas.getContext('2d');\r\n                    canvas.width = 128;\r\n                    canvas.height = 128;\r\n                    var img = new Image();\r\n                    //这里发布的时候会出现http://localhost:8083/web/dist/static/textures/hotspot.svg\r\n                    img.src = 'static/textures/hotspot.svg';\r\n                    img.onload=function () {\r\n                        context.drawImage(img,0,0);\r\n                        let texture = new THREE.Texture(canvas);\r\n                        texture.needsUpdate = true;\r\n                        texture.minFilter = THREE.LinearFilter;\r\n                        var spriteMaterial = new THREE.SpriteMaterial({\r\n                            map: texture,\r\n                            transparent: false\r\n                        });\r\n                        var sprite = new THREE.Sprite(spriteMaterial);\r\n                        sprite.scale.set(30, 30, 30);\r\n                        let rate = 0.8;\r\n                        var endV=new THREE.Vector3(position[0]*rate,position[1]*rate,position[2]*rate);\r\n                        sprite.position.copy(endV);\r\n                        scene.add(sprite);\r\n                    }\r\n\r\n                }\r\n                //画已经保存的图片热点\r\n                let drawedImgHotSpots=this.drawedImgHotSpots;\r\n                for(let j=0,len=drawedImgHotSpots.length;j<len;j++){\r\n                    let position=drawedImgHotSpots[j].position;\r\n                    let v1=new THREE.Vector3(position[0].x,position[0].y,position[0].z);\r\n                    let v2=new THREE.Vector3(position[1].x,position[1].y,position[1].z);\r\n                    let v3=new THREE.Vector3(position[2].x,position[2].y,position[2].z);\r\n                    let v4=new THREE.Vector3(position[3].x,position[3].y,position[3].z);\r\n                    //画三角面片\r\n                    let geom = new THREE.Geometry();\r\n                    geom.vertices.push(v1);\r\n                    geom.vertices.push(v2);\r\n                    geom.vertices.push(v3);\r\n                    geom.vertices.push(v4);\r\n                    geom.faces.push( new THREE.Face3( 0, 1, 2) );\r\n                    geom.faces.push(new THREE.Face3(2,3,0));\r\n                    geom.computeFaceNormals();\r\n                    let object = new THREE.Mesh( geom, new THREE.MeshNormalMaterial() );\r\n                    scene.add(object);\r\n                }\r\n\r\n\r\n                renderer = new THREE.WebGLRenderer();\r\n                renderer.setPixelRatio(window.devicePixelRatio);\r\n                renderer.setSize(window.innerWidth - 340, window.innerHeight - 90);\r\n                container.appendChild(renderer.domElement);\r\n                document.getElementsByTagName('canvas')[0].addEventListener('mousedown', this.onDocumentMouseDown, false);\r\n                document.getElementsByTagName('canvas')[0].addEventListener('mousemove', this.onDocumentMouseMove, false);\r\n                document.getElementsByTagName('canvas')[0].addEventListener('mouseup', this.onDocumentMouseUp, false);\r\n                document.getElementsByTagName('canvas')[0].addEventListener('wheel', this.onDocumentMouseWheel, false);\r\n\r\n                window.addEventListener('resize', this.onWindowResize, false);\r\n            },\r\n            onWindowResize() {\r\n                camera.aspect = (window.innerWidth - 340) / (window.innerHeight - 90);\r\n                camera.updateProjectionMatrix();\r\n                renderer.setSize(window.innerWidth - 340, window.innerHeight - 90);\r\n            },\r\n            onDocumentMouseDown(event) {\r\n                if (this.$store.state.test.imgType === 'Cylindrical') {\r\n                    event.preventDefault();\r\n                    let vector = new THREE.Vector3();//三维坐标对象\r\n                    vector.set(\r\n                        //注意：这里是根据render的size来确定的\r\n                        ((event.clientX - 320) / (window.innerWidth - 340)) * 2 - 1,\r\n                        -((event.clientY - 70) / (window.innerHeight - 90)) * 2 + 1,\r\n                        0.5);\r\n                    vector.unproject(camera);\r\n                    let raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\r\n                    let intersects = raycaster.intersectObjects(scene.children);\r\n                    //如果绘制热点属于激活状态\r\n                    if (this.$store.state.test.isHotspot) {\r\n                        if (intersects.length > 0) {\r\n                            var selected = intersects[0];//取第一个物体\r\n                            console.log(intersects);\r\n                            xPositionArr.push(selected.point.x);\r\n                            yPositionArr.push(selected.point.y);\r\n                            zPositionArr.push(selected.point.z);\r\n                        }\r\n                        if (xPositionArr.length == 3) {\r\n                            document.getElementById('container').style.cursor = 'default';\r\n                            this.$store.dispatch('isHotspot');\r\n                            let xAverage = (xPositionArr[0] + xPositionArr[1] + xPositionArr[2]) / 3;\r\n                            let yAverage = (yPositionArr[0] + yPositionArr[1] + yPositionArr[2]) / 3;\r\n                            let zAverage = (zPositionArr[0] + zPositionArr[1] + zPositionArr[2]) / 3;\r\n                            let canvas = document.createElement('canvas');\r\n                            canvas.style.backgroundColor = 'rgba(255,255,255,0)';\r\n                            let context = canvas.getContext('2d');\r\n                            canvas.width = 128;\r\n                            canvas.height = 128;\r\n                            var img = new Image();\r\n                            img.src = 'static/textures/hotspot.svg';\r\n                            img.onload = function () {\r\n                                context.drawImage(img, 0, 0);\r\n                                let texture = new THREE.Texture(canvas);\r\n                                texture.needsUpdate = true;\r\n                                texture.minFilter = THREE.LinearFilter;\r\n                                var spriteMaterial = new THREE.SpriteMaterial({\r\n                                    map: texture,\r\n                                    transparent: false\r\n                                });\r\n                                var sprite = new THREE.Sprite(spriteMaterial);\r\n                                sprite.scale.set(30, 30, 30);\r\n                                let rate = 0.8;\r\n                                var endV = new THREE.Vector3(xAverage * rate, yAverage * rate, zAverage * rate);\r\n                                sprite.position.copy(endV);\r\n                                scene.add(sprite);\r\n                            }\r\n\r\n                            xPositionArr = [];\r\n                            yPositionArr = [];\r\n                            zPositionArr = [];\r\n                        }\r\n                        //移除热点\r\n                    } else {\r\n                        if (intersects.length > 0) {\r\n                            const target = intersects[0];\r\n                            try {\r\n                                if (target.object && target.object.type.length > 0) {\r\n                                    if (target.object.type.toLowerCase() == \"sprite\") {\r\n                                        scene.remove(target.object);\r\n                                    }\r\n                                }\r\n                            } catch (e) {\r\n                                console.log(e);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.$store.state.test.isImageHotspot) {\r\n                        if (intersects.length > 0) {\r\n                            var selected = intersects[0];//取第一个物体\r\n                            var startV=selected.point;\r\n                            xPositionArr.push(selected.point.x);\r\n                            //console.log(\"x坐标:\" + xPositionArr);\r\n                            yPositionArr.push(selected.point.y);\r\n                            //console.log(\"y坐标:\" + yPositionArr);\r\n                            zPositionArr.push(selected.point.z);\r\n                            //console.log(\"z坐标:\" + zPositionArr);\r\n                        }\r\n                        //画点\r\n                        if(xPositionArr.length==1){\r\n                            let geom = new THREE.Geometry();\r\n                            let material = new THREE.PointsMaterial({\r\n                                color: 0x0000ff,\r\n                                size:10\r\n                            });\r\n                            geom.vertices.push(new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]));\r\n                            let point =  new THREE.Points(geom, material);\r\n                            scene.add(point);\r\n                        }\r\n                        //画线\r\n                        if(xPositionArr.length==2){\r\n                            //粒子\r\n                            let geom = new THREE.Geometry();\r\n                            let material = new THREE.ParticleBasicMaterial({\r\n                                color: 0x0000ff,\r\n                                size:10\r\n                            });\r\n                            //geom.vertices.push(new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]));\r\n                            geom.vertices.push(new THREE.Vector3(xPositionArr[1],yPositionArr[1],zPositionArr[1]));\r\n                            let point =  new THREE.Points(geom, material);\r\n                            scene.add(point);\r\n                            //线\r\n                            let line=new THREE.Geometry();\r\n                            line.vertices.push(new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]));\r\n                            line.vertices.push(new THREE.Vector3(xPositionArr[1],yPositionArr[1],zPositionArr[1]));\r\n                            let mesh = new THREE.Line( line, material, THREE.LineSegments );\r\n                            scene.add(mesh);\r\n                        }\r\n                        //画三角形\r\n                        if(xPositionArr.length==3){\r\n                            //粒子\r\n                            let geom = new THREE.Geometry();\r\n                            let material = new THREE.ParticleBasicMaterial({\r\n                                color: 0x0000ff,\r\n                                size:10\r\n                            });\r\n                            //geom.vertices.push(new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]));\r\n                            geom.vertices.push(new THREE.Vector3(xPositionArr[2],yPositionArr[2],zPositionArr[2]));\r\n                            let point =  new THREE.Points(geom, material);\r\n                            scene.add(point);\r\n                            //线\r\n                            let line1=new THREE.Geometry();\r\n                            line1.vertices.push(new THREE.Vector3(xPositionArr[1],yPositionArr[1],zPositionArr[1]));\r\n                            line1.vertices.push(new THREE.Vector3(xPositionArr[2],yPositionArr[2],zPositionArr[2]));\r\n                            let mesh1 = new THREE.Line( line1, material, THREE.LineSegments );\r\n                            scene.add(mesh1);\r\n                            let line2=new THREE.Geometry();\r\n                            line2.vertices.push(new THREE.Vector3(xPositionArr[2],yPositionArr[2],zPositionArr[2]));\r\n                            line2.vertices.push(new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]));\r\n                            let mesh2 = new THREE.Line( line2, material, THREE.LineSegments );\r\n                            scene.add(mesh2);\r\n\r\n                        }\r\n                        if (xPositionArr.length == 4) {\r\n                            document.getElementById('container').style.cursor = 'default';\r\n                            this.$store.dispatch('isImageHotspot');\r\n                            //将之前的点和线删除\r\n                            let children=scene.children;\r\n                            for(let i=0;i<children.length;i++){\r\n                                if((children[i].type.toLowerCase()==='points')||(children[i].type.toLowerCase()==='line')){\r\n                                    scene.remove(children[i]);\r\n                                    i--;\r\n                                }\r\n\r\n                            }\r\n                            var v1=new THREE.Vector3(xPositionArr[0],yPositionArr[0],zPositionArr[0]);\r\n                            var v2=new THREE.Vector3(xPositionArr[1],yPositionArr[1],zPositionArr[1]);\r\n                            var v3=new THREE.Vector3(xPositionArr[2],yPositionArr[2],zPositionArr[2]);\r\n                            var v4=new THREE.Vector3(xPositionArr[3],yPositionArr[3],zPositionArr[3]);\r\n                            //画三角面片\r\n                            var geom = new THREE.Geometry();\r\n                            geom.vertices.push(v1);\r\n                            geom.vertices.push(v2);\r\n                            geom.vertices.push(v3);\r\n                            geom.vertices.push(v4);\r\n                            geom.faces.push( new THREE.Face3( 0, 1, 2) );\r\n                            geom.faces.push(new THREE.Face3(2,3,0));\r\n                            geom.computeFaceNormals();\r\n                            var object = new THREE.Mesh( geom, new THREE.MeshNormalMaterial() );\r\n                            scene.add(object);\r\n                            xPositionArr = [];\r\n                            yPositionArr = [];\r\n                            zPositionArr = [];\r\n                            console.log(scene);\r\n                        }\r\n                        //移除热点\r\n                    }else{\r\n                        if(intersects.length>0){\r\n                            const target = intersects[0];\r\n                            try {\r\n                                if(target.object&&target.object.type.length>0){\r\n                                    if(target.object.material.type.toLowerCase()==\"meshnormalmaterial\"){\r\n                                        scene.remove(target.object);\r\n                                    }\r\n                                }\r\n                            }catch(e){\r\n                                console.log(e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                isUserInteracting = true;\r\n                onPointerDownPointerX = event.clientX;\r\n                onPointerDownPointerY = event.clientY;\r\n                onPointerDownLon = lon;\r\n                onPointerDownLat = lat;\r\n            },\r\n            onDocumentMouseMove(event) {\r\n                if (isUserInteracting === true) {\r\n                    lon = (onPointerDownPointerX - event.clientX) * 0.1 + onPointerDownLon;\r\n                    lat = (event.clientY - onPointerDownPointerY) * 0.1 + onPointerDownLat;\r\n                }\r\n            },\r\n            onDocumentMouseUp() {\r\n                isUserInteracting = false;\r\n                // camera.fov += event.deltaY * 0.05;\r\n            },\r\n            onDocumentMouseWheel(event) {\r\n                camera.fov += event.deltaY * 0.05;\r\n                if(camera.fov>=10&&camera.fov<=150){\r\n                    camera.updateProjectionMatrix();\r\n                }\r\n            },\r\n            animate() {\r\n                //暂时指定只能支持一张图片\r\n                if (this.imgUrl.length > 1) {\r\n                    return;\r\n                }\r\n                this.update();\r\n                requestAnimationFrame(this.animate);\r\n\r\n            },\r\n            update() {\r\n                //控制自动旋转速度\r\n                if (isUserInteracting === false) {\r\n                    lon += 0;\r\n                }\r\n                lat = Math.max(-85, Math.min(85, lat));\r\n                phi = THREE.Math.degToRad(90 - lat);\r\n                theta = THREE.Math.degToRad(lon);\r\n                camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\r\n                camera.target.y = 500 * Math.cos(phi);\r\n                camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\r\n                camera.lookAt(camera.target);\r\n                renderer.render(scene, camera);\r\n\r\n            },\r\n            calculatePanandTilt(xAverage, yAverage, zAverage) {\r\n                let pan = 0;\r\n                let tilt = 0;\r\n                //计算出配置文件中热点的位置\r\n                if ((xAverage) < 0 && zAverage < 0) {\r\n                    pan = Math.asin(-xAverage / (500)) * 180 / Math.PI;\r\n                }\r\n                if ((xAverage) > 0 && zAverage < 0) {\r\n                    pan = Math.asin(-xAverage / (500)) * 180 / Math.PI;\r\n                }\r\n                if ((xAverage) > 0 && zAverage >= 0) {\r\n                    pan = Math.asin(xAverage / (500)) * 180 / Math.PI - 180;\r\n                }\r\n                if ((xAverage) < 0 && zAverage > 0) {\r\n                    pan = Math.asin(xAverage / (500)) * 180 / Math.PI + 180;\r\n                }\r\n                tilt = Math.atan(yAverage / 500) * 180 / Math.PI;\r\n                console.log('pan: ' + pan);\r\n                console.log('tilt: ' + tilt);\r\n                return [pan,tilt];\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/editor/Cylindrical.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panoramaContent\",attrs:{\"id\":\"container\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8e2de330\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/editor/Cylindrical.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8e2de330\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Cylindrical.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cylindrical.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cylindrical.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8e2de330\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Cylindrical.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8e2de330\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/editor/Cylindrical.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div id=\"container\" class=\"panoramaContent\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    let scene = '';\r\n    let camera = '';\r\n    let renderer = '';\r\n    let xPositionArr=[];\r\n    let yPositionArr=[];\r\n    let zPositionArr=[];\r\n    let mesh = null;\r\n    let isUserInteracting = false;\r\n    let onPointerDownPointerX = 0;\r\n    let onPointerDownLon = 0;\r\n    let lon=0;\r\n    export default {\r\n        name: \"flat\",\r\n        computed: {\r\n            imgUrl() {\r\n                let fileUrl=this.$store.state.test.imgFile.fileUrl;\r\n                return fileUrl;\r\n            },\r\n            isSubmit(){\r\n                let isSubmit=this.$store.state.test.isSubmit;\r\n                return isSubmit;\r\n            },\r\n            drawedHotspots(){\r\n                let sum=this.$store.state.test.sum;\r\n                for(let i=0;i<sum.length;i++){\r\n                    let temp=sum[i].imgFile.fileUrl;\r\n                    if(temp[0]==this.imgUrl){\r\n                        return sum[i].hotSpots;\r\n                    }\r\n                }\r\n                return [];\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            imgUrl(newvalue) {\r\n                document.getElementById('container').innerHTML=\"\";\r\n                this.$store.commit('clearTarget');\r\n                this.$store.commit('clearHotSpots');\r\n                this.$store.commit('clearHotUrl');\r\n                this.$store.commit('clearImgHotSpots');\r\n                this.init(newvalue);\r\n                this.animate();\r\n            },\r\n            //确认提交按钮后触发的事件逻辑,找出所有的热点，注意这里的热点位置信息需要转换(转换关系1.25倍)\r\n            isSubmit(){\r\n                let children=scene.children;\r\n                let target=this.$store.state.test.target;\r\n                let sprites=[];\r\n                let k=0;\r\n                for(let i=0,len=children.length;i<len;i++){\r\n                    if(children[i].type.toLowerCase()==='sprite'){\r\n                        let panAndTilt=[-children[i].position.x*2.5,children[i].position.y*2.5];\r\n                        let position=[children[i].position.x,children[i].position.y];\r\n                        sprites.push({'panAndTilt':panAndTilt,'position':position,'target':target[k++]});\r\n                    }\r\n                }\r\n                //提交到state中\r\n                this.$store.dispatch('hotSpots',{sprites:sprites});\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init(this.imgUrl);\r\n            this.animate();\r\n        },\r\n\r\n        methods: {\r\n            init(imgurl) {\r\n                if(imgurl.length>1){\r\n                    alert(\"抱歉，一张图请选择panorama1，六张图请选择panorama6且只支持cubeFaces\");\r\n                    return;\r\n                }\r\n                let container = '';\r\n                container = document.getElementById('container');\r\n                scene = new THREE.Scene();\r\n                camera = new THREE.PerspectiveCamera(75, (window.innerWidth-340) / (window.innerHeight-90), 0.1, 600);\r\n                camera.target = new THREE.Vector3(0, 0, 1);\r\n                 camera.position.z=37;\r\n                const geometry = new THREE.PlaneGeometry(80,40);\r\n                const material = new THREE.MeshBasicMaterial({\r\n                    map: new THREE.TextureLoader().load(imgurl[0])\r\n                });\r\n                mesh = new THREE.Mesh(geometry, material);\r\n                scene.add(mesh);\r\n\r\n                let draw=this.drawedHotspots;\r\n                for(let i=0,len=draw.length;i<len;i++){\r\n                    let position=draw[i].position;\r\n                    let canvas = document.createElement('canvas');\r\n                    canvas.style.backgroundColor = 'rgba(255,255,255,0)';\r\n                    let context = canvas.getContext('2d');\r\n                    canvas.width = 128;\r\n                    canvas.height = 128;\r\n                    let img = new Image();\r\n                    img.src = 'static/textures/hotspot.svg';\r\n                    img.onload = function () {\r\n                        context.drawImage(img, 0, 0);\r\n                        let texture = new THREE.Texture(canvas);\r\n                        texture.needsUpdate = true;\r\n                        texture.minFilter = THREE.LinearFilter;\r\n                        var spriteMaterial = new THREE.SpriteMaterial({\r\n                            map: texture,\r\n                            transparent: false\r\n                        });\r\n                        var sprite = new THREE.Sprite(spriteMaterial);\r\n                        sprite.scale.set(2,2,2);\r\n                        let rate = 1;\r\n                        var endV = new THREE.Vector3(position[0] * rate, position[1] * rate, 0.00001);\r\n                        sprite.position.copy(endV);\r\n                        scene.add(sprite);\r\n                    }\r\n\r\n                }\r\n\r\n                renderer = new THREE.WebGLRenderer();\r\n                renderer.setPixelRatio(window.devicePixelRatio);\r\n                renderer.setSize(window.innerWidth-340, window.innerHeight-90);\r\n                container.appendChild(renderer.domElement);\r\n                //这里触发\r\n                document.getElementsByTagName('canvas')[0].addEventListener('wheel', this.onDocumentMouseWheel, false);\r\n                window.addEventListener('resize', this.onWindowResize, false);\r\n                document.getElementsByTagName('canvas')[0].addEventListener('mousedown',this.onDocumentMouseDown,false);\r\n            },\r\n            onDocumentMouseDown(event){\r\n                if (this.$store.state.test.imgType === 'Flat') {\r\n                    event.preventDefault();\r\n                    let vector = new THREE.Vector3();//三维坐标对象\r\n                    vector.set(\r\n                        //注意：这里是根据render的size来确定的\r\n                        ((event.clientX - 320) / (window.innerWidth - 340)) * 2 - 1,\r\n                        -((event.clientY - 70) / (window.innerHeight - 90)) * 2 + 1,\r\n                        0.5);\r\n                    vector.unproject(camera);\r\n                    let raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\r\n                    let intersects = raycaster.intersectObjects(scene.children);\r\n                    //如果绘制热点属于激活状态\r\n                    if (this.$store.state.test.isHotspot) {\r\n                        if (intersects.length > 0) {\r\n                            var selected = intersects[0];//取第一个物体\r\n                            console.log(intersects);\r\n                            let startV = selected.point;\r\n                            xPositionArr.push(selected.point.x);\r\n                            //console.log(\"x坐标:\" + xPositionArr);\r\n                            yPositionArr.push(selected.point.y);\r\n                            //console.log(\"y坐标:\" + yPositionArr);\r\n                            zPositionArr.push(selected.point.z);\r\n                            //console.log(\"z坐标:\" + zPositionArr);\r\n                        }\r\n                        if (xPositionArr.length == 3) {\r\n                            document.getElementById('container').style.cursor = 'default';\r\n                            this.$store.dispatch('isHotspot');\r\n                            let xAverage = (xPositionArr[0] + xPositionArr[1] + xPositionArr[2]) / 3;\r\n                            let yAverage = (yPositionArr[0] + yPositionArr[1] + yPositionArr[2]) / 3;\r\n                            let zAverage = (zPositionArr[0] + zPositionArr[1] + zPositionArr[2]) / 3;\r\n                            console.log('xAverage'+':'+xAverage+' '+'yAverage: '+yAverage+'zAverage: '+zAverage);\r\n                            let canvas = document.createElement('canvas');\r\n                            canvas.style.backgroundColor = 'rgba(255,255,255,0)';\r\n                            let context = canvas.getContext('2d');\r\n                            canvas.width = 128;\r\n                            canvas.height = 128;\r\n                            let img = new Image();\r\n                            img.src = 'static/textures/hotspot.svg';\r\n                            img.onload = function () {\r\n                                context.drawImage(img, 0, 0);\r\n                                let texture = new THREE.Texture(canvas);\r\n                                texture.needsUpdate = true;\r\n                                texture.minFilter = THREE.LinearFilter;\r\n                                var spriteMaterial = new THREE.SpriteMaterial({\r\n                                    map: texture,\r\n                                    transparent: false\r\n                                });\r\n                                var sprite = new THREE.Sprite(spriteMaterial);\r\n                                sprite.scale.set(2,2,2);\r\n                                let rate = 1;\r\n                                var endV = new THREE.Vector3(xAverage * rate, yAverage * rate, 0.00001);\r\n                                sprite.position.copy(endV);\r\n                                scene.add(sprite);\r\n                            }\r\n\r\n                            xPositionArr = [];\r\n                            yPositionArr = [];\r\n                            zPositionArr = [];\r\n                        }\r\n                        //移除热点\r\n                    } else {\r\n                        if (intersects.length > 0) {\r\n                            const target = intersects[0];\r\n                            try {\r\n                                if (target.object && target.object.type.length > 0) {\r\n                                    if (target.object.type.toLowerCase() == \"sprite\") {\r\n                                        scene.remove(target.object);\r\n                                    }\r\n                                }\r\n                            } catch (e) {\r\n                                console.log(e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                isUserInteracting = true;\r\n                onPointerDownPointerX = event.clientX;\r\n                onPointerDownLon = lon;\r\n            },\r\n            onDocumentMouseMove(event){\r\n                if (isUserInteracting === true) {\r\n                    lon = (onPointerDownPointerX - event.clientX) * 0.1;\r\n                    mesh.position.x=-lon;\r\n                }\r\n            },\r\n            onDocumentMouseUp(){\r\n              isUserInteracting=false;\r\n            },\r\n            onWindowResize() {\r\n                camera.aspect = (window.innerWidth)/(window.innerHeight);\r\n                camera.updateProjectionMatrix();\r\n                renderer.setSize(window.innerWidth, window.innerHeight);\r\n            },\r\n            onDocumentMouseWheel(event) {\r\n                camera.fov += event.deltaY * 0.05;\r\n                if(camera.fov>=10&&camera.fov<=150){\r\n                    camera.updateProjectionMatrix();\r\n                }\r\n            },\r\n            animate() {\r\n                if(this.imgUrl.length>1){\r\n                    return;\r\n                }\r\n                this.update();\r\n                requestAnimationFrame(this.animate);\r\n\r\n            },\r\n            update() {\r\n                camera.lookAt(camera.target);\r\n                renderer.render(scene, camera);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/editor/Flat.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panoramaContent\",attrs:{\"id\":\"container\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-61159774\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/editor/Flat.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-61159774\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Flat.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Flat.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Flat.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61159774\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Flat.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-61159774\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/editor/Flat.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"inputbox\"}},[_c('h4',[_vm._v(\"新建项目\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.shortName),expression:\"shortName\"}],attrs:{\"placeholder\":\"请输入项目名称\"},domProps:{\"value\":(_vm.shortName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.shortName=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"queryBox\"},[_c('input',{attrs:{\"id\":\"queryInput\",\"placeholder\":\"输入公司位置打开地图\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\",\"id\":\"startQuery\"}},[_vm._v(\"搜索\")]),_vm._v(\" \"),_vm._m(0)],1),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"hidden\",\"id\":\"latitude\"}}),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"hidden\",\"id\":\"longitude\"}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"companyName\"},[_c('input',{attrs:{\"type\":\"button\",\"id\":\"submitSite\",\"value\":\"提交\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mapBox mb1\"},[_c('div',{attrs:{\"id\":\"mapcontainer\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-619960a0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/editor/AddProject.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-619960a0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./AddProject.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AddProject.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AddProject.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-619960a0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./AddProject.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-619960a0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/editor/AddProject.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"app-container\">\r\n      <equirectangular v-if=\"isEquirectangular\"></equirectangular>  <!--矩形球面-->\r\n      <cube-faces v-if=\"isCubeFaces\"></cube-faces>   <!--立方面片-->\r\n      <cylindrical v-if=\"isCylindrical\"></cylindrical>  <!--圆柱型-->\r\n      <flat v-if=\"isFlat\"></flat>  <!--平板图-->\r\n      <!--<add-project v-if=\"isAddProject\"></add-project>-->\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n    import Equirectangular from \"./Equirectangular\";\r\n    import CubeFaces from \"./CubeFaces\";\r\n    import Cylindrical from \"./Cylindrical\";\r\n    import Flat from \"./Flat\";\r\n    import AddProject from \"./AddProject\";\r\n\r\n    export default {\r\n        components: {\r\n            Flat,\r\n            Cylindrical,\r\n            CubeFaces,\r\n            Equirectangular,\r\n            AddProject,\r\n        },\r\n        name: \"index\",\r\n        mounted(){\r\n            // 从url中获取项目id\r\n            let viewNo=this.$route.query.viewNo;\r\n            this.$store.commit('saveViewNo',{viewNo:viewNo});\r\n            console.log(viewNo);\r\n        },\r\n        computed:{\r\n            isEquirectangular(){\r\n                if(this.$store.state.test.imgType=='Auto'||this.$store.state.test.imgType=='Equirectangular'){\r\n                    return true;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            isCubeFaces(){\r\n                if(this.$store.state.test.imgType=='Cube Faces'){\r\n                    return true;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            isCylindrical(){\r\n                if(this.$store.state.test.imgType=='Cylindrical'){\r\n                    return true;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            isFlat(){\r\n                if(this.$store.state.test.imgType=='Flat'){\r\n                    return true;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            isAddProject(){\r\n                return this.$store.state.test.isAddProject;\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/editor/index.vue","<template>\r\n    <div id=\"inputbox\">\r\n        <h4>新建项目</h4>\r\n        <input v-model=\"shortName\" placeholder=\"请输入项目名称\">\r\n        <div class=\"queryBox\">\r\n            <input id=\"queryInput\" placeholder=\"输入公司位置打开地图\">\r\n            <!--<input type=\"button\" id=\"startQuery\" value=\"搜索\">-->\r\n            <el-button type=\"primary\" plain id=\"startQuery\">搜索</el-button>\r\n            <div class=\"companyName\">\r\n                <input type=\"button\" id=\"submitSite\" value=\"提交\">\r\n            </div>\r\n        </div>\r\n        <div class=\"mapBox mb1\">\r\n            <div id=\"mapcontainer\">\r\n\r\n            </div>\r\n        </div>\r\n        <input type=\"hidden\" id=\"latitude\">\r\n        <input type=\"hidden\" id=\"longitude\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"add-project\"\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/editor/AddProject.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[(_vm.isEquirectangular)?_c('equirectangular'):_vm._e(),_vm._v(\" \"),(_vm.isCubeFaces)?_c('cube-faces'):_vm._e(),_vm._v(\" \"),(_vm.isCylindrical)?_c('cylindrical'):_vm._e(),_vm._v(\" \"),(_vm.isFlat)?_c('flat'):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e7de251a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/editor/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e7de251a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/editor/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}